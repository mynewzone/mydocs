From: =?gb2312?B?0tHTySBJbnRlcm5ldCBFeHBsb3JlciAxMSCxo7Tm?=
Subject: =?gb2312?B?o6hzb2xyz7XB0DrO5aOpIHNvbHK2qMqxyrXKsdbYvajL99L9us3U9g==?=
	=?gb2312?B?wb+4/NDCLVNpbXBsZUxpZmUtNTFDVE+yqb/N?=
Date: Fri, 7 Sep 2018 10:16:20 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01D44693.D2A320F0"
X-MimeOLE: Produced By Microsoft MimeOLE

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://blog.51cto.com/simplelife/1864287

=EF=BB=BF<!DOCTYPE HTML>
<!DOCTYPE html PUBLIC "" ""><HTML lang=3D"zh-CN"><HEAD><META =
content=3D"IE=3D11.0000"=20
http-equiv=3D"X-UA-Compatible">
    =20
<META charset=3D"UTF-8">    =20
<META http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge">    =20
<META name=3D"viewport" content=3D"width=3Ddevice-width, =
initial-scale=3D1">     <LINK=20
href=3D"/favicon.ico" rel=3D"shortcut icon" type=3D"favicon">        =20
<TITLE>=EF=BC=88solr=E7=B3=BB=E5=88=97:=E4=BA=94=EF=BC=89  =
solr=E5=AE=9A=E6=97=B6=E5=AE=9E=E6=97=B6=E9=87=8D=E5=BB=BA=E7=B4=A2=E5=BC=
=95=E5=92=8C=E5=A2=9E=E9=87=8F=E6=9B=B4=E6=96=B0-SimpleLife-51CTO=E5=8D=9A=
=E5=AE=A2</TITLE>    =20
<META name=3D"keywords" =
content=3D"=E5=90=8C=E6=AD=A5=E6=95=B0=E6=8D=AE,solr,=E5=AE=9A=E6=97=B6=E5=
=90=8C=E6=AD=A5">=20
<META name=3D"description" =
content=3D"=E5=B0=86mysql=E4=B8=AD=E7=9A=84=E6=95=B0=E6=8D=AE=E5=AF=BC=E5=
=85=A5=E5=88=B0=E4=BA=86solr=E4=B8=AD=E4=B9=8B=E5=90=8E=EF=BC=8C=E5=A6=82=
=E6=9E=9C=E6=95=B0=E6=8D=AE=E5=BA=93=E4=B8=AD=E7=9A=84=E6=95=B0=E6=8D=AE=E6=
=9C=89=E5=8F=98=E5=8A=A8=EF=BC=8Csolr=E4=B8=AD=E8=BF=98=E6=98=AF=E7=AC=AC=
=E4=B8=80=E6=AC=A1=E5=AF=BC=E5=85=A5=E7=9A=84=E6=97=A7=E7=9A=84=E6=95=B0=E6=
=8D=AE=EF=BC=8C=E9=82=A3=E8=AF=A5=E5=A6=82=E4=BD=95=E6=98=AF=E5=A5=BD=E5=91=
=A2=EF=BC=9F=E8=AF=A5=E5=A6=82=E4=BD=95=E5=AE=9E=E7=8E=B0mysql=E6=95=B0=E6=
=8D=AE=E5=BA=93=E4=B8=AD=E7=9A=84=E6=95=B0=E6=8D=AE=E5=AE=9A=E6=97=B6=E5=90=
=8C=E6=AD=A5=E5=88=B0solr=E4=B8=AD=E5=91=A2=EF=BC=9F=E4=B8=8B=E9=9D=A2=E5=
=B0=86=E5=81=9A=E8=AF=A6=E7=BB=86=E7=9A=84=E4=BB=8B=E7=BB=8D=E3=80=82=E5=87=
=86=E5=A4=87=E5=B7=A5=E4=BD=9C=E8=A6=81=E5=81=9A=E5=A5=BD=EF=BC=9A&amp;nb=
sp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1=E3=80=81=E4=B8=8B=E8=BD=BDjar=E5=8C=85=
=EF=BC=9Asolr-dataimportscheduler-1.1.jar http://pan.baidu.com/s/1hs">=20
   <LINK =
href=3D"https://static1.51cto.com/edu/blog/css/header.css?v=3D1.0.5.1" =
rel=3D"stylesheet"><LINK=20
href=3D"https://static1.51cto.com/edu/blog/css/other.css?v=3D1.0.3.2" =
rel=3D"stylesheet"><LINK=20
href=3D"https://static1.51cto.com/edu/blog/css/right.css?v=3D1.0.4.7" =
rel=3D"stylesheet"><LINK=20
href=3D"https://static1.51cto.com/edu/blog/css/blog_details.css?v=3D1.0.7=
.2" rel=3D"stylesheet"><LINK=20
href=3D"https://static1.51cto.com/edu/blog/css/highlight.css" =
rel=3D"stylesheet">   =20
=20
<SCRIPT =
src=3D"https://static1.51cto.com/edu/center/js/jquery.min.js"></SCRIPT>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/cookie.js"></SCRIPT>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/login.js?v=3D1.0.0.6"></SCRI=
PT>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/common.js?v=3D1.0.0.8"></SCR=
IPT>

<SCRIPT src=3D"https://static1.51cto.com/edu/blog/js/mbox.js"></SCRIPT>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/follow.js?v=3D1.0.0.8"></SCR=
IPT>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/vip.js?v=3D1.0.0.1"></SCRIPT=
>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/window.js?v=3D1.0.0.1"></SCR=
IPT>

<META name=3D"GENERATOR" content=3D"MSHTML 11.00.10570.1001"></HEAD>=20
<BODY><IMG style=3D"width: 0px; height: 0px; position: absolute;" =
src=3D"https://static1.51cto.com/edu/blog/mobile/images/share_default.jpg=
"=20
border=3D"0"> <!--[if lt IE 9]>=0A=
  <script =
src=3D"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script=
>=0A=
  <script =
src=3D"https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></scr=
ipt>=0A=
<![endif]-->=20
<DIV class=3D"Header">
<DIV class=3D"Page ">
<H1 class=3D"Logo"><A href=3D"http://blog.51cto.com/">Logo</A></H1>
<UL class=3D"Navigates fl">
  <LI><A href=3D"http://blog.51cto.com/">=E9=A6=96=E9=A1=B5</A></LI>
  <LI><A =
href=3D"http://blog.51cto.com/original">=E6=96=87=E7=AB=A0</A></LI>
  <LI><A =
href=3D"http://blog.51cto.com/blog/follow">=E5=85=B3=E6=B3=A8</A></LI>
  <LI><A class=3D"column-stress"=20
  =
href=3D"http://blog.51cto.com/cloumn/index">=E8=AE=A2=E9=98=85=E4=B8=93=E6=
=A0=8F<B></B></A></LI>
  <LI><A =
href=3D"http://blog.51cto.com/expert">=E4=B8=93=E5=AE=B6</A></LI></UL>
<UL class=3D"Navigates Navigates-right fr">
  <LI class=3D"more maps"><A =
href=3D"javascript:void(0);">=E7=BD=91=E7=AB=99=E5=AF=BC=E8=88=AA</A>
  <DIV><A href=3D"http://edu.51cto.com/" =
target=3D"_blank">=E5=AD=A6=E9=99=A2</A><A =
href=3D"http://blog.51cto.com/"=20
  target=3D"_blank">=E5=8D=9A=E5=AE=A2</A><A =
href=3D"http://down.51cto.com/"=20
  target=3D"_blank">=E4=B8=8B=E8=BD=BD</A><A =
href=3D"http://home.51cto.com/"=20
  target=3D"_blank">=E5=AE=B6=E5=9B=AD</A><A =
href=3D"http://bbs.51cto.com/" =
target=3D"_blank">=E8=AE=BA=E5=9D=9B</A><A=20
  href=3D"http://x.51cto.com/" =
target=3D"_blank">CTO=E8=AE=AD=E7=BB=83=E8=90=A5</A><A =
href=3D"http://club.51cto.com/?blog"=20
  target=3D"_blank">CTO=E4=BF=B1=E4=B9=90=E9=83=A8</A><A =
href=3D"http://wot.51cto.com/"=20
  target=3D"_blank">WOT</A><A href=3D"http://www.51cto.com/"=20
  target=3D"_blank">51CTO</A><I class=3D"arrow"></I>         </DIV></LI>
  <LI><A =
href=3D"http://home.51cto.com/user/register?reback=3Dhttp%253A%252F%252Fb=
log.51cto.com%252Fsimplelife%252F1864287"=20
  target=3D"_self">=E6=B3=A8=E5=86=8C</A></LI>
  <LI class=3D"login"><A =
href=3D"http://blog.51cto.com/user/login?reback=3Dhttp%3A%2F%2Fblog.51cto=
.com%2Fsimplelife%2F1864287"=20
  target=3D"_self">=E7=99=BB=E5=BD=95</A></LI>
  <LI class=3D"mRead"><A =
href=3D"javascript:;">=E6=89=8B=E6=9C=BA=E9=98=85=E8=AF=BB</A>
  <DIV><IMG =
src=3D"https://static1.51cto.com/edu/blog/images/blog_qr.png">
  =
<P>=E6=89=AB=E4=B8=80=E6=89=AB=E4=BD=93=E9=AA=8C=E6=89=8B=E6=9C=BA=E9=98=85=
=E8=AF=BB</P><I class=3D"arrow"></I>           </DIV></LI>
  <LI class=3D"search"><A href=3D"http://blog.51cto.com/search/index"=20
  target=3D"_self">=E6=90=9C=E7=B4=A2</A></LI>
  <LI class=3D"write"><A onclick=3D"Login()" =
href=3D"javascript:;">=E5=86=99=E6=96=87=E7=AB=A0</A></LI></UL>
<DIV class=3D"clear"></DIV></DIV></DIV>
<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/mobile/js/lib/box.js"></SCRIPT>=

=20
<SCRIPT>=0A=
    var isLogin =3D '0';=0A=
    var userId =3D '';=0A=
    var imgpath =3D 'http://i2.51cto.com/';=0A=
    var BLOG_URL =3D 'http://blog.51cto.com/';=0A=
    var msg_num_url =3D '/index/ajax-msg-num';=0A=
    $('.msg-follow, .msg-follow-max').eq(1).css({top: '91px'});=0A=
    $('.msg-follow, .msg-follow-max').eq(2).css({top: '121px'});=0A=
    setTimeout(function(){=0A=
            $.ajax({=0A=
                url:msg_num_url,=0A=
                type:"get",=0A=
                dataType:'json',=0A=
                success:function(res){=0A=
                    if(res.status =3D=3D '0'){=0A=
                       //=0A=
                       var hasNewMsg =3D false;=0A=
                       if(res.data.msgNum > 0 && !$('#myMsg =
i').hasClass('dot')){=0A=
                            $('#myMsg i').addClass('dot');=0A=
                            hasNewMsg =3D true;=0A=
                       }=0A=
                       if(res.data.notifyNum > 0 && !$('#myNotify =
i').hasClass('dot')){=0A=
                           $('#myNotify i').addClass('dot');=0A=
                           hasNewMsg =3D true;=0A=
                       }=0A=
                       if(res.data.recommend_new > 0 && !$('#myRecommend =
i').hasClass('dot')){=0A=
                           $('#myRecommend i').addClass('dot');=0A=
                           hasNewMsg =3D true;=0A=
                       }=0A=
                       if(hasNewMsg && !$('#myAllMsg =
i').hasClass('dot')){=0A=
                           $('#myAllMsg i').addClass('dot');=0A=
                       }=0A=
                    }=0A=
=0A=
                }=0A=
            });=0A=
    },70);=0A=
    //=E5=B9=BF=E5=91=8A=E5=9B=BE=0A=
 $(function(){=0A=
var timestamp =3D parseInt(new Date().getTime()/1000);=0A=
var timebegin =3D parseInt(new Date("2018/08/15 =
09:00:00").getTime()/1000);=0A=
var timeover =3D parseInt(new Date("2018/9/1 00:00:00").getTime()/1000);=0A=
var timespe =3D parseInt(new Date("2018/08/31 00:00:00").getTime()/1000);=0A=
 if(timestamp>timebegin && timestamp<timeover){=0A=
     var popimg =3D timestamp<timespe ? =
'22/0f168d54960544eed5629f09dfa9d20f.png':'30/92c5f8eb60a07817307058a03bd=
d9996.png';=0A=
     new AutoAD({=0A=
      ADD:$('<a href=3D"http://blog.51cto.com/cloumn/index?tanc" =
class=3D"closeMB" target=3D"_blank" styel=3D"display:block;"><img =
src=3D"http://i2.51cto.com/images/blog/201808/'+ popimg +'"></a><a =
class=3D"closeMB" style=3D"position: absolute;right:2px;top: 3px;width: =
50px;height: 40px;cursor: pointer;" href=3D"javascript:;"></a>'),=0A=
      W:500,=0A=
      H:400,=0A=
      cookie:'blog_activity_blog1',=0A=
      mask:"#000",=0A=
      ts:21600,=0A=
      noCBtn: true=0A=
    }) =0A=
						    }=0A=
						  })    =0A=
=0A=
</SCRIPT>
 =20
<DIV class=3D"Content-box"><LINK =
href=3D"https://static1.51cto.com/edu/blog/css/mdeShow.css?v=3D1.0.0.9"=20
rel=3D"stylesheet">   <LINK =
href=3D"http://blog.51cto.com/static/js/ueditor1.4.3/prism.css?v=3D1.0.1"=
=20
rel=3D"stylesheet">  =20
<SCRIPT =
src=3D"http://blog.51cto.com/static/js/ueditor1.4.3/prism.js?v=3D1.0.1" =
type=3D"text/javascript" charset=3D"utf-8"></SCRIPT>
 <LINK href=3D"https://static1.51cto.com/edu/blog/css/tinyscrollbar.css" =
rel=3D"stylesheet">=20
<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/jquery.tinyscrollbar.js" =
type=3D"text/javascript"></SCRIPT>
=20
<DIV class=3D"Content Index" style=3D"padding-bottom: 50px;">
<DIV class=3D"Page M764"><!-- left start -->		=20
<DIV class=3D"artical-Left-blog">
<DIV class=3D"status"><A class=3D"tab_name =
original">=E5=8E=9F=E5=88=9B</A>							 </DIV>
<H1 =
class=3D"artical-title">=EF=BC=88solr=E7=B3=BB=E5=88=97:=E4=BA=94=EF=BC=89=
  =
solr=E5=AE=9A=E6=97=B6=E5=AE=9E=E6=97=B6=E9=87=8D=E5=BB=BA=E7=B4=A2=E5=BC=
=95=E5=92=8C=E5=A2=9E=E9=87=8F=E6=9B=B4=E6=96=B0</H1>
<DIV class=3D"artical-title-list">
<DIV class=3D"is-vip-bg-6 fl"><A class=3D"a-img" =
href=3D"http://blog.51cto.com/simplelife"=20
target=3D"_blank"><IMG class=3D"is-vip-img is-vip-img-4" =
src=3D"http://ucenter.51cto.com/images/noavatar_middle.gif"=20
data-uid=3D"9954761"></A>				 </DIV><A class=3D"name fl" =
href=3D"http://blog.51cto.com/simplelife"=20
target=3D"_blank">=E5=85=B4=E8=B6=A3e=E6=97=8F</A>					                	 =
                    <A class=3D"checkFollow-btn on fl"=20
id=3D"checkFollow1_9954761">=E5=85=B3=E6=B3=A8</A>	                	     =
       				 <A class=3D"comment comment-num fr"><FONT=20
class=3D"comment_number">22</FONT>=E4=BA=BA=E8=AF=84=E8=AE=BA</A>				 =
<SPAN class=3D"fr"></SPAN>				 <A=20
class=3D"read fr" =
href=3D"javascript:;">11329=E4=BA=BA=E9=98=85=E8=AF=BB</A>				 <A =
class=3D"time fr" href=3D"javascript:;">2016-10-21=20
16:02:31</A>				=20
<DIV class=3D"clear"></DIV></DIV>
<DIV class=3D"artical-content-bak main-content editor-side-new">
<DIV class=3D"con editor-preview-side" id=3D"result">
<P>=E5=B0=86mysql=E4=B8=AD=E7=9A=84=E6=95=B0=E6=8D=AE=E5=AF=BC=E5=85=A5=E5=
=88=B0=E4=BA=86solr=E4=B8=AD=E4=B9=8B=E5=90=8E=EF=BC=8C=E5=A6=82=E6=9E=9C=
=E6=95=B0=E6=8D=AE=E5=BA=93=E4=B8=AD=E7=9A=84=E6=95=B0=E6=8D=AE=E6=9C=89=E5=
=8F=98=E5=8A=A8=EF=BC=8Csolr=E4=B8=AD=E8=BF=98=E6=98=AF=E7=AC=AC=E4=B8=80=
=E6=AC=A1=E5=AF=BC=E5=85=A5=E7=9A=84=E6=97=A7=E7=9A=84=E6=95=B0=E6=8D=AE=EF=
=BC=8C=E9=82=A3=E8=AF=A5=E5=A6=82=E4=BD=95=E6=98=AF=E5=A5=BD=E5=91=A2=EF=BC=
=9F=E8=AF=A5=E5=A6=82=E4=BD=95=E5=AE=9E=E7=8E=B0mysql=E6=95=B0=E6=8D=AE=E5=
=BA=93=E4=B8=AD=E7=9A=84=E6=95=B0=E6=8D=AE=E5=AE=9A=E6=97=B6=E5=90=8C=E6=AD=
=A5=E5=88=B0solr=E4=B8=AD=E5=91=A2=EF=BC=9F=E4=B8=8B=E9=9D=A2=E5=B0=86=E5=
=81=9A=E8=AF=A6=E7=BB=86=E7=9A=84=E4=BB=8B=E7=BB=8D=E3=80=82<BR></P>
<P>=E5=87=86=E5=A4=87=E5=B7=A5=E4=BD=9C=E8=A6=81=E5=81=9A=E5=A5=BD=EF=BC=9A=
<BR></P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;1=E3=80=81=E4=B8=8B=E8=BD=BDjar=E5=8C=85=EF=BC=
=9Asolr-dataimportscheduler-1.1.jar <A =
href=3D"http://pan.baidu.com/s/1hsySs2S"=20
target=3D"_blank">http://pan.baidu.com/s/1hsySs2S</A></P>
<P>&nbsp; &nbsp; =
&nbsp;2=E3=80=81=E6=96=B0=E5=BB=BA=E6=96=87=E4=BB=B6=EF=BC=9Adataimport.p=
roperties=EF=BC=8C=E6=96=87=E4=BB=B6=E5=A4=8D=E5=88=B6=E4=B8=8B=E9=9D=A2=E7=
=9A=84=E5=B0=B1=E5=A5=BD=EF=BC=8C=E5=85=B7=E4=BD=93=E9=85=8D=E7=BD=AE=E5=90=
=AB=E4=B9=89=E5=B7=B2=E7=BB=99=E5=87=BA=E6=B3=A8=E9=87=8A=EF=BC=9A</P>
<PRE =
class=3D"brush:xml;toolbar:false">#######################################=
##########=0A=
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#=0A=
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataimport&nbsp;scheduler&nbsp=
;properties&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#=0A=
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#=0A=
#################################################=0A=
=0A=
#&nbsp;&nbsp;to&nbsp;sync&nbsp;or&nbsp;not&nbsp;to&nbsp;sync=0A=
#&nbsp;&nbsp;1&nbsp;-&nbsp;active;&nbsp;anything&nbsp;else&nbsp;-&nbsp;in=
active=0A=
#&nbsp;=E8=BF=99=E9=87=8C=E7=9A=84=E9=85=8D=E7=BD=AE=E4=B8=8D=E7=94=A8=E4=
=BF=AE=E6=94=B9=0A=
syncEnabled=3D1=0A=
=0A=
#&nbsp;&nbsp;which&nbsp;cores&nbsp;to&nbsp;schedule=0A=
#&nbsp;&nbsp;in&nbsp;a&nbsp;multi-core&nbsp;environment&nbsp;you&nbsp;can=
&nbsp;decide&nbsp;which&nbsp;cores&nbsp;you&nbsp;want&nbsp;syncronized=0A=
#&nbsp;&nbsp;leave&nbsp;empty&nbsp;or&nbsp;comment&nbsp;it&nbsp;out&nbsp;=
if&nbsp;using&nbsp;single-core&nbsp;deployment=0A=
#&nbsp;&nbsp;=E4=BF=AE=E6=94=B9=E6=88=90=E4=BD=A0=E6=89=80=E4=BD=BF=E7=94=
=A8=E7=9A=84core=EF=BC=8C=E6=88=91=E8=BF=99=E9=87=8C=E6=98=AF=E6=88=91=E8=
=87=AA=E5=AE=9A=E4=B9=89=E7=9A=84core=EF=BC=9Asimple=0A=
syncCores=3Dsimple=0A=
=0A=
#&nbsp;&nbsp;solr&nbsp;server&nbsp;name&nbsp;or&nbsp;IP&nbsp;address=0A=
#&nbsp;&nbsp;[defaults&nbsp;to&nbsp;localhost&nbsp;if&nbsp;empty]=0A=
=E8=BF=99=E4=B8=AA=E4=B8=80=E8=88=AC=E9=83=BD=E6=98=AFlocalhost=E4=B8=8D=E4=
=BC=9A=E5=8F=98=0A=
server=3Dlocalhost=0A=
=0A=
#&nbsp;&nbsp;solr&nbsp;server&nbsp;port=0A=
#&nbsp;&nbsp;[defaults&nbsp;to&nbsp;80&nbsp;if&nbsp;empty]=0A=
#&nbsp;&nbsp;=E5=AE=89=E8=A3=85solr=E7=9A=84tomcat=E7=AB=AF=E5=8F=A3=EF=BC=
=8C=E5=A6=82=E6=9E=9C=E4=BD=A0=E4=BD=BF=E7=94=A8=E7=9A=84=E6=98=AF=E9=BB=98=
=E8=AE=A4=E7=9A=84=E7=AB=AF=E5=8F=A3=EF=BC=8C=E5=B0=B1=E4=B8=8D=E7=94=A8=E6=
=94=B9=E4=BA=86=EF=BC=8C=E5=90=A6=E5=88=99=E6=94=B9=E6=88=90=E8=87=AA=E5=B7=
=B1=E7=9A=84=E7=AB=AF=E5=8F=A3=E5=B0=B1=E5=A5=BD=E4=BA=86=0A=
port=3D8080=0A=
=0A=
#&nbsp;&nbsp;application&nbsp;name/context=0A=
#&nbsp;&nbsp;[defaults&nbsp;to&nbsp;current&nbsp;ServletContextListener's=
&nbsp;context&nbsp;(app)&nbsp;name]=0A=
#&nbsp;&nbsp;=E8=BF=99=E9=87=8C=E9=BB=98=E8=AE=A4=E4=B8=8D=E6=94=B9=0A=
webapp=3Dsolr=0A=
=0A=
#&nbsp;&nbsp;URL&nbsp;params&nbsp;[mandatory]=0A=
#&nbsp;&nbsp;remainder&nbsp;of&nbsp;URL=0A=
#&nbsp;&nbsp;=E8=BF=99=E9=87=8C=E6=94=B9=E6=88=90=E4=B8=8B=E9=9D=A2=E7=9A=
=84=E5=BD=A2=E5=BC=8F=EF=BC=8Csolr=E5=90=8C=E6=AD=A5=E6=95=B0=E6=8D=AE=E6=
=97=B6=E8=AF=B7=E6=B1=82=E7=9A=84=E9=93=BE=E6=8E=A5=0A=
params=3D/dataimport?command=3Ddelta-import&amp;clean=3Dfalse&amp;commit=3D=
true=0A=
=0A=
#&nbsp;&nbsp;schedule&nbsp;interval=0A=
#&nbsp;&nbsp;number&nbsp;of&nbsp;minutes&nbsp;between&nbsp;two&nbsp;runs=0A=
#&nbsp;&nbsp;[defaults&nbsp;to&nbsp;30&nbsp;if&nbsp;empty]=0A=
#=E8=BF=99=E9=87=8C=E6=98=AF=E8=AE=BE=E7=BD=AE=E5=AE=9A=E6=97=B6=E4=BB=BB=
=E5=8A=A1=E7=9A=84=EF=BC=8C=E5=8D=95=E4=BD=8D=E6=98=AF=E5=88=86=E9=92=9F=EF=
=BC=8C=E4=B9=9F=E5=B0=B1=E6=98=AF=E5=A4=9A=E9=95=BF=E6=97=B6=E9=97=B4=E4=BD=
=A0=E6=A3=80=E6=B5=8B=E4=B8=80=E6=AC=A1=E6=95=B0=E6=8D=AE=E5=90=8C=E6=AD=A5=
=EF=BC=8C=E6=A0=B9=E6=8D=AE=E9=A1=B9=E7=9B=AE=E9=9C=80=E6=B1=82=E4=BF=AE=E6=
=94=B9=0A=
#&nbsp;&nbsp;=E5=BC=80=E5=A7=8B=E6=B5=8B=E8=AF=95=E7=9A=84=E6=97=B6=E5=80=
=99=E4=B8=BA=E4=BA=86=E6=96=B9=E4=BE=BF=E7=9C=8B=E5=88=B0=E6=95=88=E6=9E=9C=
=EF=BC=8C=E6=97=B6=E9=97=B4=E5=8F=AF=E4=BB=A5=E8=AE=BE=E7=BD=AE=E7=9F=AD=E4=
=B8=80=E7=82=B9=0A=
interval=3D1=0A=
=0A=
#&nbsp;&nbsp;=E9=87=8D=E5=81=9A=E7=B4=A2=E5=BC=95=E7=9A=84=E6=97=B6=E9=97=
=B4=E9=97=B4=E9=9A=94=EF=BC=8C=E5=8D=95=E4=BD=8D=E5=88=86=E9=92=9F=EF=BC=8C=
=E9=BB=98=E8=AE=A47200=EF=BC=8C=E5=8D=B35=E5=A4=A9;&nbsp;=0A=
#&nbsp;&nbsp;=E4=B8=BA=E7=A9=BA,=E4=B8=BA0,=E6=88=96=E8=80=85=E6=B3=A8=E9=
=87=8A=E6=8E=89:=E8=A1=A8=E7=A4=BA=E6=B0=B8=E4=B8=8D=E9=87=8D=E5=81=9A=E7=
=B4=A2=E5=BC=95=0A=
reBuildIndexInterval=3D7200=0A=
=0A=
#&nbsp;&nbsp;=E9=87=8D=E5=81=9A=E7=B4=A2=E5=BC=95=E7=9A=84=E5=8F=82=E6=95=
=B0=0A=
reBuildIndexParams=3D/select?qt=3D/dataimport&amp;command=3Dfull-import&a=
mp;clean=3Dtrue&amp;commit=3Dtrue=0A=
=0A=
#&nbsp;&nbsp;=E9=87=8D=E5=81=9A=E7=B4=A2=E5=BC=95=E6=97=B6=E9=97=B4=E9=97=
=B4=E9=9A=94=E7=9A=84=E8=AE=A1=E6=97=B6=E5=BC=80=E5=A7=8B=E6=97=B6=E9=97=B4=
=EF=BC=8C=E7=AC=AC=E4=B8=80=E6=AC=A1=E7=9C=9F=E6=AD=A3=E6=89=A7=E8=A1=8C=E7=
=9A=84=E6=97=B6=E9=97=B4=3DreBuildIndexBeginTime+reBuildIndexInterval*60*=
1000=EF=BC=9B=0A=
#&nbsp;&nbsp;=E4=B8=A4=E7=A7=8D=E6=A0=BC=E5=BC=8F=EF=BC=9A2012-04-11&nbsp=
;03:10:00&nbsp;=E6=88=96=E8=80=85&nbsp;&nbsp;03:10:00=EF=BC=8C=E5=90=8E=E4=
=B8=80=E7=A7=8D=E4=BC=9A=E8=87=AA=E5=8A=A8=E8=A1=A5=E5=85=A8=E6=97=A5=E6=9C=
=9F=E9=83=A8=E5=88=86=E4=B8=BA=E6=9C=8D=E5=8A=A1=E5=90=AF=E5=8A=A8=E6=97=B6=
=E7=9A=84=E6=97=A5=E6=9C=9F=0A=
reBuildIndexBeginTime=3D03:10:00</PRE>
<P><BR></P>
<P>=E5=87=86=E5=A4=87=E5=A5=BD=E8=BF=99=E4=B8=80=E4=B8=AAjar=E5=8C=85=E5=92=
=8Cdataimport.properties=E6=96=87=E4=BB=B6=EF=BC=8C=E5=BC=80=E5=A7=8B=E4=B8=
=8B=E9=9D=A2=E7=9A=84=E6=AD=A5=E9=AA=A4=E2=80=A6=E2=80=A6</P>
<P><STRONG>=E6=AD=A5=E9=AA=A4=E4=B8=80=EF=BC=9A</STRONG>=E5=B0=86solr-dat=
aimportscheduler-1.1.jar=E5=8C=85=E5=A4=8D=E5=88=B6=E5=88=B0apache-tomcat=
-7.0.72\webapps\solr\WEB-INF\lib=E4=B8=AD=E3=80=82</P>
<P><STRONG>=E6=AD=A5=E9=AA=A4=E4=BA=8C=EF=BC=9A</STRONG>=E5=9C=A8apache-t=
omcat-7.0.72\webapps\solr\WEB-INF=E7=9B=AE=E5=BD=95=E4=B8=8B=E7=9A=84web.=
xml=E6=96=87=E4=BB=B6=E4=B8=AD=E6=B7=BB=E5=8A=A0=E7=9B=91=E5=90=AC=E9=85=8D=
=E7=BD=AE=EF=BC=9A</P>
<PRE class=3D"brush:xml;toolbar:false">&nbsp;&nbsp;&nbsp;&lt;listener&gt;=0A=
	&nbsp;&lt;listener-class&gt;=0A=
	=
&nbsp;&nbsp;&nbsp;&nbsp;org.apache.solr.handler.dataimport.scheduler.Appl=
icationListener=0A=
	&nbsp;&lt;/listener-class&gt;=0A=
&nbsp;&nbsp;&nbsp;&lt;/listener&gt;</PRE>
<P>=E6=B8=A9=E9=A6=A8=E6=8F=90=E7=A4=BA=EF=BC=9A</P>
<P>&nbsp;=20
&nbsp;=E5=A4=8D=E5=88=B6=E4=B8=8A=E9=9D=A2=E8=BF=99=E6=AE=B5=E6=97=B6=E6=B3=
=A8=E6=84=8Forg.apache.solr.handler.dataimport.scheduler.ApplicationListe=
ner=E5=90=8E=E9=9D=A2=E4=B8=8D=E8=A6=81=E6=9C=89=E7=A9=BA=E6=A0=BC=EF=BC=8C=
=E4=B8=8D=E7=84=B6=E5=90=AF=E5=8A=A8tomcat=E4=BC=9A=E6=9C=89=E5=A5=87=E6=80=
=AA=E7=9A=84=E9=94=99=E8=AF=AF=EF=BC=8C=E5=88=AB=E9=97=AE=E6=88=91=E4=B8=BA=
=E4=BB=80=E4=B9=88=E7=9F=A5=E9=81=93=E7=9A=84<A=20
href=3D"http://img.baidu.com/hi/jx2/j_0066.gif" target=3D"_blank"><IMG =
alt=3D"j_0066.gif"=20
src=3D"http://img.baidu.com/hi/jx2/j_0066.gif"></A></P>
<P><STRONG>=E6=AD=A5=E9=AA=A4=E4=B8=89=EF=BC=9A</STRONG>=E5=9C=A8\solrhom=
e=E7=9B=AE=E5=BD=95=E4=B8=8B=E6=96=B0=E5=BB=BA=E4=B8=80=E4=B8=AAconf=E6=96=
=87=E4=BB=B6=E5=A4=B9=EF=BC=88=E4=B8=8Esimple=E6=96=87=E4=BB=B6=E5=A4=B9=E5=
=90=8C=E7=9B=AE=E5=BD=95=EF=BC=89=EF=BC=8C=E5=B0=86dataimport.properties=E6=
=96=87=E4=BB=B6=E6=94=BE=E5=9C=A8conf=E6=96=87=E4=BB=B6=E5=A4=B9=E4=B8=AD=
=E3=80=82</P>
<P><STRONG>=E6=AD=A5=E9=AA=A4=E5=9B=9B=EF=BC=9A</STRONG>=E9=87=8D=E5=90=AF=
tomcat,=E6=B5=8F=E8=A7=88=E5=99=A8=E8=AE=BF=E9=97=AE=EF=BC=9A<SPAN=20
style=3D"color: rgb(255, 0, 0);">localhost:8080/solr</SPAN><BR></P>
<P><SPAN style=3D"color: rgb(255, 0, 0);"><SPAN style=3D"color: rgb(0, =
0, 0);"><A=20
href=3D"http://s2.51cto.com/wyfs02/M01/89/29/wKioL1gJyleyR_5pAAFYHSuODkU9=
73.png"=20
target=3D"_blank"><IMG title=3D"7.png" =
alt=3D"wKioL1gJyleyR_5pAAFYHSuODkU973.png" =
src=3D"http://s2.51cto.com/wyfs02/M01/89/29/wKioL1gJyleyR_5pAAFYHSuODkU97=
3.png"></A></SPAN></SPAN></P>
<P><SPAN style=3D"color: rgb(255, 0, 0);"><SPAN=20
style=3D"color: rgb(0, 0, 0);"><BR></SPAN></SPAN></P>
<P>=E8=8B=A6=E8=8B=A6=E7=AD=89=E5=BE=85=E4=B8=80=E5=88=86=E9=92=9F=E4=B9=8B=
=E5=90=8E=E2=80=A6=E2=80=A6<A =
href=3D"http://img.baidu.com/hi/jx2/j_0016.gif"=20
target=3D"_blank"><IMG alt=3D"j_0016.gif" =
src=3D"http://img.baidu.com/hi/jx2/j_0016.gif"></A>=EF=BC=8C=E5=86=8D=E6=AC=
=A1=E6=9F=A5=E8=AF=A2=E5=A6=82=E6=9E=9C=E7=9C=8B=E5=88=B0=E6=95=B0=E6=8D=AE=
=E6=94=B9=E8=BF=87=E6=9D=A5=E4=BA=86=EF=BC=8C=E9=82=A3=E4=B9=88=E6=81=AD=E5=
=96=9C=E4=BD=A0=EF=BC=8C=E6=96=B0=E6=8A=80=E8=83=BDget=E2=88=9A=EF=BC=81<=
/P>
<P>=E5=A6=82=E5=9B=BE=EF=BC=9A</P>
<P><A =
href=3D"http://s5.51cto.com/wyfs02/M01/89/29/wKioL1gJy1CAoYX8AAFWTP4JYMA9=
91.png"=20
target=3D"_blank"><IMG title=3D"7.png" =
alt=3D"wKioL1gJy1CAoYX8AAFWTP4JYMA991.png" =
src=3D"http://s5.51cto.com/wyfs02/M01/89/29/wKioL1gJy1CAoYX8AAFWTP4JYMA99=
1.png"></A></P>
<P><BR></P>
<P><BR></P>
<P><SPAN style=3D"color: rgb(255, 0, 0);"><SPAN=20
style=3D"color: rgb(0, 0, 0);"><BR></SPAN></SPAN></P>
<P><SPAN style=3D"color: rgb(255, 0, 0);"><SPAN=20
style=3D"color: rgb(0, 0, 0);"><BR></SPAN></SPAN></P></DIV></DIV>
<DIV=20
class=3D"artical-copyright =
mt26">=C2=A9=E8=91=97=E4=BD=9C=E6=9D=83=E5=BD=92=E4=BD=9C=E8=80=85=E6=89=80=
=E6=9C=89=EF=BC=9A=E6=9D=A5=E8=87=AA51CTO=E5=8D=9A=E5=AE=A2=E4=BD=9C=E8=80=
=85=E5=85=B4=E8=B6=A3e=E6=97=8F=E7=9A=84=E5=8E=9F=E5=88=9B=E4=BD=9C=E5=93=
=81=EF=BC=8C=E5=A6=82=E9=9C=80=E8=BD=AC=E8=BD=BD=EF=BC=8C=E8=AF=B7=E6=B3=A8=
=E6=98=8E=E5=87=BA=E5=A4=84=EF=BC=8C=E5=90=A6=E5=88=99=E5=B0=86=E8=BF=BD=E7=
=A9=B6=E6=B3=95=E5=BE=8B=E8=B4=A3=E4=BB=BB</DIV>
<DIV class=3D"for-tag mt26"><A =
href=3D"http://blog.51cto.com/search/result?q=3D%E5%90%8C%E6%AD%A5%E6%95%=
B0%E6%8D%AE"=20
target=3D"_blank">=E5=90=8C=E6=AD=A5=E6=95=B0=E6=8D=AE</A>															=
									 <A href=3D"http://blog.51cto.com/search/result?q=3Dsolr"=20
target=3D"_blank">solr</A>																								 <A =
href=3D"http://blog.51cto.com/search/result?q=3D%E5%AE%9A%E6%97%B6%E5%90%=
8C%E6%AD%A5"=20
target=3D"_blank">=E5=AE=9A=E6=97=B6=E5=90=8C=E6=AD=A5</A>															=
                				 <A class=3D"last"=20
href=3D"http://blog.51cto.com/simplelife/category10.html"=20
target=3D"_blank"><I></I>solr</A>                				=20
<DIV class=3D"clear"></DIV></DIV>
<DIV class=3D"more-list">
<P class=3D"is-praise fl "><SPAN type=3D"1" userid=3D"9954761"=20
blog_id=3D"1864287">5</SPAN></P>
<DIV class=3D"share-box fr">
<P class=3D"share"><I></I>=E5=88=86=E4=BA=AB</P>
<DIV class=3D"bdsharebuttonbox"><SPAN></SPAN>					   <A =
class=3D"bds_tsina"=20
data-cmd=3D"tsina">=E5=BE=AE=E5=8D=9A</A><A class=3D"bds_sqq" =
data-cmd=3D"sqq">QQ</A><A class=3D"bds_weixin"=20
data-cmd=3D"weixin">=E5=BE=AE=E4=BF=A1</A><IMG =
src=3D"http://blog.51cto.com/qr/qr-url?url=3Dhttp%3A%2F%2Fblog.51cto.com%=
2Fsimplelife%2F1864287">
					 </DIV></DIV>
<P class=3D"favorites favorites-opt fr"><I></I>=E6=94=B6=E8=97=8F</P>
<DIV class=3D"clear"></DIV></DIV>
<DIV class=3D"artical-list"><A =
title=3D"=EF=BC=88solr=E7=B3=BB=E5=88=97:=E5=9B=9B=EF=BC=89=E5=B0=86mysql=
=E6=95=B0=E6=8D=AE=E5=BA=93=E4=B8=AD=E7=9A=84=E6=95=B0=E6=8D=AE=E5=AF=BC=E5=
=85=A5=E5=88=B0solr=E4=B8=AD=E5=8F=8A=E5=88=A0=E9=99=A4solr=E4=B8=AD=E5=AF=
=BC=E5=85=A5=E7=9A=84=E6=95=B0=E6=8D=AE"=20
class=3D"fl" href=3D"http://blog.51cto.com/simplelife/1864154">
						=
=E4=B8=8A=E4=B8=80=E7=AF=87=EF=BC=9A=EF=BC=88solr=E7=B3=BB=E5=88=97:=E5=9B=
=9B=EF=BC=89=E5=B0=86mysql...</A>	            	            					 <A =
title=3D"=E4=B9=9F=E8=B0=88BIO | NIO | AIO =
=EF=BC=88Java=E7=89=88=EF=BC=89"=20
class=3D"fr" =
href=3D"http://blog.51cto.com/simplelife/1871129">=E4=B8=8B=E4=B8=80=E7=AF=
=87=EF=BC=9A=E4=B9=9F=E8=B0=88BIO | NIO |=20
AI...</A>	            					=20
<DIV class=3D"clear"></DIV></DIV>
<DIV class=3D"author-module">
<DIV class=3D"is-vip-bg-6 fl"><A class=3D"a-img" =
href=3D"http://blog.51cto.com/simplelife"=20
target=3D"_blank"><IMG class=3D"is-vip-img is-vip-img-4" =
src=3D"http://ucenter.51cto.com/images/noavatar_middle.gif"=20
data-uid=3D"9954761"></A>				 </DIV>
<DIV class=3D"author-module-center fl"><A class=3D"h2" =
href=3D"http://blog.51cto.com/simplelife"=20
target=3D"_blank">=E5=85=B4=E8=B6=A3e=E6=97=8F</A>					=20
<H3>90=E7=AF=87=E6=96=87=E7=AB=A0=EF=BC=8C23W+=E4=BA=BA=E6=B0=94=EF=BC=8C=
1=E7=B2=89=E4=B8=9D</H3></DIV>
<DIV class=3D"author-module-right author-checkFollow fr"><A =
class=3D"follow-1 checkFollow on"=20
id=3D"checkFollow2_9954761">=E5=85=B3=E6=B3=A8</A>              					 =
</DIV>
<DIV class=3D"clear"></DIV></DIV></DIV>
<DIV class=3D"artical-Left" id=3D"comment"><!-- =
=E5=8F=91=E5=B8=83=E8=AF=84=E8=AE=BA -->			=20
<DIV class=3D"comment-creat">
<DIV class=3D"is-vip-bg-6 fl"><A class=3D"header-img" =
href=3D"http://blog.51cto.com/simplelife"=20
target=3D"_blank"><IMG=20
src=3D"http://ucenter.51cto.com/images/noavatar_middle.gif"></A></DIV>
<DIV class=3D"first-publish fr publish_user_id"><TEXTAREA =
class=3D"textareadiv textareadiv-publish" maxlength=3D"500" =
placeholder=3D"=E6=8F=90=E9=97=AE=E5=92=8C=E8=AF=84=E8=AE=BA=E9=83=BD=E5=8F=
=AF=E4=BB=A5=EF=BC=8C=E7=94=A8=E5=BF=83=E7=9A=84=E5=9B=9E=E5=A4=8D=E4=BC=9A=
=E8=A2=AB=E6=9B=B4=E5=A4=9A=E4=BA=BA=E7=9C=8B=E5=88=B0=E5=92=8C=E8=AE=A4=E5=
=8F=AF">=E6=8F=90=E9=97=AE=E5=92=8C=E8=AF=84=E8=AE=BA=E9=83=BD=E5=8F=AF=E4=
=BB=A5=EF=BC=8C=E7=94=A8=E5=BF=83=E7=9A=84=E5=9B=9E=E5=A4=8D=E4=BC=9A=E8=A2=
=AB=E6=9B=B4=E5=A4=9A=E4=BA=BA=E7=9C=8B=E5=88=B0=E5=92=8C=E8=AE=A4=E5=8F=AF=
</TEXTAREA>
					=20
<DIV class=3D"comment-push">
<P class=3D"msg fl">Ctrl+Enter&nbsp;=E5=8F=91=E5=B8=83</P>
<P class=3D"publish-btn blue-btn fr" flag=3D"1">=E5=8F=91=E5=B8=83</P>
<P class=3D"cancel-btn cancel-btn-1 fr">=E5=8F=96=E6=B6=88</P>
<DIV class=3D"clear"></DIV></DIV><INPUT class=3D"user_id" =
type=3D"hidden" value=3D"9954761">
					 <INPUT class=3D"reply_id" type=3D"hidden" value=3D"1864287">					 =
<INPUT class=3D"first_pid" type=3D"hidden">
				 </DIV>
<DIV class=3D"clear"></DIV></DIV>
<DIV class=3D"comment-number" id=3D"comment_pl">
<P class=3D"number fl"><SPAN =
class=3D"comment_number">22</SPAN>=E6=9D=A1=E8=AF=84=E8=AE=BA</P><A =
class=3D"time-last time fr comment-sort"=20
id=3D"sort-desc" flag=3D"desc" =
page=3D"1">=E6=8C=89=E6=97=B6=E9=97=B4=E5=80=92=E5=BA=8F</A>				     <A =
class=3D"time-first time fr comment-sort on"=20
id=3D"sort-asc" flag=3D"asc" =
page=3D"1">=E6=8C=89=E6=97=B6=E9=97=B4=E6=AD=A3=E5=BA=8F</A>				    =20
<DIV class=3D"clear"></DIV></DIV>
<DIV class=3D"commentList"></DIV><!-- page -->			=20
<DIV class=3D"act_pageList_box"></DIV></DIV><!-- end left -->		 <!-- =
right start -->
		=20
<DIV class=3D"Blog-Right artical-Right"><A class=3D"catalog"></A>			 <A =
class=3D"scrollTop"=20
onclick=3D"$(window).scrollTop(0);" href=3D"javascript:void(0);"></A>		 =
</DIV><!-- end right  -->
	 </DIV>
<DIV class=3D"special-column">
<DIV class=3D"Page M764">
<DIV class=3D"column-1">
<H2 class=3D"column-tit">=E6=8E=A8=E8=8D=90=E4=B8=93=E6=A0=8F</H2>
<DIV class=3D"column-box"><A class=3D"a-img fl cloumn-tab-par" =
href=3D"http://blog.51cto.com/cloumn/detail/13"=20
target=3D"_blank"><IMG =
src=3D"http://i2.51cto.com/images/blog/201808/03/a940c66317ecbe58436a2ad3=
831c2d7d.png"><SPAN=20
class=3D"cloumn-tab-new cloumn-tab-new-1 cloumn-tab1 =
f12">=E6=9C=80=E8=BF=91=E6=9B=B4=E6=96=B0</SPAN>             =20
  													 </A>								=20
<DIV class=3D"center fl"><A class=3D"h2 white-space" =
href=3D"http://blog.51cto.com/cloumn/detail/13"=20
target=3D"_blank">=E5=9F=BA=E4=BA=8EPython=E7=9A=84DevOps=E5=AE=9E=E6=88=98=
</A>
<H3 =
class=3D"white-space">=E8=87=AA=E5=8A=A8=E5=8C=96=E8=BF=90=E7=BB=B4=E5=BC=
=80=E5=8F=91=E6=96=B0=E6=A6=82=E5=BF=B5</H3>
<H4 class=3D"white-space">=E5=85=B120=E7=AB=A0&nbsp;|&nbsp;<A =
href=3D"http://blog.51cto.com/yuhongchun"=20
target=3D"_blank">=E6=8A=9A=E7=90=B4=E7=85=AE=E9=85=92</A></H4>
<H5><SPAN =
class=3D"price">=EF=BF=A551.00</SPAN><SPAN>87=E4=BA=BA=E8=AE=A2=E9=98=85<=
/SPAN></H5></DIV>
<DIV class=3D"right fr"><A class=3D"cloumn-subscribe" =
href=3D"http://blog.51cto.com/cloumn/detail/13"=20
target=3D"_blank" ask=3D"1" cid=3D"13">=E8=AE=A2=E9=98=85</A>								    =
								 </DIV>
<DIV class=3D"clear"></DIV></DIV>
<DIV class=3D"column-box"><A class=3D"a-img fl cloumn-tab-par" =
href=3D"http://blog.51cto.com/cloumn/detail/4"=20
target=3D"_blank"><IMG =
src=3D"http://i2.51cto.com/images/blog/201804/27/92f96bca4a81e7c15a63e696=
e2a8d8e5.jpg"></A>
								=20
<DIV class=3D"center fl"><A class=3D"h2 white-space" =
href=3D"http://blog.51cto.com/cloumn/detail/4"=20
target=3D"_blank">=E5=BE=AE=E6=9C=8D=E5=8A=A1=E6=8A=80=E6=9C=AF=E6=9E=B6=E6=
=9E=84=E5=92=8C=E5=A4=A7=E6=95=B0=E6=8D=AE=E6=B2=BB=E7=90=86=E5=AE=9E=E6=88=
=98</A>
<H3 =
class=3D"white-space">=E5=A4=A7=E6=95=B0=E6=8D=AE=E6=97=B6=E4=BB=A3=E7=9A=
=84=E5=BE=AE=E6=9C=8D=E5=8A=A1=E4=B9=8B=E8=B7=AF</H3>
<H4 class=3D"white-space">=E5=85=B118=E7=AB=A0&nbsp;|&nbsp;<A =
href=3D"http://blog.51cto.com/ityouknow"=20
target=3D"_blank">=E7=BA=AF=E6=B4=81=E5=BE=AE=E7=AC=91</A></H4>
<H5><SPAN =
class=3D"price">=EF=BF=A551.00</SPAN><SPAN>550=E4=BA=BA=E8=AE=A2=E9=98=85=
</SPAN></H5></DIV>
<DIV class=3D"right fr"><A class=3D"cloumn-subscribe" =
href=3D"http://blog.51cto.com/cloumn/detail/4"=20
target=3D"_blank" ask=3D"1" cid=3D"4">=E8=AE=A2=E9=98=85</A>								    	=
							 </DIV>
<DIV class=3D"clear"></DIV></DIV></DIV>
<DIV class=3D"column-2" style=3D"margin-top: 76px;">
<H2 class=3D"column-tit">=E7=8C=9C=E4=BD=A0=E5=96=9C=E6=AC=A2</H2>
<DIV class=3D"column-box"><A class=3D"white-space" =
href=3D"http://blog.51cto.com/simplelife/2167026?source=3Ddra"=20
target=3D"_blank">mysql information_schema=E4=BB=8B=E7=BB=8D</A>									=
						 <A class=3D"white-space"=20
href=3D"http://blog.51cto.com/simplelife/2166739?source=3Ddra" =
target=3D"_blank">Hive=20
=E5=85=83=E6=95=B0=E6=8D=AE=E8=A1=A8=E7=BB=93=E6=9E=84=E8=AF=A6=E8=A7=A3<=
/A>															 <A class=3D"white-space" =
href=3D"http://blog.51cto.com/13952979/2171385?source=3Ddrh"=20
target=3D"_blank">Java =
WebService=E6=8E=A5=E5=8F=A3=E7=94=9F=E6=88=90=E5=92=8C=E8=B0=83=E7=94=A8=
 =E5=9B=BE=E6=96=87=E8=AF=A6=E8=A7=A3</A>															 <A =
class=3D"white-space"=20
href=3D"http://blog.51cto.com/13952955/2171311?source=3Ddrh"=20
target=3D"_blank">SpringBatch=E4=B8=AD=E7=9A=84retry=E5=92=8Cskip=E6=9C=BA=
=E5=88=B6=E5=AE=9E=E7=8E=B0=E5=88=86=E6=9E=90</A>															 <A =
class=3D"white-space"=20
href=3D"http://blog.51cto.com/13941961/2171299?source=3Ddrh"=20
target=3D"_blank">Redis=E5=88=86=E5=B8=83=E5=BC=8F=E9=94=81=E8=A7=A3=E5=86=
=B3=E6=96=B9=E6=A1=88</A>															 <A class=3D"white-space" =
href=3D"http://blog.51cto.com/9970791/2170956?source=3Ddrh"=20
target=3D"_blank">[=E7=9F=AD=E6=96=87=E9=80=9F=E8=AF=BB] =
=E9=87=8D=E8=BD=BD=E6=9C=89=E6=9A=97=E5=9D=91=EF=BC=8C=E9=87=8D=E8=BD=BD=E9=
=87=8D=E5=86=99=E4=BD=A0=E7=9C=9F=E7=9A=84=E4=BA=86=E8=A7=A3=E4=B9=88</A>=
															 <A class=3D"white-space"=20
href=3D"http://blog.51cto.com/13902811/2170945?source=3Ddrh"=20
target=3D"_blank">=E5=A6=82=E4=BD=95=E4=BD=BF=E7=94=A8Spring=E4=BC=98=E9=9B=
=85=E5=9C=B0=E5=A4=84=E7=90=86REST=E5=BC=82=E5=B8=B8</A>															 =
<A class=3D"white-space"=20
href=3D"http://blog.51cto.com/13732225/2170701?source=3Ddrh" =
target=3D"_blank">=E8=A7=81=E5=BE=AE=E7=9F=A5=E8=91=97 =
=E2=80=94=E2=80=94=20
Redis =
=E5=AD=97=E7=AC=A6=E4=B8=B2=E5=86=85=E9=83=A8=E7=BB=93=E6=9E=84=E6=BA=90=E7=
=A0=81=E5=88=86=E6=9E=90</A>														=20
<DIV class=3D"clear"></DIV></DIV></DIV></DIV></DIV>
<DIV class=3D"the-lowest-bg">
<DIV class=3D"the-lowest Page M764">
<P class=3D"is-praise fl "><SPAN type=3D"1" userid=3D"9954761"=20
blog_id=3D"1864287">5</SPAN></P>
<P class=3D"b-favorites favorites-opt fl"><I></I><B>1</B></P><A=20
class=3D"b-reply fl"><I></I><FONT class=3D"comment_number">22</FONT></A>
<DIV class=3D"b-share fl"><I></I>=E5=88=86=E4=BA=AB				=20
<DIV class=3D"bdsharebuttonbox"><A class=3D"bds_tsina p2" =
data-cmd=3D"tsina"></A><A=20
class=3D"bds_sqq p3" data-cmd=3D"sqq"></A><A class=3D"bds_weixin p1"=20
data-cmd=3D"weixin"><EM class=3D"code-icon"></EM><IMG class=3D"code-img" =
src=3D"http://blog.51cto.com/qr/qr-url?url=3Dhttp%3A%2F%2Fblog.51cto.com%=
2Fsimplelife%2F1864287"></A></DIV></DIV>
<DIV class=3D"b-fllow author-checkFollow fr"><A class=3D"follow-1 =
checkFollow on"=20
id=3D"checkFollow3_9954761">=E5=85=B3=E6=B3=A8</A>          				 =
</DIV><A class=3D"b-name fr" =
href=3D"http://blog.51cto.com/simplelife">=E5=85=B4=E8=B6=A3e=E6=97=8F</A=
>
<DIV class=3D"is-vip-bg-6 fr"><A class=3D"b-img" =
href=3D"http://blog.51cto.com/simplelife"><IMG=20
class=3D"is-vip-img is-vip-img-4" =
src=3D"http://ucenter.51cto.com/images/noavatar_middle.gif"=20
data-uid=3D"9954761"></A></DIV>
<DIV class=3D"clear"></DIV></DIV></DIV></DIV><!-- =
=E8=80=81=E5=8D=9A=E6=96=87=E7=BE=8E=E8=A7=82=E5=A4=84=E7=90=86 -->	=20
<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/shCores.js?v=3D1.0.0.1"></SC=
RIPT>
=20
<SCRIPT>=0A=
	var praise_url =3D 'http://blog.51cto.com/praise/praise'=0A=
    	addReply_url =3D 'http://blog.51cto.com/comments/add'=0A=
    	removeUrl =3D 'http://blog.51cto.com/comments/del'=0A=
    	blog_id =3D '1864287'=0A=
    	rid =3D '0'=0A=
    	is_comment =3D '0'=0A=
    	comment_list =3D '/blog/ajax-comment-list'=0A=
    	comment_sort =3D "asc"=0A=
    	index_url =3D 'http://blog.51cto.com/simplelife';=0A=
    	uc_url =3D 'http://ucenter.51cto.com/'=0A=
    	blog_url =3D 'http://blog.51cto.com/'=0A=
    	img_url =3D 'https://static1.51cto.com/edu/blog/'=0A=
    	i_user_id =3D ''=0A=
    	c_user_id =3D'9954761'=0A=
    	collect_url =3D 'http://blog.51cto.com/collect/add'=0A=
    	is_old =3D '1'=0A=
    	nicknameurl =3D 'http://blog.51cto.com/simplelife'=0A=
    	nickname =3D '=E5=85=B4=E8=B6=A3e=E6=97=8F'=0A=
    	myself =3D window.location.href;=0A=
	$('.you-like-list li:odd').css({'margin-left': '10%'});=0A=
	$('.column-box a:odd').addClass('left-list')=0A=
	$('.myUrl').text(myself).click(function(){window.open(myself)})=0A=
	setTimeout(function(){$('.Footer').css({'margin-top':'-50px'})},50)=0A=
    		function =
FollowBtnSucc(e){//1:=E6=9C=AA=E5=85=B3=E6=B3=A8,2:=E5=B7=B2=E5=85=B3=E6=B3=
=A8,3:=E4=BA=92=E7=9B=B8=E5=85=B3=E6=B3=A8=0A=
		    if(e=3D=3D2||e=3D=3D3){=0A=
		        $.post('/index/wxbind',{uid:userId},function(res){=0A=
		            if(res.data.wxBind =3D=3D 0){//=E6=B2=A1=E7=BB=91=E5=AE=9A=0A=
	                    if(getCookie('follow1'))return false;=0A=
	                    box1()=0A=
	                }else{=0A=
	                    if(getCookie('follow2'))return false;=0A=
	                    box2()=0A=
	                }=0A=
		        },'json')=0A=
		    }=0A=
		}=0A=
		FollowBtn =3D new =
Follow($('#checkFollow1_9954761'),'9954761','1',['on','in','mutual','off'=
]);=0A=
		FollowBtn.success=3DFollowBtnSucc;=0A=
		FollowBtn =3D new =
Follow($('#checkFollow2_9954761'),'9954761','1',['on','in','mutual','off'=
]);=0A=
		FollowBtn.success=3DFollowBtnSucc;=0A=
		FollowBtn =3D new =
Follow($('#checkFollow3_9954761'),'9954761','1',['on','in','mutual','off'=
]);=0A=
		FollowBtn.success=3DFollowBtnSucc;=0A=
        	if(is_old=3D=3D1){=0A=
    // SyntaxHighlighter.all();=0A=
    =
insertCodeElement("<p>\u5c06mysql\u4e2d\u7684\u6570\u636e\u5bfc\u5165\u52=
30\u4e86solr\u4e2d\u4e4b\u540e\uff0c\u5982\u679c\u6570\u636e\u5e93\u4e2d\=
u7684\u6570\u636e\u6709\u53d8\u52a8\uff0csolr\u4e2d\u8fd8\u662f\u7b2c\u4e=
00\u6b21\u5bfc\u5165\u7684\u65e7\u7684\u6570\u636e\uff0c\u90a3\u8be5\u598=
2\u4f55\u662f\u597d\u5462\uff1f\u8be5\u5982\u4f55\u5b9e\u73b0mysql\u6570\=
u636e\u5e93\u4e2d\u7684\u6570\u636e\u5b9a\u65f6\u540c\u6b65\u5230solr\u4e=
2d\u5462\uff1f\u4e0b\u9762\u5c06\u505a\u8be6\u7ec6\u7684\u4ecb\u7ecd\u300=
2<br \/><\/p><p>\u51c6\u5907\u5de5\u4f5c\u8981\u505a\u597d\uff1a<br =
\/><\/p><p>&nbsp;&nbsp;&nbsp;&nbsp;1\u3001\u4e0b\u8f7djar\u5305\uff1asolr=
-dataimportscheduler-1.1.jar <a =
href=3D\"http:\/\/pan.baidu.com\/s\/1hsySs2S\" =
target=3D\"_blank\">http:\/\/pan.baidu.com\/s\/1hsySs2S<\/a><\/p><p>&nbsp=
; &nbsp; =
&nbsp;2\u3001\u65b0\u5efa\u6587\u4ef6\uff1adataimport.properties\uff0c\u6=
587\u4ef6\u590d\u5236\u4e0b\u9762\u7684\u5c31\u597d\uff0c\u5177\u4f53\u91=
4d\u7f6e\u542b\u4e49\u5df2\u7ed9\u51fa\u6ce8\u91ca\uff1a<\/p><pre =
class=3D\"brush:xml;toolbar:false\">#####################################=
############\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;#\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataimport&nbsp;schedu=
ler&nbsp;properties&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
#\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#\n###=
##############################################\n\n#&nbsp;&nbsp;to&nbsp;sy=
nc&nbsp;or&nbsp;not&nbsp;to&nbsp;sync\n#&nbsp;&nbsp;1&nbsp;-&nbsp;active;=
&nbsp;anything&nbsp;else&nbsp;-&nbsp;inactive\n#&nbsp;\u8fd9\u91cc\u7684\=
u914d\u7f6e\u4e0d\u7528\u4fee\u6539\nsyncEnabled=3D1\n\n#&nbsp;&nbsp;whic=
h&nbsp;cores&nbsp;to&nbsp;schedule\n#&nbsp;&nbsp;in&nbsp;a&nbsp;multi-cor=
e&nbsp;environment&nbsp;you&nbsp;can&nbsp;decide&nbsp;which&nbsp;cores&nb=
sp;you&nbsp;want&nbsp;syncronized\n#&nbsp;&nbsp;leave&nbsp;empty&nbsp;or&=
nbsp;comment&nbsp;it&nbsp;out&nbsp;if&nbsp;using&nbsp;single-core&nbsp;de=
ployment\n#&nbsp;&nbsp;\u4fee\u6539\u6210\u4f60\u6240\u4f7f\u7528\u7684co=
re\uff0c\u6211\u8fd9\u91cc\u662f\u6211\u81ea\u5b9a\u4e49\u7684core\uff1as=
imple\nsyncCores=3Dsimple\n\n#&nbsp;&nbsp;solr&nbsp;server&nbsp;name&nbsp=
;or&nbsp;IP&nbsp;address\n#&nbsp;&nbsp;[defaults&nbsp;to&nbsp;localhost&n=
bsp;if&nbsp;empty]\n\u8fd9\u4e2a\u4e00\u822c\u90fd\u662flocalhost\u4e0d\u=
4f1a\u53d8\nserver=3Dlocalhost\n\n#&nbsp;&nbsp;solr&nbsp;server&nbsp;port=
\n#&nbsp;&nbsp;[defaults&nbsp;to&nbsp;80&nbsp;if&nbsp;empty]\n#&nbsp;&nbs=
p;\u5b89\u88c5solr\u7684tomcat\u7aef\u53e3\uff0c\u5982\u679c\u4f60\u4f7f\=
u7528\u7684\u662f\u9ed8\u8ba4\u7684\u7aef\u53e3\uff0c\u5c31\u4e0d\u7528\u=
6539\u4e86\uff0c\u5426\u5219\u6539\u6210\u81ea\u5df1\u7684\u7aef\u53e3\u5=
c31\u597d\u4e86\nport=3D8080\n\n#&nbsp;&nbsp;application&nbsp;name\/conte=
xt\n#&nbsp;&nbsp;[defaults&nbsp;to&nbsp;current&nbsp;ServletContextListen=
er's&nbsp;context&nbsp;(app)&nbsp;name]\n#&nbsp;&nbsp;\u8fd9\u91cc\u9ed8\=
u8ba4\u4e0d\u6539\nwebapp=3Dsolr\n\n#&nbsp;&nbsp;URL&nbsp;params&nbsp;[ma=
ndatory]\n#&nbsp;&nbsp;remainder&nbsp;of&nbsp;URL\n#&nbsp;&nbsp;\u8fd9\u9=
1cc\u6539\u6210\u4e0b\u9762\u7684\u5f62\u5f0f\uff0csolr\u540c\u6b65\u6570=
\u636e\u65f6\u8bf7\u6c42\u7684\u94fe\u63a5\nparams=3D\/dataimport?command=
=3Ddelta-import&amp;clean=3Dfalse&amp;commit=3Dtrue\n\n#&nbsp;&nbsp;sched=
ule&nbsp;interval\n#&nbsp;&nbsp;number&nbsp;of&nbsp;minutes&nbsp;between&=
nbsp;two&nbsp;runs\n#&nbsp;&nbsp;[defaults&nbsp;to&nbsp;30&nbsp;if&nbsp;e=
mpty]\n#\u8fd9\u91cc\u662f\u8bbe\u7f6e\u5b9a\u65f6\u4efb\u52a1\u7684\uff0=
c\u5355\u4f4d\u662f\u5206\u949f\uff0c\u4e5f\u5c31\u662f\u591a\u957f\u65f6=
\u95f4\u4f60\u68c0\u6d4b\u4e00\u6b21\u6570\u636e\u540c\u6b65\uff0c\u6839\=
u636e\u9879\u76ee\u9700\u6c42\u4fee\u6539\n#&nbsp;&nbsp;\u5f00\u59cb\u6d4=
b\u8bd5\u7684\u65f6\u5019\u4e3a\u4e86\u65b9\u4fbf\u770b\u5230\u6548\u679c=
\uff0c\u65f6\u95f4\u53ef\u4ee5\u8bbe\u7f6e\u77ed\u4e00\u70b9\ninterval=3D=
1\n\n#&nbsp;&nbsp;\u91cd\u505a\u7d22\u5f15\u7684\u65f6\u95f4\u95f4\u9694\=
uff0c\u5355\u4f4d\u5206\u949f\uff0c\u9ed8\u8ba47200\uff0c\u53735\u5929;&n=
bsp;\n#&nbsp;&nbsp;\u4e3a\u7a7a,\u4e3a0,\u6216\u8005\u6ce8\u91ca\u6389:\u=
8868\u793a\u6c38\u4e0d\u91cd\u505a\u7d22\u5f15\nreBuildIndexInterval=3D72=
00\n\n#&nbsp;&nbsp;\u91cd\u505a\u7d22\u5f15\u7684\u53c2\u6570\nreBuildInd=
exParams=3D\/select?qt=3D\/dataimport&amp;command=3Dfull-import&amp;clean=
=3Dtrue&amp;commit=3Dtrue\n\n#&nbsp;&nbsp;\u91cd\u505a\u7d22\u5f15\u65f6\=
u95f4\u95f4\u9694\u7684\u8ba1\u65f6\u5f00\u59cb\u65f6\u95f4\uff0c\u7b2c\u=
4e00\u6b21\u771f\u6b63\u6267\u884c\u7684\u65f6\u95f4=3DreBuildIndexBeginT=
ime+reBuildIndexInterval*60*1000\uff1b\n#&nbsp;&nbsp;\u4e24\u79cd\u683c\u=
5f0f\uff1a2012-04-11&nbsp;03:10:00&nbsp;\u6216\u8005&nbsp;&nbsp;03:10:00\=
uff0c\u540e\u4e00\u79cd\u4f1a\u81ea\u52a8\u8865\u5168\u65e5\u671f\u90e8\u=
5206\u4e3a\u670d\u52a1\u542f\u52a8\u65f6\u7684\u65e5\u671f\nreBuildIndexB=
eginTime=3D03:10:00<\/pre><p><br =
\/><\/p><p>\u51c6\u5907\u597d\u8fd9\u4e00\u4e2ajar\u5305\u548cdataimport.=
properties\u6587\u4ef6\uff0c\u5f00\u59cb\u4e0b\u9762\u7684\u6b65\u9aa4\u2=
026\u2026<\/p><p><strong>\u6b65\u9aa4\u4e00\uff1a<\/strong>\u5c06solr-dat=
aimportscheduler-1.1.jar\u5305\u590d\u5236\u5230apache-tomcat-7.0.72\\web=
apps\\solr\\WEB-INF\\lib\u4e2d\u3002<\/p><p><strong>\u6b65\u9aa4\u4e8c\uf=
f1a<\/strong>\u5728apache-tomcat-7.0.72\\webapps\\solr\\WEB-INF\u76ee\u5f=
55\u4e0b\u7684web.xml\u6587\u4ef6\u4e2d\u6dfb\u52a0\u76d1\u542c\u914d\u7f=
6e\uff1a<\/p><pre =
class=3D\"brush:xml;toolbar:false\">&nbsp;&nbsp;&nbsp;&lt;listener&gt;\n\=
t&nbsp;&lt;listener-class&gt;\n\t&nbsp;&nbsp;&nbsp;&nbsp;org.apache.solr.=
handler.dataimport.scheduler.ApplicationListener\n\t&nbsp;&lt;\/listener-=
class&gt;\n&nbsp;&nbsp;&nbsp;&lt;\/listener&gt;<\/pre><p>\u6e29\u99a8\u63=
d0\u793a\uff1a<\/p><p>&nbsp; =
&nbsp;\u590d\u5236\u4e0a\u9762\u8fd9\u6bb5\u65f6\u6ce8\u610forg.apache.so=
lr.handler.dataimport.scheduler.ApplicationListener\u540e\u9762\u4e0d\u89=
81\u6709\u7a7a\u683c\uff0c\u4e0d\u7136\u542f\u52a8tomcat\u4f1a\u6709\u594=
7\u602a\u7684\u9519\u8bef\uff0c\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u77e5=
\u9053\u7684<a href=3D\"http:\/\/img.baidu.com\/hi\/jx2\/j_0066.gif\" =
target=3D\"_blank\"><img =
src=3D\"http:\/\/img.baidu.com\/hi\/jx2\/j_0066.gif\" =
alt=3D\"j_0066.gif\" =
\/><\/a><\/p><p><strong>\u6b65\u9aa4\u4e09\uff1a<\/strong>\u5728\\solrhom=
e\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2aconf\u6587\u4ef6\u5939\uff08\u=
4e0esimple\u6587\u4ef6\u5939\u540c\u76ee\u5f55\uff09\uff0c\u5c06dataimpor=
t.properties\u6587\u4ef6\u653e\u5728conf\u6587\u4ef6\u5939\u4e2d\u3002<\/=
p><p><strong>\u6b65\u9aa4\u56db\uff1a<\/strong>\u91cd\u542ftomcat,\u6d4f\=
u89c8\u5668\u8bbf\u95ee\uff1a<span =
style=3D\"color:rgb(255,0,0);\">localhost:8080\/solr<\/span><br =
\/><\/p><p><span style=3D\"color:rgb(255,0,0);\"><span =
style=3D\"color:rgb(0,0,0);\"><a =
href=3D\"http:\/\/s2.51cto.com\/wyfs02\/M01\/89\/29\/wKioL1gJyleyR_5pAAFY=
HSuODkU973.png\" target=3D\"_blank\"><img =
src=3D\"http:\/\/s2.51cto.com\/wyfs02\/M01\/89\/29\/wKioL1gJyleyR_5pAAFYH=
SuODkU973.png\" title=3D\"7.png\" =
alt=3D\"wKioL1gJyleyR_5pAAFYHSuODkU973.png\" =
\/><\/a><\/span><\/span><\/p><p><span =
style=3D\"color:rgb(255,0,0);\"><span style=3D\"color:rgb(0,0,0);\"><br =
\/><\/span><\/span><\/p><p>\u82e6\u82e6\u7b49\u5f85\u4e00\u5206\u949f\u4e=
4b\u540e\u2026\u2026<a =
href=3D\"http:\/\/img.baidu.com\/hi\/jx2\/j_0016.gif\" =
target=3D\"_blank\"><img =
src=3D\"http:\/\/img.baidu.com\/hi\/jx2\/j_0016.gif\" =
alt=3D\"j_0016.gif\" =
\/><\/a>\uff0c\u518d\u6b21\u67e5\u8be2\u5982\u679c\u770b\u5230\u6570\u636=
e\u6539\u8fc7\u6765\u4e86\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u65b0=
\u6280\u80fdget\u221a\uff01<\/p><p>\u5982\u56fe\uff1a<\/p><p><a =
href=3D\"http:\/\/s5.51cto.com\/wyfs02\/M01\/89\/29\/wKioL1gJy1CAoYX8AAFW=
TP4JYMA991.png\" target=3D\"_blank\"><img =
src=3D\"http:\/\/s5.51cto.com\/wyfs02\/M01\/89\/29\/wKioL1gJy1CAoYX8AAFWT=
P4JYMA991.png\" title=3D\"7.png\" =
alt=3D\"wKioL1gJy1CAoYX8AAFWTP4JYMA991.png\" \/><\/a><\/p><p><br =
\/><\/p><p><br \/><\/p><p><span style=3D\"color:rgb(255,0,0);\"><span =
style=3D\"color:rgb(0,0,0);\"><br \/><\/span><\/span><\/p><p><span =
style=3D\"color:rgb(255,0,0);\"><span style=3D\"color:rgb(0,0,0);\"><br =
\/><\/span><\/span><\/p>", '#result');=0A=
  }=0A=
=0A=
  function insertCodeElement(content, container){=0A=
    container =3D container || document;=0A=
    // =E5=88=9B=E5=BB=BA=E4=B8=80=E4=B8=AA div =
=E6=9D=A5=E6=94=BE=E7=BD=AE=E8=8E=B7=E5=8F=96=E5=88=B0=E7=9A=84=E5=86=85=E5=
=AE=B9=EF=BC=8C=E8=BF=99=E6=A0=B7=E5=B0=B1=E5=8F=AF=E4=BB=A5=E6=8A=8A =
content =
=E5=AD=97=E7=AC=A6=E4=B8=B2=E5=86=85=E5=AE=B9=E8=BD=AC=E6=8D=A2=E6=88=90 =
dom=0A=
    // =E6=96=B9=E4=BE=BF=E6=88=91=E4=BB=AC=E5=AF=B9=E8=BF=99=E4=B8=AA =
dom =
=E8=BF=9B=E8=A1=8C=E6=93=8D=E4=BD=9C=EF=BC=88=E5=8F=AA=E6=98=AF=E5=88=9B=E5=
=BB=BA =
div=EF=BC=8C=E5=B9=B6=E6=B2=A1=E6=9C=89=E6=8F=92=E5=85=A5=E5=88=B0=E6=96=87=
=E6=A1=A3=EF=BC=8C=E4=BB=96=E5=8F=AA=E5=AD=98=E5=9C=A8=E4=BA=8E=E5=86=85=E5=
=AD=98=E4=B8=AD=EF=BC=89=0A=
    var parent =3D document.createElement('div');=0A=
    parent.innerHTML =3D content;=0A=
=0A=
    // =E6=89=BE=E5=88=B0 parent =E4=B8=AD=E7=9A=84=E6=89=80=E6=9C=89 =
pre =E6=A0=87=E7=AD=BE=EF=BC=8C=E5=B9=B6=E9=81=8D=E5=8E=86=0A=
    var $pres =3D $(parent).find('pre');=0A=
    $pres.each(function(index, el) {=0A=
      var $el =3D $(el),=0A=
          html =3D $el.html(),=0A=
          code =3D document.createElement('code'),=0A=
          elClass =3D $el.attr('class');=0A=
      if(!elClass) {return};=0A=
          // =E8=8E=B7=E5=8F=96 pre =
=E6=A0=87=E7=AD=BE=E4=B8=AD=EF=BC=8Cclass =
=E5=B1=9E=E6=80=A7=E4=B8=AD=E5=8C=85=E5=90=AB=E7=9A=84=E6=9C=AC=E6=AE=B5=E4=
=BB=A3=E7=A0=81=E6=89=80=E6=9C=89=E7=9A=84=E7=BC=96=E7=A8=8B=E8=AF=AD=E8=A8=
=80=0A=
      var language =3D elClass.substring(6, elClass.indexOf(';'));=0A=
=0A=
      code.className =3D 'language-' + language;=0A=
      code.innerHTML =3D html;=0A=
=0A=
      $el.html(code);=0A=
    });=0A=
=0A=
    $(container).html(parent.innerHTML);=0A=
=0A=
    // =E6=9C=80=E5=90=8E=EF=BC=8C=E8=B0=83=E7=94=A8 Prism =
=E7=9A=84=E6=96=B9=E6=B3=95=E6=9D=A5=E9=AB=98=E4=BA=AE=E4=BB=A3=E7=A0=81=0A=
    Prism.highlightAll();=0A=
  }=0A=
	window._bd_share_config=3D{=0A=
    "common":{=0A=
      "bdText":"=EF=BC=88solr=E7=B3=BB=E5=88=97:=E4=BA=94=EF=BC=89  =
solr=E5=AE=9A=E6=97=B6=E5=AE=9E=E6=97=B6=E9=87=8D=E5=BB=BA=E7=B4=A2=E5=BC=
=95=E5=92=8C=E5=A2=9E=E9=87=8F=E6=9B=B4=E6=96=B0",=0A=
      "bdDesc":$("#abstract_bdshare").text(),=0A=
      "bdMini":"2",=0A=
      "bdMiniList":false,=0A=
      =
"bdPic":"https://s1.51cto.com/images/201710/25/bd540a4f14d822f6e690877586=
99358b.jpg",=0A=
      "bdStyle":"0",=0A=
      "bdSize":"16"=0A=
    },=0A=
    "share":{}=0A=
  };=0A=
  =
with(document)0[(getElementsByTagName('head')[0]||body).appendChild(creat=
eElement('script')).src=3D'http://bdimg.share.baidu.com/static/api/js/sha=
re.js?v=3D89860593.js?cdnversion=3D'+~(-new Date()/36e5)];=0A=
  setTimeout(function(){=0A=
  	$('.bdsharebuttonbox a').removeAttr('title')=0A=
  },1000)=0A=
</SCRIPT>
 </DIV>
<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/marked.min.js?v=3D1.0.0.5"><=
/SCRIPT>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/highlight.js"></SCRIPT>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/detail_mp.js"></SCRIPT>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/detail.js?v=3D1.0.6.9"></SCR=
IPT>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/details_new.js?v=3D1.1.1"></=
SCRIPT>

<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/copy.js?v=3D1.0.0.0"></SCRIP=
T>
   =20
<SCRIPT src=3D"https://static1.51cto.com/edu/blog/js/pvlog.js"></SCRIPT>
=20
<SCRIPT src=3D"https://logs.51cto.com/rizhi/count/count.js"></SCRIPT>
=20
<SCRIPT>=0A=
  $(".gotop").click(function(){$(window).scrollTop(0)})=0A=
</SCRIPT>
    =20
<SCRIPT type=3D"text/javascript">=0A=
    //=E7=99=BE=E5=BA=A6=E7=BB=9F=E8=AE=A1=E4=BB=A3=E7=A0=81=0A=
    var _hmt =3D _hmt || [];=0A=
    (function() {=0A=
      var hm =3D document.createElement("script");=0A=
      hm.src =3D =
"https://hm.baidu.com/hm.js?2283d46608159c3b39fc9f1178809c21";=0A=
      var s =3D document.getElementsByTagName("script")[0];=0A=
      s.parentNode.insertBefore(hm, s);=0A=
    })();=0A=
=0A=
    //=E8=87=AA=E5=8A=A8=E6=8E=A8=E9=80=81=E9=93=BE=E6=8E=A5=0A=
    (function(){=0A=
        var bp =3D document.createElement('script');=0A=
        var curProtocol =3D window.location.protocol.split(':')[0];=0A=
        if (curProtocol =3D=3D=3D 'https') {=0A=
            bp.src =3D 'https://zz.bdstatic.com/linksubmit/push.js';=0A=
        }=0A=
        else {=0A=
            bp.src =3D 'http://push.zhanzhang.baidu.com/push.js';=0A=
        }=0A=
        var s =3D document.getElementsByTagName("script")[0];=0A=
        s.parentNode.insertBefore(bp, s);=0A=
    })();=0A=
      var _vds =3D _vds || [];=0A=
      window._vds =3D _vds;=0A=
      (function(){=0A=
        _vds.push(['setAccountId', '8c51975c40edfb67']);=0A=
        (function() {=0A=
          var vds =3D document.createElement('script');=0A=
          vds.type=3D'text/javascript';=0A=
          vds.async =3D true;=0A=
          vds.src =3D ('https:' =3D=3D document.location.protocol ? =
'https://' : 'http://') + 'assets.growingio.com/vds.js';=0A=
          var s =3D document.getElementsByTagName('script')[0];=0A=
          s.parentNode.insertBefore(vds, s);=0A=
        })();=0A=
      })();=0A=
      document.write(decodeURI("%3Cscript =
src=3D'https://tongji.51cto.com/frontend/tj.gif' =
type=3D'text/javascript'%3E%3C/script%3E"));=0A=
    </SCRIPT>
    =20
<SCRIPT>=0A=
  var uid =3D '';=0A=
  var BLOG_URL =3D 'http://blog.51cto.com/';=0A=
</SCRIPT>
=20
<SCRIPT =
src=3D"https://static1.51cto.com/edu//blog/js/jquery.cookie.js"></SCRIPT>=

=20
<SCRIPT =
src=3D"https://static1.51cto.com/edu/blog/js/time-on-page.js?v=3D1.0.2" =
charset=3D"utf-8"></SCRIPT>
=20
<SCRIPT>=0A=
    (function(){=0A=
        var =
wh=3D$(window).height(),fh=3D$('.Footer').outerHeight(true),hh=3D$('.Head=
er').outerHeight(true)=0A=
        $('.Content-box').css({'min-height': wh-fh-hh})=0A=
    })()=0A=
</SCRIPT>
 </BODY></HTML>

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://static1.51cto.com/edu/blog/mobile/images/share_default.jpg

iVBORw0KGgoAAAANSUhEUgAAAZAAAAGQCAIAAAAP3aGbAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAA3BpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2LjE0
NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEu
MC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVz
b3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1N
Ok9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxYzk1ZTVkMi1lMjQwLTRlMjctYWVjOS1jNTli
MTEwZTQ2ZDAiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6ODVBQTA3QUREM0Y0MTFFNzkxNkZC
RDU2NkRGMUM1MDUiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6ODVBQTA3QUNEM0Y0MTFFNzkx
NkZCRDU2NkRGMUM1MDUiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTUg
KE1hY2ludG9zaCkiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlp
ZDoxRTc2ODExQUI3RDUxMUU3QjQwNEM4NjMxQTdENTZDNyIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1w
LmRpZDoxRTc2ODExQkI3RDUxMUU3QjQwNEM4NjMxQTdENTZDNyIvPiA8L3JkZjpEZXNjcmlwdGlv
bj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PsHJcTgAAPXLSURB
VHja7L0HlKXneR729b/cNmVnF7vYJQECYCdlyqRKIoehLVqSFR1RjSmSnbjIJ45PTuLIjnNOoiTn
WJZPbOWo2LIkShZlUmwSRZGiSEqhCptYRAIkAAIEwAW2951y5977l6/mfb//zuwA2AVxB7M7w9n/
5QDcHczc+9+vPO/zdhpCIK200kor3wzC2iVopZVWWsBqpZVWWmkBq5VWWmkBq5VWWmmlBaxWWmml
lRawWmmllRawWmmllVZawGqllVZaaQGrlVZaaQGrlVZaaaUFrFZaaaWVFrBaaaWVFrBaaaWVVlrA
aqWVVlppAauVVlppAauVVlpppQWsVlpppZUWsFpppZUWsFpppZVWWsBqpZVWWmkBq5VWWmkBq5VW
WmmlBaxWWmmllRawWmmllRawWmmllVZawGqllVZaaQGrlVZaaQGrlVZaaaUFrFZaaaUFrFZaaaWV
FrBaaaWVVlrAaqWVVlrAaqWVVlppAauVVlpppQWsVlpppQWsVlpppZUWsFpppZVWWsBqpZVWWsBq
pZVWWmkBq5VWWmmlBaxWWmmlBaxWWmmllRawWmmllVZawGqllVZawGqllVZaaQGrlVZaaaUFrFZa
aaUFrFZaaaWVFrBaaaWVVlrAaqWVVlrAaqWVVlppAauVVlpppQWsVlpppQWsVlpppZUWsFpppZVW
WsBqpZVWWsBqpZVWWmkBq5VWWmkBq5VWWmmlBaxWWmmllRawWmmllRawWmmllVZawGqllVZaaQGr
lVZaaQGrlVZaaaUFrFZaaaWVFyBil9/fBviXpz5Qz5gIhFoSmCfwJ8/dbj0Uhf95XjlLpOCEKEKC
1ZRzYjnhOwry8Okd/ssKYojOg4S1sNzD299Qw/jgA7OcJ8R6YmviMwK/xQjjM785vImHj0oIh4X3
YfpEFP5hlJL4B3wQih+5+aONfxMzrYHZ+On4eg73Gv4QDGGCBOUpSKDwLJR6z2DPObvRq8OhoISN
SUgJnRDfcVQE3Cs4MXB+9iIdcMJzeDr8wDXDpYOz5AIebH6j/fK4SsE5z4Jg8OngQ8M3OKEMFwD/
G20Wc3OVqrgjPH7v+W49bPPGIWPTpcUdCN5SJgm99l/ivlO6Z6jNLgNWiDeFMme4FRb+JmtBhCPw
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
AAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://static1.51cto.com/edu/blog/images/blog_qr.png

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

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://ucenter.51cto.com/images/noavatar_middle.gif

R0lGODlheAB4APcAAG9tbS0AAYN9e6+rqnt1c6cdITkAATUpJ1lWViIODCUiIioAACodGzElIyQX
FCMUEUxDQTo3NyEKCQQAAFxTUDAAAUEAAhURESQAACEFBS4hHjMAATYAASQUEicAACgAACIAACQG
BTQAAWILDV0JDCgYFiYZFyUYFTwAASMSDyADAyMYFSAAAK8eI/3+//7+/+r0++by+uPw+ez1++Tx
+e/3/PH4/P7///f7/ejz+un0+vj7/vT5/fX6/fn8/vD3/PL4/OXy+uXx+vv9/vP5/efz+uPx+fb6
/fr8/u32+/z+/u72+/z9/v7+/vr9/vb7/SEAAOv1++n0++fy+iQZFvj8/tXU1CMWFPX09CABAfz8
/O72/IuFhOv0+/j49+7u7vv6+jw5OQgEBMvKyt/e3erq6r67uiQWE3h2du3t7WdlZfTz81JGRCkR
D4eBgN3b2l0nKF0ICogUF5SOjF5bW5+bmSYVEycaFxsXF09GRKmlpIuJiScWFDQnJbi0sy4NDNrZ
2WhmZvn5+WJaWGZdXKSjo1VMSunn59jW1c7LyoqEgnwbHkI/P4mHh4uFg1ZTU3JraY0VGamoqHpz
cX53djwHCObk5MnGxZQXG52bm8rIxzolIjouK4+NjV0fIIcSFiYbGYYbHioTEY8bHndfXj40MSEI
B9HPz4B4dvf29oyGhGBYVt7d3bGwsF1VUuno6MPCwkU5N14eHkg9O0APD8XExLKuricSEOzr63Fn
ZU1KSquopqyrq6+qqTYHB7axsWw2NyACAVQHCVYICiwGBkM6OGlISEc8OuHg32RdWmYkJWEtLQ8L
C/j7/fT6/cvJyNDNzfj4+Pn4+Pb29ndxb/f39/X19fP5/KGcmy4jIDsFBl0gIUYAAkYDBUYEBtjX
16IdIVoND05BP+Hh4eLg4HRta+zs66CensbFxevq6lxZWd3c2tTS0tXT0l5SUVhPTc3Kyn15eCAB
AJ6amL66ulBEQo6MjC4dGyUUEakdIfDv7/Hv71dOS+jn5////+Lw+SH/C1hNUCBEYXRhWE1QPD94
cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1w
bWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42
LWMwNjcgNzkuMTU3NzQ3LCAyMDE1LzAzLzMwLTIzOjQwOjQyICAgICAgICAiPiA8cmRmOlJERiB4
bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2Jl
LmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEu
MC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAv
MS4wLyIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjhmY2Q3ZDU4LTg2MjQtNDg1
Yi04MDE3LTcwMmI2ZmUwMzc1OSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDo5QjMxNzc5Mjcx
NzgxMUU4OUI4MEE1MzJDMjU1Q0M3NyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5QjMxNzc5
MTcxNzgxMUU4OUI4MEE1MzJDMjU1Q0M3NyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3No
b3AgQ0MgKE1hY2ludG9zaCkiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0i
eG1wLmlpZDpjYzNiMzQxMC0yYjRiLTQ5MTktYTYxYS1mMzA0ZTgwOTk5MTQiIHN0UmVmOmRvY3Vt
ZW50SUQ9InhtcC5kaWQ6OGZjZDdkNTgtODYyNC00ODViLTgwMTctNzAyYjZmZTAzNzU5Ii8+IDwv
cmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJy
Ij8+Af/+/fz7+vn49/b19PPy8fDv7u3s6+rp6Ofm5eTj4uHg397d3Nva2djX1tXU09LR0M/OzczL
ysnIx8bFxMPCwcC/vr28u7q5uLe2tbSzsrGwr66trKuqqainpqWko6KhoJ+enZybmpmYl5aVlJOS
kZCPjo2Mi4qJiIeGhYSDgoGAf359fHt6eXh3dnV0c3JxcG9ubWxramloZ2ZlZGNiYWBfXl1cW1pZ
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
Tata18rWtro1IQEBADs=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://img.baidu.com/hi/jx2/j_0066.gif

R0lGODlhGQAZANU/AOSpefbVq++tTv/YRf+zA/LHkP/jWvuoAffl0v/GKO3acf/+/vWcAf+6D62m
lKSFR/vy6NSOVPCUKf7cUP/9gy8oEv/paPm6J+V3Kui3iYxwJ9aMOv/SPP/3dfeoF//MM9eNGvWn
Jfrtd+mLBvORZc2nMfieD+nGR++aFv+/HPXbvfm5Qu3r5f769/CUAva+afjFTey0N+GgOfv17/b1
8tfIZvvt3NTMwcq3WO3ENf/TJ9uXY/CiJ8W8ZuKvIv///yH5BAEAAD8ALAAAAAAZABkAAAb/wJ9w
SCwaj8iksaUqBFRCFo24YLWSM0Bkl/nRHI5Wa9ZCOG4LZDYS6Toej81qrok8WGpt2yaLTf4DHCUX
HgI2R2s7GzAdFB0WBhMDgToNJgFpRGsYMgpwGjiQJxqkIA0MAUUzGRsgMiI9FRU1oiWyPg0EDAhF
EBiuFBQiCo+REzk+CbkHPFdCCwExMjIdIsEikJIcHynLLiqZNisGMRsvAArY2dsXEhIHBwwCEEIB
FxMwAiQkLxbZgR9CYMBgIh4KKD8KXBjwB8aLCQYiAUxAyIQLBgxcFBDy4gIHDgz/ANqWIEE3AiNG
YNyY8MKHDx8nBSJpMlchlaiEqPBQ8iVMf58lTx4QsCADgxC8fkAQ0CBFyadBTxIYuqAAgxfOFqg4
kKKr164Nck1lkGGBAAaHhpglELZtWAJT441AoOJqpiEQUMDdC5eZgL8q8jY7ggAFvMNkFyheYIMH
CnpIlmKcLKGAigACXMxT8oNJZhegQ/MI4IzzD8YBCqgOYKN0kSAAOw==

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://s2.51cto.com/wyfs02/M01/89/29/wKioL1gJyleyR_5pAAFYHSuODkU973.png

iVBORw0KGgoAAAANSUhEUgAABSUAAAMQCAYAAADRlgDCAAAgAElEQVR4nOzdD3xT9b0//tdJ0qT/
UvoPKAVqBWyxQlVakXY66j/QXet2rXon+4fbnW7f2d0pc47uegW34fabbNfh/ujdneiuuKl1m9VN
2JxlAkUsyj+B1gKl1FBKW9om/ZM0yfmdzzlJm7RJmv5v4fX0cUxyzud8Pp/zyWmbvPn8kWQFiIiI
iIiIiIiIiMaJbqIrQERERERERERERBcWBiWJiIiIiIiIiIhoXDEoSUREREREREREROOKQUkiIiIi
IiIiIiIaVwxKEhERERERERER0bhiUJKIiIiIiIiIiIjGFYOSRERERERERERENK4YlCQiIiIiIiIi
IqJxxaAkERERERERERERjSsGJYmIiIiIiIiIiGhcMShJRERERERERERE44pBSSIiIiIiIiIiIhpX
DEoSERERERERERHRuGJQkoiIiIiIiIiIiMYVg5JEREREREREREQ0rhiUJCIiIiIiIiIionHFoCQR
ERERERERERGNKwYliYiIiIiIiIiIaFwxKElERERERERERETjikFJIiIiIiIiIiIiGlcMShIRERER
EREREdG4YlCSiIiIiIiIiIiIxhWDkkRERERERERERDSuGJQkIiIiIiIiIiKiccWgJBERERERERER
EY0rBiWJiIiIiIiIiIhoXDEoSUREREREREREROOKQUkiIiIiIiIiIiIaV4aJrgDRSGzfvn2iq0BE
REREREREREPEoCRNecuXL5/oKhARERERERER0RBw+DYRERERERERERGNKwYliYiIiIiIiIiIaFwx
KElERERERERERETjikFJIiIiIiIiIiIiGlcMShIREREREREREdG4YlCSiIiIiIiIiIiIxhWDkkRE
RERERERERDSuDBNdARpjsgxHwynI9m6Y0jP8DjkaPkZr+VbopyXAODMVMVmXQxcZOUEVJSIiIiIi
IiKiCwWDkuch+4kP0bFnG+w1B2Gv+wiuzk7M+PoPBwQlm1/9LZr/+ipkF+B2KzskPaIuWYSYy6+C
+YpcxC66AjqTaWIugoiIiIiIiIiIzlsMSp4n3NYW2Mp/j67Krehp/Fh0kITsBnTKE31CHGKXXu+X
3tnaDOvON6A3SpBdMiSXkt7lQlfVfnQc3oeG//sfSBFRuGzzyzClzpmgqyIiunC0tbVh2rRpwzqP
iIiIiIhoqmFQ8jzRffBtdL69WR2ubTBJkN2yGpSUZQkx13wKksHol7592xbo0ANJ2e12SZ6gpBac
lJzKax0w68v3MiBJRDQFDCeYSURERERENJEYlDxPuM6egGTUATLUwKSkBiSVF24ZMZ/4tF9ad3cn
OnaUQm8UgUgtAKnTyXDrledOKK9lmBcvw8x/Wz2gnO5Tdeg6fgIJy5ePz4UREREREREREdF5h0HJ
KchxvBLGeTnKM6l3n6v5BHRGgxaI9AQjJeXBkLoQEbP955Ls3PkqpB4bDEYJ7t6h21pvSRGQNMQk
Ye63f6C8kPzOc9msqH6oGF3Ha5F8678ifc1D0MfEjMclExERERERERHReUQ30RWgoen+oAwdW38C
34Ck4Gqtg2TSQ2fUQzIaPJseUcv8e0nC5UTXji1qL0l9BNQ5JfURkvZcfa3D7P/4PgzxSX6nyW43
Tnz/O+hpOKmUIaHpjT9i/2fvQPvevWN8xUREREREREREdL5hUHKqkGV0/vNpdJb/HPpp0/0OuW1N
yv86e4ORWmBSD110NCKzb/JL271/q5K0RU2jM+rUQKSYblINTipb4q1fQHR23oDiG575CTr371bT
6wzKFiGh56wFh7/+VZx9440xvXQiIiIiIiIiIjq/cPj2FCA77ejY9iP0nKjQgo0JM/yOu1pq1f3e
+STF0G2xmbJugGTyHV4to7PiRS2tSON0Q9KL1beVR6eSft5liC/6xoDyW7e9gtatf4AuAp4h3bLW
UVN57u5xoWbdf8Ld1YWZd9wxhq1ARERERERERETnCwYlJznRq7Fj63q4mo6pvSAF/TT/oKS7tc5n
Pkl45pOUEXn5p/zSOWoq4G6rV3tJipW2oZMAl1t9lKKjkPjlDZD0/rdE1+H30Py7H/cGJCUxUaUI
TCqP2gBy8X83jj/+fbg6u5D6xS+MVVMQEREREREREdF5gkHJSc5x6E9wt9VCitD37tOZ+w3fbqtT
j0syehe60ZlnwTB7sV+67so/aPmIYKReLHAjqQvcwCkj7s4S6JNm+6V3Ntah6VffgaRzq/NO9gYk
IQKSnh6TKgm6iAhEJMSNQQsQEREREREREdH5hnNKTnJSbIIaSNT5brHJfmnc1notKOmzmS672S+N
s+EwXGePqkO31c0nbdTS2xB5uf/ck+4uK1qefgDosfYugqMzSNB75pMUPSf1Bu3RlDIDWc9sxvTC
fovq0HmoCWXFuSgua1KelqE4txji6ehlvxXFBUqeluGcbMXejUUo2lw1ihUiIiIiIiIiorHAoOQk
p49OUAORvcFEY7+gpCzD3WGBFGHoDV5KRiOMl9zgl4/9QGlfMNInL0PKxYi95T/8C3W70PZ/JXC3
1HkCkpK6uI0amIzwBCYN2j7z5UuQ9cyLiLn0snFojZHSAmq5ud6tAEVrNmPvaAbVRs1BbFTquPHg
YOl8goS+e8uKkVtchkl5aUFZUf7TxzFrwxMoTB0sbaD2MSNnzQYUlj2O0toxqyTRBa4Gldu3o7Jm
Aqtg2YcdO/bBEmhf4wHs2L4DBxrHoFy/vCdBO0wGgd6LcA3lvRqsnLF634eT73i1ySTUeKBy0tV9
MtbJT00ltk/0ez6i+64RB3Zsx45J3chERDSZcfj2JCdFJagBR88Ejp59Sb3P3R1nIOlcgHfxGlmG
ITVXPa83TVs9nJa9nqHbYhEcSX2UIkwwf/q/lMdIvzJtf30SPScqlf066CQ3tGHanuHbWg3UfQkr
78LMrzw0YB7KyS7v0TexqVAEdkXPutW476fpeHtDAcwTXbELXVUpNlqK8XS+aQSZZOLuNRlYuWUv
bi3JwUhyIprqXn75ZdTV1Q3r3LS0NNx5553DOFME6z4GZi9H7oJQ+4bP0mgDYuchNeC+JhwfeRET
JPx2cjZVY191Azp6tL/LETGzkHFFBpK9f47b63HgaC3OdSmfD6BHVEI6FmbPQdwone8V6L0YC+NV
zmiY2LoGuocsOLT7OJrtLu1lhBlzs7IxL360Prs14fCeanRGzkC82w13ew0O1DXBEbsAuQvFZy0n
Gg6/j5qzXRA1iEjKxNJFKdoXEOdxvL+7BXFLcrEg2jfPTtQfPoS6pi5ot2iwe1AExI7gnCsKs65a
iozePAarkzaC6P2as9Bu8ShMX7AEWSnDaZPR/f02FkbvWsfSSNpx8r8HREQU3GT7i0SQIdvbIJni
1VdSVHzffJKewKQuKrEvtfWUzyI32qrbEfNv9MvRcfTPaoBR/TQogpIuLSgZlXcf9Mnz/NJ2v/9n
dO39k1amOn+kBB3cylM3vMFIyRCBxK98F3HXfSbgFbgddtQ9+TPE5V6NxOuuG4U2GStm5KzIB0pq
1R4NmWKXvRZlG9dh46uHYItdhNvXbUBJgeerhb0KW779TTxV0QzjojykN1fAfK8IcJ7Gxtx7gGcr
scYzjefBjbl4JsMb/Aydr2Wr8vynr+NQM5C0qAD3rn0UGa/fgxfFwXty1ce+QOpw2FG7dSPWqWU4
YEzKw/0/fwKrMkXI7qBad/vaHwJlP8Xrh6wwr3gUz25Y2feFasB1I3AAN+g1amXgh08j6fUSPFOR
gbVvbkL/y6mqKEXG3Vv8v8gFafN7q4O3jym/EIXfLsPeNTkYUXyTaIrr6OjA7bffPqxzt2/fPsq1
GS0WaDGf1CD7plb/8OGx4NDR0+iOvQRXLUqF0XYcBw6dwtHD8bgmWyyE14ma6uNo1aXg8k9kINZW
jfcPHEfN8RQsmWcYhfP76jHwvRib6x20nBnZuGZG8MPjZ7zaZCg64TbMwKVLMjBD14rjBw7h1NFq
JC7LQvyo5J+MrKXJsNUfwIFjXejp7MT87GWYE+s57KxF/Vk3Ei//BLJ0x7FnXy1qOlOwMBpoPGxB
Z1wGlkT3z9OGVpsOyRlXYV5KNNwtR7HvUIB70GJBu84Ms86K1vpO9EUlB6kTWlFdexYO5Wcg74pk
NO7bg2O11WhNGa02GYIFuVg+poG0MK510vz8EBHRhYhByUnGdfo9yLIThtR89bVkmqYFFLVXyvMY
QG/sTS93fKy8izp1kRsRlJSM02BIubLvePc5OOt3QjJ4Frhxa6tuR8y+GqZFt/qV3VP3ATre/kXf
Yjhenqd6uNWVvxPv/f9gmue/iI5XV00Vjq1fi46PjqH13XeRsHw5JN0knSXAbkF5WTkuKnpCC0jC
jl0bV2GzaRPKKnNgtpSh+I4SlL6yGUWpVpSvvwel6ZuwdZNyTATL7qlARXgFBc8XpSj5ngOr396F
AjNgrSpD2WkrFq95Fne/6B/oHD4rLM2LsfaVEmQqZVjKinHHPU9h8a418Ga9t8qMTU9vRYlJua5V
n8NT5fnYICqEcK87VNtpKXZVWLBhw1asDhjRbEL13lQUrPU9GLzs0O2TjpyCCuVDOJCfObKWI5rK
pk1T/h4YDNh15EjvvsvS0jAtJiasc0Nx2w5hz45mredNRBIyly6C6HhTU/kxOkSCj7dDdFzRJ1yK
FMfAfddkt6s9W5zTEqCznVPzkUzTkZGbBa0Dj9bzpVtN6/Ntub4R7YjDQt+Yj+++/iMI24/j/UOn
YO0RLyIQMysDV2Qkax9++vUGNCWkITs7GS2HDqG2WevVJc4xz12EJfMCL+QWrB1Cl+2A5dA+HPeW
oTchIS0b0Y2B2mlGgLbohFMMkIiegWhRVvw8xEWegs3Z7SnYglYlo7j5GVA7w8VnICW2AbWt4p/f
0kbh/EDvReBryk6LDv0e9NKu0Z00C7r20+jo0SPh0mugXm445UTWYMcRJZV6jpaX06zcw51tsKv3
VhLSU91oqAt+rwW8F/u/4f17kE5fgCVZKX3XEnabDJJPOOUFuH/jA/6sLUB2rjfDeMyLi8SpBqdS
uwD3qT4CerfyJL7fz11Ifb0SZ0zrhi02Gk2Hd6EhLkPrldjSiW59NNK0mwmRukY4bFq717VHI3VZ
oHJmYNFSn/2Jicp5Z9Bua1GPeYleqbq4LOWv/lEcbKlT7uyFiA6nTnDC7VY+PkfGwqj8F618jhZz
Ehl9atB5dDfea4pG5jXZyn3gVH637YTFMB+fvGKOcno19uxsRGTmNYiuD/ZzGwYxdPtjcXYMZi/P
xYJh/Rx5fnamJQG2QL+LBr9Wdfh2v5+f4PkhwD3jk1fQezZ0voH+doTbjoHPbQ/wOyUFjiP+PSpr
KrejwehTVrg/m0RENGr4O3aScZ4og27mkt7XkjEOkkG8TdoQKykmyS+9u+tjLeCo9pRU3tCLliuJ
+oKAPcf+CkkvVs3Waz0k3TKk2OmIurbYP5825Q/61h+qySCCoBIGiEhfjPjVP4Y+LkCPPdmNs6XP
w/LbX8LV5VDnnLTXHcfZ117DjM8E7lE5USrW34zc9eJZEpav/Tk2F3kiV9YKvP5qAYrfztF6AqYW
YnXRemze24Qi8yFs25aD1W96jilfcMxJwUroJ1S+GVY0K/9ZLE2wZybDnFmIVWp1Tg/zmnzkrfA8
SUb+qsLe3anK/hzHNtQ2AYs9b2V+YT5S1V6FmVico+RntUPtD2ndG951h7pGT/Agv6hQDYoGprRC
7UXI8M073LIHMCMp6TT2OgZPSXQ+M5lMiIiIQEP8EuTMjkayvh3vf/ABrr/yyrDODaXbYUDGkk8o
XyYteH/3CdRWtyIlKx4LcmejdcAwuvaA+wSnMxIL1HwasW/PR6g5ZEHKFcF7mdU3tUMXtxAzBtmn
acHhw6fQGTkXly+dh2jli3flR4dxIDIfS9LalWPH0GqYhcV5GYhzNqCmugU2RMOm1Clt8RVISwQs
Byrx0alq1KSJgEH47RCybMNhHG92I3FxHrKUMlrqjqLWZgvSdoGkY05CI6pO70alOx3pyZ1o6YxA
4kJPwLCxE90wIjG274xIgw6yrV3tR5o84vMDtLsl8DUpLRS8HfxnjtHa09aN9KxPeAJYQygnQF4O
5X3MWLIIKc4a7P7gDE7UT8PFWXlI1R1H5f4zqK8FUnzaOeC96HcrtuOo554RPUi1a6nBIUsKvLds
eG3iDJ6PIdzyWgLev4nKPWQLdQ85W1Hd0gl9bKrn50W7T21GpYylGYh11OFA5Ql0epI3HtiBI+dc
ATICYnrL0Holaukr0Rm3ANkLfApPjEakqwlNrU61p2a324A45d5qrGmAIz4L8wb9JuJEa50FNuUz
bHRsos/+ejS26xC3KBGJiEPEwVbUKRVfGB1GnZTjC+clYU/VPuxqV24e5b2fuygDvh02o1PiYDqj
/O5S8kwx1qG9W1LbqxFzMKNB+RmRopGSAqSlBP65DavtRC/JOBEQ9HxgGc7PkefHNvjvosGvNZDB
frcFvmcG/xkZ2t+O8Nox2N8dtTy/3yk1qDwSMKvecwarPxERjb4pE5TcuHEjjh8/jieeeAJRUVFj
Xt6WLVuQlJSElStXjnlZXu6m/ZC765W/oD5/+SQddNHTIPdY1Ze6fkFJueu01rPRM3zbMKeg75iz
E66Py9WgpaQck0XvRyVZ1CcegGTs+7YhO2zo2PaYUoFOrVemSCZJfnHJqKtuQ2zhGkhitZt+nE0N
sPz8EVj3V6rniAVwZLeyKY/1//NLJN9yC3SDfMEdT96hvrWlq7GqvBrWokwt6GW3wopt+PZ12/ql
9x4TX96GUWCofDPvxqZHLVj3zdvwUzF8O+9ebHh0NXIClSNWu755fW8vRe06/K+pL2kxbvYpzl67
FU9teg57D9Wiull8+M3DCoQh3OsOdY3DNZI2JyI1IGk0GlFaPU3ZgFc+HYOenh51X38//vGPe58/
/PDD6rmhRCcuRIr6rTYNcdEn0OAc3r8CRIpeeGo+qUhPrMP+1hY0Kc+TsQC5A8Y01qGx3YD4RTMG
2efRZEGrPQLxC+ZpPf5Ss5BcvxMNyn7E2dBu1yN+XgYSRXMYU7DwCq1f3Iwr+n7ppKbE4vi5dnS2
DLEdQpWd7IYbTjhsSr5xyUhMy4YWamkP0kr928KglBsLk/JlW9dehw/P9ECKmol0v3GnBhj7j0MV
c+uNyvlCv3Z3BrmmpkPB22FOgPZMzkaaX7lhltPYMDCv3vcmEdH6M3DHzUGa+mZrr9s7Rbfavvsm
8L3oo7VeuRYTkhdm+F1LY5OST+qM8Ovaejh4PilhlhfdFOT+rUGwWWTVeUTFsP3ouVi0yPM5s7Wh
Nx+1DEOkGHzTa0b2NQGC/cHNyM4dmN6QjjnTW1CzfyfEpBBiTskFSj33tUdjzrJI1B/YhWPn1C53
iJmVhdwM38Cj1rtO9IKTomYh3TeCWa+0gSEOi9TkcxBv2o/W2lYgy//GDVgn5X1parEBMfGIdrai
3aj8zonTAmDVyNB6zcXHIVJqQqd6E7SiMzoR8Z2taFCaP1b52ZGVH5BQH0+G2nZatYbxc+QJSgb/
nRzGtQYQNL9Q90zIn5HB6jmK7eh7HQN+p4Qw6M84ERGNhSkRlKypqcF3vvMd5fOwG5deeinuv//+
MS/zmWeewcKFC8c1KOk89boaQJTt/uPPxLySkDs9z32Ckm6n+JSpnKNTg426uAxI0X1/NF315RDD
akWgUXbJkCQJxowi6JMX9uUhu9D1zyfg7mjQelz6hCLV5W10BsTecj8icz4dsM4du99E47OPo6fN
qvaO1Oa1lCAbZOWphJ7mM2j5x1tIvuVTI2yd0ZdetAFry+/A42U52KQu9yw+2d+On+8sGTgXYZM4
1oxmERsO0NtPfMcP/rEqRL6iHoUl2Kxs6nDyjffhvudyULkmQDbJhdhUWdhvZxjzp1nL8fiqp2Dc
8DSe3pAKs1UEN7cNfl5v3YNft3+6YNcYTq/PJCSln0RzM9A3qWS4Zfdnh9U+C0kD4y5EFxRvUHJZ
VCM+nTMd0crz7u7ugEHJ4uJiPPnkk/iP//gP9fhgQcmxEG809At89VPXBFtvECLEPi81LyMieyMH
BsRH6nHa4RDd6JSv6pGIDvA9s73+EI7WtaC7R/aMUdAP/WJClZ22APNaj6L2xId47wTEKjOYlXEF
MsL9B5jOahw9ZkPs4nztuh0WHKj8CEf26RC71NsDyglHK+A3QZ5OB91onC/0b/dg1xSqHcIRbjlh
ZCU+Q4Yr4L2o3jN2nN2/Hb4zruq9vTTDbpNB8gmnvBD3bzAtlkZ1HtFlV6T2ffgfJJ/wekoOxoCU
rKV+8VbLvh1wJmYhzVaL3a2RuDgvH6nth7DncC3qMhJ9JgnQAvLOTgsOvf8Rqg8nY1mW1sB1je0w
xnsD+vFIjTPhbGs9WpTngX4d+Gk5iuPK57qU/GzMQwMOV1bj0L5IpY5uGHp/P85BbPQxNNlaUe/o
RGRcNlIMu1HT2IIWpwOmuJSQvQ2H1XZj8XMU1rUOQah7ZrCfkWEYnXswTGNQfyIiGtyUCEqKXpIp
KSmYOXOm2lPya1/7mjpPlte5c+fUx4SEBJSXlyMrKwszZvj/tayursbBgwdxww03ID7e/5/M3nvv
PXz00UdYtGiRuul85kAUX+D+/ve/45Of/CTi4vznlNq9ezeamppw8803+9VnONzKhxC586QWGOwR
gSZtxWtBilTq23NGfe63yE13AyS9WLRGrybXp17rk6ETLsvftfzEPJKSG7r4hYi4xH8otf2DZ+E6
e0gLbHrjker6NhJ00YmI/dQjMMy+bEB95W4bWn//I1h3vQmxNKJOqYeslCO7lfMMsvJZXnkUrw0S
mrb9ZVIGJUX0q3DDBlSsLMbG9C1Yo3xBK1qxXrnfCpBRko9k5YOJ5WAptllWYPXKxShY9D2Ubrsf
BUWpsFZVoKLWm086FhcAmw8qOxanq/NClu5Sdnu/JSWHyDd1OzY58nBvTipMJjPMJi3ACcxCRh6w
rdai5DnCMSN2O5od6ViRkarm31RxELWDnuSte6jr9k0Xqu3CKggZORY8c9CKwlRzGGWHap9qVLye
h7xAgV2iC4j4uySCi9PO/BHlfwHKPfsDBRynT5+OH/zgB37njrfGzm6l4GgE/prsVL5Y22CIW+QT
cAi0z4caRHOgu3fMsROt3S7l751Sgq5bOdaNfp3l1F5sh4+1KA2SgSvSkxFnO6zOtTZkocpGHOZk
L1U7Cjo7G1B9oBqna2vDD0raupWcDaIjl8aYipTY4zjX3g0x0DN6RjQij7Rq8/Z5Pu50O91Kukit
KiM9P2C7B7mm9FDt0InQhlBOWvBchqPvXnT27VTfUxOSr1rmGSI8zLqmh8jHt8dnqPKaGgPfv4PR
Gfw/+KtlBAhAe4y0l1pAndWoF3NJ5ist1VgHp1KnSOV2MCRHwih3B/wHXkN0KpJja3BM7bIsWrgO
TTYZdut++K/J5YalRZ2CMrSWbvSI3sBqY6QgKxdqsO6U3YCkxX0NkRprwse2WjR1RyJ+kQEzGmNR
XVen/nNwZHLo7nfDa7vh/BwNEpgM81rDFuqeCfkzMozfoxijezCYkPUnIqKxMklXIOnT2NiIzZs3
q703HnroIZw8eVIdWu1LDDsTwcalS5filltuQXp6On7605/2Hs/OzsaVV16JtWvXYtasWfjLX/7S
e+zuu+9WzxPD1S6//HLs2bOn99hbb72FuXPn4s4778Ts2bPx7rvv9h776le/ioKCArVO8+bNQ0VF
eEueBCNFRGvDrCOUTeeCbO8bKyYWu4Fep23GhN79crdFDSaqmykGuqSc3mPus7vFDPxasFHZdFHT
YLz8a54VtTU9J7bBefLvnjz0Sjq99lwpx5C6EHGrfhEwINlz4gM0PbEK3e+/qcZD1c3g2fTa9JXi
ueR5bn1vF5ytrSNqnzFjLsCjT+djV8lT2Gs3o+DRLViNZ/C5/Fzk5q5E8ebTSFcnQkxF0YYnkFR6
h7K/AMWltYjt7b1nRt69jyL1uVXIzV+JkopU5OX4FRI8X+V+dGwpxspcsb8Qm+z3Ysu9YuWWZKy4
935YN96m7M/Hmq0jWFE2uQD3Pwg8dYdSRoFSi4ND6XgorvuHMD9zh+falCoHjJGGarvwZOYVofrF
bepK6H1lB2vz4O1j31WGsltXImfyzBhANCG8Qcm1X/ua3yb2DbYNPygZB6Pye79b+ULtDLlP43S0
qF+pHS3VqGt1wRQ/x/M9Vwzb3I4dBzwjB5x1aLUZET/HJ9oQaJ+v5FTEm3rQIlaadYoOgYfR1CUh
VtmvHXOhta4aLQ54emIdRqM6fFKH6MRkxEW70djUGbznZiihyq45gMrqBtiUcg1G3+GywdqpX1vE
RiNS6kKTWLnYqdW9weaCFO3tIZaKuCgZ7Q1a2c7WauW48ls6MX10zg/U7sGuKVQ7DGYo5YyC4Pei
77XY0XjoKBpFQmcnGmreR+WhxmG0SZB8wi0v2P0b4mdNBHcGDNVNFkPZ7cr7Y1GuXczd2IDOYd3w
4XKivroR7uR0pIlfMdFGGNxOdItraOqGQ9J5/lGiBvt2H0Cd8vMn+q51NhyFpV2GKVprX+fxJtiU
zx0XL1+O5b3bVZip3GvtliBzLfhKjoZJbkf94Ub1PRcjiA3i8y+U8+vqe8Nn0cmxiOhoQ5sxDqnq
cN5kxDra0e6IRmzv9APB23zIxuLnKMxrDVuoeybcezugkbRjuOcmI9ok5pms99T9AJp8/21kRPUn
IqLhmvQ9JTdt2qR+QbrvvvsQExOjBg9FEPILX/iCOhzZSwzxFkPPRJDxkUceweOPP64GMvV6PX73
u98hMzMTkZGRuPHGG9Wg5Kc+9SnU19fjD3/4A1588UV89rOfxYcffui34qiY6P+1117D4sWLcfXV
V+PVV19VHy0WC5599lns378fl112GT7/+R9JDcwAACAASURBVM/jt7/9LfLy8oZ9nVJMGnTKJxwR
aFQDh2IIt0kbqq2uwK3XeZ73BSXRfVrbLzpCJi8FdN7eLzJcZ7RgoxhKLXpKRmT9u9+57uYP0XPk
hb4h25L3TMC44AZELfu6uqKeH1cPOt7+DTr+uQWyvUfNXye71WHa3l6S6rBtt+e1p/eky+VG81vb
MLPormG3z+hIRuGmSvQfAG1avAalZd5X6Sgs2QwxmnqA1AKs27IL69QXTSgrfq53YLIpvRAbtipb
b+JK+HUQNAXLNx9rNipbgOJMi1djc/nqYV1TcuEm9I30NiFz1SZsXeWToHedo8VYU1npd+7iNZXY
5LsjdaVybSv7rm21N+N+w8mDXuPAMgLKLMKa1EJs3nUrSrxjwEO1ecD2qcKLG6tRvLEEjEnShU6M
Cti7d++wzx2eGUhPqcOBj6uwc3sVIpIuQ/6iQPu01M6Wo6jYrs0nF5UwH1kLA69y7axrhc0Yj4Xx
off5S0RW1lx1ldj9O8Vvjgh1zrpsNRriPVaPgxWn4V29eF5yPFLM7ThVtRPbq5Q6xQz3Y1KIshsj
4a6pxt7TVWpKfVQC5mdoYxAHtlOA7pPRYtGObuw7/hHe2/kRxB/wiJhZyMpO83yoi0bGwvnoPHzc
U7Zo23lY4J2Pb4TnB2z3uODXFLwdQrfgkMrpPjD4WzKIgPeiXx3FezpfXZn3SMV2iPUypIgoJKfF
KnWtH2KbBM7HX/DyxHsU8P4N+POn3UMDVhlWpWLRglZUVn+kXPtHSh1jxvaLQXsN6m2xmLPME7yN
T8ec+H04plzfCTGn5Oxsz9DtRMQam1D34Xs4ob72vCfq0G0n6lptQGw6/DvIihW+TTjTVK+8bYmh
e9fFZyFr/gEcrT2iXPcR0bCISVmI/CucOLqnCgfedyB7yTzEKb8PoqVmdMfN8QzVnoPkuONo647t
m2kmRJsP2XB+jgYTzrUGmN81OHHPtGBPlXbPRMQkwKiDJxgY6p4dLPw5knYM/jfGXzzS5ySg9dgx
pe7H1N97SpOjr9tEqPoTEdFYkWRZlie6EsHYbDakpaXhnnvuUYdwC2L4tuid+Mc//hGf8azq/N3v
fhdvvvkm9u3bp74WQ7VFEFL0Xly2bBmqqqrwj3/8Azt37sS2bduQn5+PP/3pT3jqqaewbt06nDlz
Rg1e+hK9IMWckr/+9a/V1//+7/+OEydOqL0nxXlijksxpFuoq6tDS0sLGhoGTrQ+FO7Gt+C2/Ekb
Oj27CLrk5ep+uekfcDe8pj7XLXgYUuQs9bmr9mnI1sPa0O1Lvg0paq6WT+t+uI49o87vKIKC+hnX
QZ/eFxCUOxtg3/MYZLtNnWsSLrfyKDbAlP0lRFxy84C6uZpPwlb2Q/Qof/DlHiVtj8uzueFyyCJe
2ffYI2vPHcpzp4TYnGsx6wtfRUxWwE8II7J9+3b1X8jHnwiQ3YxtK/wXmKERatqK4jtex4otm1A4
oAPAYG1uxd6Nq7EhaQNKV2eOQ2WJRldbW5vfP4yN9XkTS1vAYvCVpgUnaip3oin2KizrHVMXaB+N
vfFq9/F8f4dyLwZyPt2LjTiw4wja4/oHL2mstB/djQ8ajbj4k0swyrMQEBERTQmTuqfkb37zG3W+
SNEL8YUXXlD3iZVDBdET0huUFFyuvkmQxdyRYqJ+sSjO4cOHkZOTo/aE/PSnP632cvQSPS+7urrU
PPsHJfsTQ9m8ZXR0dKj5e3txjhZdQi7ks29oS1f3+PzzfEScNnQb4l/sfLuJNKo9JSXT7N6ApCCf
/bu6X8SbdTFzoL/odp9zOtHz4SYx9ltJI67ZrfaO1JniYMz5JvRJl/arlQz7oTJ0/fN/4O7u0npW
ihPEPJXqJoZsu7TVtvWeVbeVTYqORsIttyHx1rthmn0+fswK3EORRih5JTaVB5uEcrA2NyNnTSlK
x6ZmRDRRnLVo7YhCYlZ06H009sar3afS+zuV6kqTR937+OcJq/KRWvQQzWJAkoiILliTNijpdDrx
s5/9DLfeeiu+8pWv+B0TvSSff/55tffj9ddfr+47dOgQrrnmGnVY9q9+9SusWLFC7Tny0ksvqXn9
4he/UIOJopej1WpVz7ntttvUuSEfe+wxdUVv0ZNy/vz5WLJkSci63XTTTSgpKcFzzz2Hb33rW2r+
YrEcMZfliERMg2ReCLnzKKQenzkEDWZtmLYYnq2P0va5uyG529RgpZS4rDep3HkMsJ/S9sMI/bwv
A5LnbZbdcH70DGTHWW2Vb8mtjtrWTUuH8YpvQor0WdlbJO86h853nkTPyUolrUudm1ILRErac1kL
TEoGbVEbt15CRMJMJBT8G6Zd96/QxQxpyWQiIrpgaKvqhsUg0oaxj8beeLX7uL6/Q7gXAzmv7sUZ
yL6GPSTHRdoSfJKRSCIioskblPz973+vDosWw6zFIjW+xMI04rjoLekNSopekSLA+PLLL+N73/se
vvjFL6r7xcrYZrMZc+bMUVcXzcjIUId5i1Wzk5OT1WHYP/rRj9S8xBySItA5GBG0FEHOBx54QD1X
9KAUq3YXFg6v35xsOwIpVuuhKCVcBdirIbua+hbD9vaUjPCZT9JxRusNCT2kaT6rqrS8rQUkRS/J
1Lsgmfo+XLpOvaSUVa3NNenSRu3rZuYhIvNLPvNRapwf70H3u7+C23bOM2+lp2ekQfbpJanUUKz+
7dbBOD8LCZ9chagrr9dWuyEiIiIiIiIiIgpiUs8pGa7+c0r253A4cPz4cXWOSKG1tdVvEn8RoBSL
3mRlZanDssMlel6K+SrFytwzZ84cdv3dJ34CXfoa5d0Qwb8eyLXf14ZXpz8G6CIBlxVy3Q+AyHmQ
Zt2nnWR9F3LTq0DMFZBm3O250Aa4T/5U7REpxS6BlNq3som7+Z9wn3pZnWMSbre6GI1+7u3Qz7rB
vzLObtgPPY+e42+p80XC6YKsbr7zSCqbw6XOQWm85FpELbsLEWmjP19kOIYyp6RIS0Q0HoYz1+2F
NackERERERFd6CZtT8mhWLVqFa677rqgx0Wg0RuQFPqvKip6TIptqMSclIMN9R6U7FTnhkTHQSD2
cnVVPJizAVulsr9JqfwcQB+jbHrleV9PSbnnDKCTIMUt7dvXth2S6KRomA4ppahvf0cV5IY/KenF
kG43ZEMcIi7+MiRzhl9V3G3H4Nj/K7itDb2reqsxa1mbOxJ6z3DtiBhE5tyMyCs/A13c4MN8XB1W
tJZvhWSKRuKNnxpZe43QxCyKQ0QXEv4DCBERERER0eDOi6Bkdna2uk1JLhskvQS5fQckEZRUSLE5
kDv3Aj1ntaAkdMo7FatsPj1hXGeUY8lq70mVsw3oOgDoDZBmfl6sXKPtd5yFbPmdmoUkBoRHp8GQ
9hXl3MS+vMRck3Wvw3n8NchOpxbs1OnUc9RApGfoti52NoxZhTBm3AgpIjLkZckuFzr370Tb26+j
tWI7nB0OTP/sfaPXbkRERERERERENGWdF0HJKU0EGqMzAHuNstUBpjQgMl0NGvrOK4mIWEh+QclG
SLGfADwpZNsO5akbUsK/KHnM1tK4OyE3PKs8sUPSKenicqGb9W9+80fK9rNwfvRbuFuPqaPHRUAS
6srd0IKRsgT99GwYL/kUDLNze8sLpufUEXRUvAHrrjfhaD4Hl0PJw6WNTNcZebsRERERERERERGD
kpOABGn6XZBPPwnZthOSCEqKwF/MlYDzbF8yvVjsxhOUdNsgAo2I9gwdd3cBnZVA1ELA/AnPCW7I
jS8ArmZIYuGZ5FshJfgPXXY374Kr7mWlHLvWW1PWApIiGCkZImCYfS0M6Suhm3ZRyCtwt59F9/6t
6HrvDfScqlEDkbKyiUCkGozUqWvhQBcR/nydRERERERERER0/mJQcjLQx0FKuh1yy+8BV6vyOh5S
9BLIrVt6k0gGsxaYFJxnIEVm9L3u3KO8k5GQEu9Eb8/Jc2WA47g6H6WUcjcQdUlfea4OuD/+Pdyt
+5XUMmRJ8qzYLcqJhe6iAuhnF0AyBl84Qe7phqNmB+wHtsJxrBKyvUdd/EYb+i2rPTP9H8V0mRFB
8yMiIiIiIiIiogvHlA1KdnV1oa6uDidPnkRnZycSExORkJCgPs6YMQMRUy0AFnUZELsEcuduSOab
AX0iJLHAjbrCjOhmGNsXhHQ1KulztOdioZzudyHF36Wkidb2dVRogUrjLEjJX1DeZZ8FcjqrIJ9+
EbK9TZ03Upbd6hBtXdRs6KZfD13yUiWfILeFLMPZcACO6rfQ89EOuLs64BaBSBHNFMO+1QCkNKCH
pPZaKWOqvSdERFOEWIGbiIiIiIhoKpkyQUm3241XX30VmzZtwtGjR9HY2Bg0rclkwuWXX47c3Fx1
W7p0KS677LJxrC2wdu1anD59esD+Rx55BPPnz++316Vsekhx/wKce1ZM9AhIJiBysafnZKI296QI
TApyh3KRnlW37R8AUbmA8WLttaMGsvWvQHQ2pPjbtdW81XN6ILf8BWjdKRpTCyLKEqRpWdAnLYdk
zgx6LW7rx3Ce3A7Hie1wtzUqWbkgu129QUhvQFL2C0z2Dd9WN+WQZJykQUlLKVaXABs2FyF1qOc2
laH45m1Y8eYmFA59AXciohGbNm0ag5JERERERDTlTImg5O9+9zts2LBBDUaGw263Y8+ePeompKam
4uOPPx7LKg7wxz/+EVVVVQP2f+1rXxsYlOzYBcRcI6J2QNytygXsByKXAqZFgNPiCUrOQu8iMwYR
OtMrm6wcrwdiP63tdzUB7S9DirsJiL62L3+HBXLzH5R8z2jRQZ0Rumm5kOKVNMbpAesv91jhbtgN
56l34Go5prx2K2U5e4OQsk8wUu0SqXP7HRNBSVGWJMlaQFJJYpwxa8TtOhYsFWVA4YahByRHxUFs
zL0HeLYSaxZPSAWI6DwgApNERERERERTyaQPSv7kJz/Bd77znRHlYTBM8svUGYGOvwMxNymVnQ24
WqAGHKVIQO/pfqdP6UtvmKM99pwAoq+HOrxb7gKsrwJxdwLGBZ6ESh62dyC3K3m7nGpvS8mcp2xX
K6dEDayH7IT73AG4GyvgOrsfck+PssvtCWR6IouS2xNslHr3i/VxtOOSGjeV1ON9vSTV3pMGCZHp
GWPWhMNngRaTnJiQJBERERERERHRhWhSR+veeustdRj0SHV0dIxCbcZQ1NWA/QDgqAKMmVoPSRFk
lKIBnWceSTGc28u7T5+kPBe9Y9xAVzlgvkPrVSm424C2Usj240qes5WsPgFEL4IawOxH7jwBuWUP
XM2VSh06ILvEPJayJ6oo9w7Jlj0BRr9N8gzhljw9JKPNMMyao1QjDbqkNOhnpMMw8yJEzExTV/Se
dGorUGouws89MUnL1g0o+enrONQMJC0qwL1rH0VRptL29lqUbVyHja8egi12EW5fp6QrCBDIDJWu
37EVxWtRVHsPXhTH7slVH/MefRObOA6ciIiIiIiIiM5zkzYo2dPTg89+9rNwuVwBj4veeJdccgmu
uuoq9bVY8Ka2thYWi0Wdf9LXlJhry5QNuM4A7g5AF6MFJAej8wzXc9YCUTdow78FEeC0/VV5d9Mh
Jd0LRKQNPLenBbJ1L+Rz70HuPqsGIiWl3WSfHpDQobdHpCzBp3ekDlLcDKWas6Azp0IXp2zxc6FP
mAtdbOKoNcl4qN1biqQVP4caBrSUouR7Dqx+excKzIC1qgxlp61AJrBr4ypsNm1CWWUOzJYyFN9R
gtJXNqPI6JubPXi6VCvK1yvHkjzH7Bbser0aF615Fne/yOHbRERERERERHRhmbRByUOHDqGpqSng
sfXr1+Ob3/wm4uPjBxxzOBzq3JOvvPIK/vCHP6C6uhpOpxM2mw2xsbFjXe2R0c8cxkmy8i7O8zzt
Bjrf0ha3SbgP0PVrH7c4fhCybS/QVasteOPyLHoj4rhS36YGIA3RkGKmA6aZkKJSIEWnQBeTCp05
RTlnEvZ6HLIqlG+ehVu3eHomWq1oVv6zWJpgz0yGObMQq8T6P9ZyvP5qAYrfzoFZpEstxOqi9di8
twlFeT7ZWSuCpzMfwrZtOVj9pueYKRX5RaIH5cFxvWIiIiIiIiIioslg0gYl33vvvYD7MzIy8F//
9V9BzzMajcjOzla3xx57DB988AF+//vfq8HKoTh79qwa3BTBzMzMTKSnp0OnGzj0ebwcO3ZMrc/c
uXORlZXlM0+mZ/EbdzvgsgDRN/X1mNQOAPaPIHfuA7oOK2l6tGCkCGaqpyvnRyRCFzVdeRQByBnK
6TOAyJnK43m+cEJVBUozVmCL2fM6825setSCdd+8DT8Vw7fz7sWGR1cjB1blv2349nXb/E7Pe7Rf
fvYQ6dRj6UjnyGwiIiIiIiIioskblBTBxED6D80ezJVXXqlug+nq6lIX1dm6dasa/GtpafE7HhkZ
qQ4Xz8nJwSOPPIJ58+YNqR7BiHJE8NRXUlKSWoYg2uFb3/oW/vnPf/YeFz1Ev//97+PrX/869Hq9
tlPMM+mda1JwnQa69yvbAeW5DZAjgIiZyoUkQxKL5xhEEFJ5rmxqz8oxIvc4ILud0JnCGI4+zqoq
SpGxYgvMvXtMSC8swWZlg92C8o334b7nclD5JRHkvR0/31mCfFO/TPw684ZKJ47VolZJv5iBSSIi
IiIiIiK6wE3aoGRqauDVkGtqavDQQw/h0UcfHbXh2H/+85/VwJ+YkzKY7u5uHDx4UN1Ez0tRB7EI
T1RUgFWsh6C9vR1PPvmk3z6z2awGJXfv3o0VK1bAarX6HW9tbUVxcTFyc3OxbNmyvgOyDXDWKVu9
8tylrdwdd4f6KPkGLEfK5YC76xzkrla4O84pWwvc1ha42pvhbj0LV2szXOfOwtl8Fj3WTsxc+38w
pmWOXvmjogoVpYtRuKUvJImDpdjkyMO9Oakwmcwwm0TPW2V/cj6KVqzHxo0FyCjJRzLssChpt1lW
YHWOT5ah0q3Ujm16bi8K1og5JWuxtbQWOasWISMP2FZrARZzBXAiIiIiIiIiujBM2qBkXl5e0GNP
PPEE/vu//xtXXHEFrrnmGlx77bXq44wZM4Zczuc//3m88MILQzpHBChFT8Xnn38eO3fuxOzZs4dc
bigiCHnq1CkUFhYOCEh6iWCkX0BSkKKAiCxtGyq3A7JTKaunHbKywaE82tvg7m4FRPCx6xzcnecg
25THLhvcPS7IDmXrcWqPDu3R7X1u145HX758EgYkoQ3dzrsVr/jEJDFrFhyPF2PlfSdhQywW3b4G
W+7XVp8peHQLrBvX4XP530SzIxYXLS9EcbG5X6bmEOlMyrFnYSkpQWHuyd7VtwuQjBX33o/S4tuQ
u96I5T98DRtXsislEREREREREZ3fJFkx0ZUIRPQgTEhIGNJw7UWLFuH6669XtxtuuGHQnpS//e1v
8ZWvfGVE9bzlllvwl7/8ZcD+hQsXoqqqasD+iooKv2Ci6J158cUXD0h3880348033wxarljIp6io
KHTlZAfgtmkreotHl1Udyq0GH53tyiaCkFYlmQhEdqmL3ohVuGWnq/cRPZ7XYhPPe7RApBqU7PEN
Siqb3dkXlFQf3Uha83+ImDt2Qcnt27dj+fLlQ057cGM+yvLeRsmAcdZERCMzlN9Lvtra2jBt2nk+
ly8REREREZHHpO0pGRcXh/vuuw+/+tWvwj5HrNgttp///OeYOXMmfvCDH+DLX/5ywAVqTp48iQce
eCBgPhEREfjSl76Eq666Sh1KLYZsb9myRT2nv7/+9a/43//93xEHN/sLFZCcP38+/vVf/3XgAbH6
tqtBW/DGKbZm5XmbsnUox2TIbllb5EZ9lLWVt737fEmStvo2JMhSvzK8q3PDu1SO5H/M50nk5deP
aUBy+A5iW9mtWHk/A5JERERERERERBNh0gYlBRFcFL0N//GPfwz53DNnzuCrX/0qfvnLX+KNN97A
rFmz/I6LOSRFb8z+RDDz9ddfV+dr9Lr77rvx8MMPY9WqVQF7RT744IO488471UDqaLvpppvUgOfV
V1+tLsAj5tIUAdOAK4FLkco7mq5tvvE22Qm4rZDUAKXoIdmm7GoFepTXPcqj45wWvESoXqn9o5OB
04hYpghW6qKnIa7ooSFc6XhajDXliye6EkREREREREREF6xJHZQ0GAy9w5TffvvtYeUhVq++5557
BvQ8FMPrAlm3bp1fQNJLDKn7zW9+o/ZSFCt1+xLBzX379uGTn/zksOoYiOipKHp6isV0tF6LQHp6
OgoKCoKf5D6nDdkWC9xA75OZ8jbrE7TNu8u3LO1kbSh3T6uShZKP/Rzk7ha4u5ohi4VsOpogu5qV
dK6w6m++/WHo4jg3IhHRePL+vZikM7MQERERERH1mtRBSUHMKyl6Sr733nv4yU9+gldffRUuV3iB
Ma+tW7fiF7/4Bb7xjW+or8UiMufOnRuQTgzVDjUMW/S2vOuuu/Dcc88NOLZ///5RDUqKXpclJSUD
9kdGRgY/SZcAuJuA7nKg55Ty7TQG0E9X9s9Q3mll0yeKRMFOBiKmQRJb9EW9e/X9UskOK+TOZjVI
6bYpj9azcLWdgbtNeWxpgLOpAZEL8xCZfcNQL5mIiEYBA5JERERERDQVTPqgpJeY3/Gll15SFwLY
tWsXduzYoW7vvvsu7Hb7oOeLQKI3KHngwIGAaUQvSDGfZCiXXnppwP3B8hw3cpe2+rYuGYi8Qdnc
gKMK6H4fsG9XjruUL6o65fh0QD8DkghSGmYCxhTlMT7sYiSjWd108ekh6sIvxEREREREREREFNyU
CUp6iWHUYsVrsQliKPU777yDv/3tb3jttddQXV0d8LwjR46ovUfE0DYxN2MgaWlpg5YfLE2wPMeP
Duh5H5CmKe/qfO218VJtc7crDfUB0LEXcFiU1x9D9lnwRpaNWk/KCC1IKUXOghSVquwLvXp5UFI4
808SEREREREREdGFasoFJfuLiorCihUr1E3MwXj77bcHXIzGZrOpw7ZFUHHu3LkB8zp79uyg5QVL
EyzPsecC5B5tkZuIJYDjA8D6v4BpKWC8DGpwUhcHxCyHFPNJwF4L2bZHaZBD6vyT6jA/V5fy9ARk
1zF1RW5ZbE63NvzblKIGKKXoVOhi5kAyz4ZkiJqgax25YHOJEhERERERERHR+Jm0Qcnm5mYkJib2
TtofDpPJhNWrVwcMSnrzFEHJ7OzsgMdramoGLSNYmmB5jh0xRFq0jR5wndACj2LuSOOVyq65gO1l
Zfs7EJUHRC4R46619KaLISkbEm5Tju+D3Pou0HlKy653k9VN7mmD3HEOsvOQsrkApxtuh0vJSnlf
YmdDZ54L3bS5MKRcpjyfMc7XP3TLly+f6CoQEY2Zofy9JCIiIiIimmjBVj2ZcJs3b8bFF1+M//zP
/0RVVVXY550+fTrgfr1ej4ULF6rPMzIy1B6W/YlekP1X6fYlhoqL1cADufzyy8Ou4+hQvny6Ptae
GhZoPSR7PEPXxerbcV8FjBmA7S+QmzZCtr4FuDv7Ttcp1x+XB13atyClPwgp8Rp1n9pzsjcwKRLK
vc9lt/bcbWuE89R7sO9/Gc76fZBMMeN76URENAAXuCEiIiIioqlk0gYlRS/JkydP4oc//KEaTLz6
6qvx5JNP4u2331b3+67ALb6I1dXV4eWXX8ajjz4aML/MzMzeQKROp8OVV14ZMN3DDz+s9qjsT5Tx
yCOPBAx6ioBnsPzGlNwJuBu155E3At3vKNsu7bVkAGL/BYhbpQUVrW9DPv1jyOdeA5wtftlIkbOh
m1UEw2U/gD59NSRzpnKOpJ3nlv16T3o3KTIBMTc9gujrHoBkZFCSiIiIiIiIiIjCN2mHbyckJPi9
3rNnj7p5iVWy09PTERcXpy5uY7VaQ+aXk5Pj9/qJJ57Atdde6xfcFMQq2osWLVIDkLm5uTCbzTh4
8CCeeeYZvPXWWwHzfuihh5CSkjKUyxsdoodk50tA9B1Qh3HH3AW0PQ04G4HYQm2faSGkpPsht/wB
6D4BWCsgt1Uo5yyCNK1AOT67Lz/JAF1irrrJ9ma4Tr8DV/07kHvO+gUkIy66Fqar/h2ScZgL4RAR
ERERERER0QVtygQl++vp6cFHH30UVl5ixe7HHnvMb19eXp7aK3LDhg0D0jc0NOAb3/hGWHmLAOb6
9evDSjv6JEA/D+gSc0euBHRmIPYuoHWz0kDNyoXfreyLVtLEQZr+Fcht/wDOKZvsAqz74W79AIhc
ACnxekixGf45m5JgSP8MDBd9Gq6mg3CefBvOs1WIXLoahtlLJ+ZyiYiIiIiIiIjovDBpg5Ji+PZo
+c1vfqP2quxv3bp12LZtGyorK4eVb2RkJJ5//nkYjcYR1nAETFcBznpA7vaswJ0GxN4CWMsgN/8a
UsLnlXdZLEKjgzTtRiX9fMhntkB2tqpDs2VbFdxtRyAZUyFNvxG6hCuVfHxG9UsS9NOz1c00YRdJ
REThEgvecH5JIiIiIiKa7CbtnJKD9ZQMhwhsinko77jjjoDHxRDwd955Rw1OigDjUBQWFuLDDz+c
mLkk+zPM0QKSXlFXQY7MAXpaIDf+GujyWSgo8mJIcx6AFJOlfWl1a5u78xRcx/8XPfv+C67Tbyv7
HON/HURENCLi9zoDkkRERERENBVM2p6SYo7Gl156Ce+9957ak3Hv3r1ob28P61wxz+QDDzyABx98
UH0eighGisVxvvjFL2LNmjVqz8mOjo6AacWCNosXL1aHfN9yyy0h87300ksDBjpjYvwXhRG9LAOt
3C3mshwJyXwrEHExZHs9ZOsOSK5OINYTQNVHQ0q9B7rId+Cy/BlShBmSKQUwzYIUNVvd1IVyiIiI
iIiIiIiIxoAkT5EuFaKaYg7J+vp6tLW1qQFK8Sg24aKLLurd5syZA4NheEE1UY4o4+jRo+pms9nU
lbvFCuALFiyY2KHaY0F2+w/XnmK2CYFoFQAAIABJREFUb9+O5cuXT3Q1iIhGTPw9E3MgExERERER
XQimTFCSKBAGJYnofMGgJBERERERXUimbhc5IiIiIiIiIiIimpIYlCQiIiIiIiIiIqJxxaAkERER
ERERERERjSsGJYmIiIiIiIiIiGhcMShJRER0AZIkye+Rxt5otrnIg+8dEREREU1lDEoSERERBbUb
P/IEACXpR8qryUOW5YmuAhERERHRsDEoSUREdIERATYR0PI+nj/6BxBHI6C4DN+VK/D4CGt2/rY5
EREREdHwMChJRER0gfEGxc6/4FiwAOLjqJC/qxydOOdvmxMRERERDQ+DkkREREQTiHNDEhEREdGF
iEFJoqGw16Jsw2oU5OYit2A1SkqrYFf3V2FL8UrkK/vzVxZj894mzwkHsVHZt25zKUpWFyA3Nx+r
1m1FVVUZNvS+Loelt4Chph+87A2lW5VzxfF8rCzZ6n8uEZGqb5jzj3YHGvI82L5gQ6YDDZ0ONcQ6
3DKC5eVrLfKkPOX/ga8zvHy8+/vnE/o6ArdhcEPtPckgJhERERGdDwwTXQGiqcOK8vWrsDlpE8oq
c2C2W7Dr9Wplbyoq1t+DbTlPY+umxTBbylB8x33As6VYnamdedAyC5ueLscG7MKG676J+6xr8fSm
cpSI1yu/jdKiXShe3FdS+OlFnUKXvbfKrOS1FSWmKmxZ9Tk8VZ6PDQXm8W48IprUtGHPEMG3vDz4
D3cWATYRlBP7ClCuPM+ToD7XDBwavcybV4BzygfsF88r8PgQywivXt7yQqcfWKfA+9eGLNvnOga0
4ejyzk1JRERERDSVMShJF4yGhgZUVVWFlXb58uUDd1r3Ytu2HKx+MwdqSM+UivyiVKBpK0qV/Xc/
uFjbn1qI1UXrsa6iqjcwmF+Yj1STeJaBxTnA6RXLkWn2vnZgW20TsDi5t6iw0zftGkLZmWpeFVbR
tzNwUHL79u1htQ8RBZeSkoLMzMyJrsYIBAumrVWDdX36Apl50toQ541EOGX0r9dgQl3HUOsXrOyJ
n8OSiIiIiGiyY1CSLhgiUCC2YbNbYUU60pP7H3AoWzpSffZflJGH09WO4HmFODS09MMoO4SAwVgi
IlWgQJsI6Mn4rqfnoNbDcCwCk6HK6F+v3Sgf0nUM7PU4cKh2+HmFLpuIiIiIiLwYlCQKm1HZatGv
U2PvfovP/pPVFZiVdD+GHn0cXp0mpmwiOn94A3PC2n6Bv/69FYVwA3jenoR9wbtlfr0S++ezFuW7
K3zOrcPX8Svlv0AC1evrQdKv9Rte7X8d3w3QU7J/ev/r8T8nUNn92zA0MRSbq3ITERER0YWGQUmi
cCXno2jFemx6bi8K1og5JWuxtbQWOav69ueL/ZYybC69CEXPiuGbB8etTuNeNhGdR7y9EYd2fFnI
c4RQvStD5OP3+pfKf0Opl3/6/nkHrnPw6w9+jYOXHa7hBiQZzCQiIiKiqYxBSaKwmVHw6LOwlJSg
MPckbLGLsKJ4LQq8+7/9TazMbQaS8nDvpqd753QclzpNSNlERIGE6nVJo4XBSCIiIiKa6iSZn2pp
ChMLs3AeRCI6H7S1tWHatGkTXQ0iIiIiIqJxoZvoChAREREREREREdGFhUFJIiIiIiIiIiIiGlcM
ShIREREREREREdG4YlCSiIiIiIiIiIiIxhWDkkRERERERERERDSuGJQkIiIiIiIiIiKiccWgJBER
EQ1KkiS/x8lsKtWViIiIiOhCxaAkERERERERERERjSvDRFeAiIiIJjfR41CW5d7HyWy06urbyXKS
XzIRERER0ZTEnpJEREQUkje4F36Qbzd+JEmQpB8pz8I1nHMGGnpdBxIBSXG6d+MocCIiIiKi0ceg
JBEREV0QOMckEREREdHkwaAkERERDYO3Z6PvJno5iv15WKumWYs8v96Pvuf49ogMdM7/w//zpv3M
Z/CZAWUEKju0yT70nIiIiIjoQjKp5pSsqanB3//+d1RXV+PMmTPqvpkzZyIjIwM33ngjFixYMIG1
O4iNufcAz1ZizeLhHB8rTSgrvhnbVryJTYXJ41kwERGR4nFUyN/FMp89y+QKQA0y+h7zBh7FvgKU
K8/zJHiOL8N3A57zRaSp+z6LX4t9vYHL4GUTEREREdHUMCmCkjabDS+88ALeeecdmM1mTJs2DfPn
z1eP2e12fPDBB9ixYweuvfZafO5zn0NsbGyI3LQg3foK7+tYXJSTj6J7H8SqHAbtiIiIRkdfIDFP
EqHCwQKEvunHu2wiIiIiIppsJnz4tghIbty4ERUVFZg9ezYiIyNx2WWXoa2tTd0WLVqEqKgopKSk
YOfOnWpacc5g8h59E5WVlcq2FU8/mIfqDbehuMwyDldERER0oRDBQRmyXIHH1WHXoYZQ+/aUFOnH
s+zRw3kpiYiIiIhGx4QHJZ977jl12LboHdnc3Ayr1Yrt27ejo6ND3cRzEYRsbW1Ve0geOXJEPSd8
JiRnFmLdprXA+hKUqnFJO2q3bsDqlfnIzc1F/spibKmy955h6T2Wj5WrlXN8jtmrt2LD6pXIF8dK
tqJ/mNN6sEw5XqCeu2pded9xexW2FIvztPI2723yHghRFzEkPBcbt+7FZvXcYpQ1+edVsHo9SmuH
0BxERESjwndex/7Dqr1855TUejdqAUTf+SP7BxMDnPPnuzHL7xyf+SaDlj1QuAFF74rb3o1TURIR
ERERjb4JDUqKuSPfeusttSfkbW+8gc6WFjUoKYKQgTbRa9JoNOJvf/ubeu6QpBagaMUhlB8UUT0r
LM2LsfaVXWpvylfuB5665ykcFOkspSj5ngOr1WO78MraPNhPW3uz2Vtlxuqnt2JX5bP4Uu338FS5
1a+Y2tOpyvFy5dxXUNT8bZSoUVArytffg205T2CrUt6uZ1dgb/F92FyF0HXx2FVhQd4GUeYmFCZr
eZWmb1DzKn/6fqwwD6v5L1x+Qd1irC7MRXFZ0+DnERGRD29PRd/NO4S6/7Fg+4d7zi/xy6D5BDeU
hW5EUu/mJYKaXCyHiIiIiGh0TGhQ8o033oDJZFIXtXkiLQ1fP3oU1rNn1V6Rotfk6dMN+PhjsZ1R
njfj1VdfR1OTFU6nrJ47NGYkJSkPDvE8GfmrCpHpCeal5q1AjqMWtWq80opm5T+LpQmiv6I5sxCr
CvrmoswvzEeqSTzLxOIckdzuV8riFTme46lYfmseDpUfVOq8C6XbcnD3rYuhFplaiNVFJ1FaURW6
Lt4yi/qOw7oX25S8Vn8pR8vLlARz0hCb4oLGoC4REQ0PA5JERERERKNnQhe6OXDggNrroKurCy7l
cW10NH7W2opvON3Qx5hhMkXBaDRAr49QNoO66XTiUTt3aKxoblYejNore+1WPLXpOew9VIvq5v+f
vXuBius+7H3/G0Cg1wghkGXhh/BL1LGInYBtDY4NTmxwE+Gkxkkrdd0Y3eZKybnCvQ0+XRLpuZJ6
TsAn10qbojaRe8+V1LUirzomtYOSGuLU4NaMkoIdB9kxxHbGcTySJZCEBknM8Ji794aBAWZ4DjM8
vh/WZM/e+///7/8QEomf/g8zqXSowLyRuVVVe93a9/jD+rZRPtWxQxV7SzSdPXLS0jM0mIIaMpQe
1MaGjQ6davON35dQvB7jk2Qogz17picQ6r5IqAsAAAAAABArMR0p+f7776u3t1ef+cxnjDOb/EnL
9VVvn/6XfYX6L3crPj5Jy5cna9kyu/VautSue+75uJYsWW7VnZL2elXX5WlLbprkqVfltoPyFj2l
Qz9qVNOLe+UYKpikjKJyHak1rr/6nPasr9bOoy3jNDzOI10uyW43WjSTUJfcQaMf329zan1q4gR9
CcVsq0MdnnELIRxCXQAAAAAAgJiLaShpbmRjToV66aWXFRe3THZ7mlZffb1KLlzW99NWyXP2I/X1
+ZWUtFwJCUlGmXg1N78nmy3Oqjs5XrW31mjfzkppb5kKzeFxXq86fBnK2pgue5LUfrJFrkDxlmpV
NbutqdtKslv3ExMn/5k8gbTQ06yjR5r1yBaH7Gm5Ki5o1tNHm2XdddfoSPUGFTsyx+9LKGlZyt9U
p+q6gS10PK1OOcetgJEIdQEAAAAAAGItpqHk6tWr1dV1WatWrVVycqrs9tVKTV2n9Btv1RdPndO/
XH+VTrtajTIjE6TOzg6r7nic+x+ydrPOySnUzm87tbH8R6oqSh+4mZavXV+XDj5q3M8v0dMt0tCy
guvXy3esVIVW3SJVeXfo2I6sSX8m1zPlKsw16haWq2PbMZXlmgtM2pW/97CKXeVWu7nb65RddUgl
mRP0JaR0FVd8U/anH1VObqHKnUaX0yfdPRDqAgAAAAAAxJzNH8NV25999ll961vf0qlTp0LeX5GQ
oMacHN1+4sSI6+vXr9df/uVf6ktf+lI0uok5rKGhQXl5eVOr5K7XvifKdbwtUZseKdbGk0d1auuL
qipiTjeA2Ons7FRycnKsuwEAAAAAURHTjW6KioqUn59vrSsZyvHjx5W5Z48qKyu1ZcuWoesJCQmy
29kyGdOUnq99xxq1zzppV03pUYWOxQEAAAAAADAbYhpKLlu2zHqF82d/9mdWGLlu3TrFm1tuAwAA
AAAAAJj3YhpKTsQMItPTWTARsylNRVVNKop1NwBgjrPZbNbmdIHjXDAX+wQAAABgcmK60Q0AAFhM
TuhJm00225M6MXFhAAAAAAsYoSQAABhX6BGJgYAx8DKDxtHXgu9Fo09TbWPsCwAAAEB0zOnp20Ck
mbt1A8BsysvLi3UXIi4Q+o0MJB3ao0o5/bu1efDcYfuavmbcrXQ6JYdx//Of1+dfeEEvDLW0WbuN
NnbPSp+m204EOgMAAABgygglsegsxMAAwNzAP3xcry/7/QMhpXX+J/qe/3k9H+VesMYkAAAAMPcx
fRsAAERB8NTu4OncoaZ8h7s/uWngUwkkmboNAAAAxAYjJQEAQBSYU7edkjXte6zAlG8NHh02460/
X/VD08QH3g9cN6eMR0ZwfmkGkwywBAAAAKIjaqFkZ2dntB4FAACiYo8ctj0DgeKsPyfyrRJAAgAA
ALETtVAyOTk5Wo8CAABRURk0mnG2nxO50ZEB442MZF1KAAAAYHYxfRsAAEzR8FTs4RGMI3fitkLK
F7Zqvc019vrgyMeJg8bg5wRiz4kDyskGimaR4LUkySABAACA6LH5GQaAeczc6XYqu2mHK99ec0BO
R5mK0ib/7OnUAbCwTfX/k4KZy5zMz1kFwWHj7IxojDZGSQIAAACzj923sYi1q76iTFU1LTrlk3zv
t6imap8ONLZHuA4ALGTmaEa/FeL5F0AgaSKQBAAAAGYf07exiKUpv/yAHK4a7d/5jJqzN+rQ3n0q
Sop0HQAAAAAAAARjpCQWsYFRj0+3ZGjrjq3aUZyh5gNlo0Y9tuhATo5Ka9qnUAcAAAAAAADjYaQk
FrGBUY/5MteHrJNrQ5aKjPPI1wEAAAAAAECwORFKNre26pzHM26ZrBtv1NVr1kSpR1hs0orKVBTy
TpbKmpqmWAcAAAAAAADjmROhZHtnp/JyctTb1ydzafk+v189xvue/n7r/euvv6433nlH/ptu0vrU
1Fh3FwAAAAAAAMAMzIk1JfvMMNIMIHt71dvTo77Bl6+7W1cuXVJXV5cK77pLr7e1yd0+x9bua69R
aU6pauZYtwAAAAAAAIC5KuahpLv+aXX+9jXZbDbFBb2WxMdr6ZIlSkxI0Llz53Tw+9/Xe++9p+8f
+Y5VJ7x21ZQGb0wCzMTojW4AAAAAAAAwUzGdvn359G905cw7Slp1u2zG+Suvvab+/n6tXr1aly9f
Vs5tt1nltjz0kHy9vVq2YoX+s15GnTesusuvviWW3R+QVqSqJlYWBAAsbOY/Hvr9/qHjXBbJvppt
mOb6ZwYAAADmm5iOlOw+94GWJEh9vX3W6Mibb77Zeq1Zs0bXXHPNmBGT8ca5WdasY9adFm+rjpUW
KjcnR7mFpTrS3B7yXn5JqUqKgkbIhbs3Yvr2wKi6iupaVZSYZXNVWF4rd5jnj3kG5qCBjW6qitJi
3REAQIwQSAIAAACRF9NQ8vJZl/UX/d7eXmuk5G9/+1t1dnbK5XJZ7/+9uVn/3tSkt433b7W1WQGl
WdasY9adOo/q929XXfZTqjXabTxcoObSnTrSOnyvOqPCuld/aJcK7CPrhb43VnOrXSWHatXYdFiP
ub6hg/WeabUDAMBcsFhHSQIAAACYPTGdvu1xt2nNmtXqPd9r/fJgjpI0p2+npKRYR/Nl/kIRuLYk
Ls4KJZemrNY5o+6UtTequi5bW7+eJSsLTC9SSfF+7XO2qiT9lOqMeyUvZg/cS0qVPbDRt6c5/L0Q
cotylZ5kvstUVrbk9HiN9/YptwMAwFwQCPfmQ8g3n/oKAAAALGYxDSW7Pee0/IZrlfTKv+r9+PM6
f/Girixdrcs332etK9nR0aHk5GT1vf4TJXSd1SnjWlLLf2p50Wfkfv/9aTzRZ7wylB40E3fDRodO
tRnXvR55jHsZoWbpjndvKiLVDgAAmDJGTwIAAABzR0ynb/f09sh+1Tp96c+26cbsG3Xn/Xdojc07
tK6keUxNTdUq/yXdU3Cnbr3rFqusWcesO3WJxssld9ASju+3ObU+NXHwrEMdnlD1Jro3FZFqBwCA
WDmhJ202K+Qbfj1pXA1137w+fP7kidH3Jq4z9hkTPT+0qQaSgU1uAAAAAEReTEdK9vb41H3xonyX
Lw9ds/X36/zz35bf+IqPN7tnHG1xunj69FCZxOXLrbpTlpar4oL9qjrarNyybNndNTpSvUHFhzON
e3blb6pUdb1b+UXp8rQ65XQF6mWHvzel50eoHQAAYmqzdvudxh/aDu1RpZz+fNUb7x02Db0fed18
71Sled3hMOqb57uNVgLMkHF0na/pa2ZJp/Ecs87gMfCMAaPbiazA2pQAAAAAIi+moWSPr0e+7m7r
FXBb7q0hy7a7XMMncXFW3fE49z+knP1BF7YeVlNZlvL3Hpb7icdVmNMhpTq0o+qQSjLNAunasm+P
mnc+atRL1KZHSpSVLq1MNVd/TBrn3lSM9wwAABaC4cDSETLPCxUkTlRnvGfsCdMmAAAAgLkspqHk
pcuX1X3pknq93qFr7rffnrBev99v1Q0tTUVVTSoKVzkpU9uqarUt1K2MIlXUGi/zpL1W5Q/nKS8r
afx79iJVNQWelqWypqYRbWaVNalqks8AAGD+Gzvqcc+s1DGDSb92D9YdGEFJMAkAAADMF7ENJS9d
lu/SJWt37YBw6z0FT5/q7+216kZae325Hn2iTl3G+5Ub8lRStUeF9onvReoZAADMP3sGRzcOj1bc
PGbU454x70cGiKFGSn7X+JI1hfv6Mc8MhJhTw0Y3AAAAwNxh88fwb+f/9uw/6Hev/NO06l5/35f1
6S/9lwj3CPNNQ0OD8vLyZq08AEzFTP4/prOzU8nJyRHu0WwKHt24cEcoBv5RlDATAAAAiKyYjpT8
1Be+ogv5j6q3t3dK9RISErR69epZ6hUAABhf8EjFUCMfFw7CSAAAAGB2xDSUTExM1FVXXRXLLgAA
gCkLrOcIAAAAANMTF+sOAAAAAAAAAFhcCCUBAAAAAAAARBWhJAAAAAAAAICoIpQEAAAAAAAAEFWE
kgAAAAAAAACiKmq7b3d2dkbrUQAAAAAAAADmsKiFksnJydF6FAAAUbVz504dOnQo1t2YU2w2m/x+
/9BxLotUX237jfp7/UPHaInVcwEAAICZYPo2AAAzQCA5FSf0pM0mm+1J491U60y1HgAAAIC5jFAS
AIBpIpAMLbKjJDdrt9+pyoj0bCxGSQIAAACxQSgJAMA0EEiGFwj3xoZ8ZsDoN67vNt5FW+hRmuH7
OjWBQDBUMGgGhrNlvOcCAAAAcxmhJAAAUzQ6kDTPsfCYoycBAAAAzA5CSQAApiBUIMmIyckItTZk
8LVQ60YG7ju0Z8L2xmvLvBdoY48ck1yfMhIb9ARGSZrH6b4Pbms2R10CAAAA0UQoCQDAJBFIzkSo
tSGDr1XKab03Q8NAyGgGiYHrwUbfM+vUKz9sW6OfE70p5MHTq0dPtQ6sAxlqCvbo6djBZQkmAQAA
sBAkxLoDo9XX1+vs2bPjllm7dq3y8/Oj0yEAAAaNDiAJJGPNDB1j3Yfpm+o6kISRAAAAWEjmXCjZ
3d1tBY4ej8d6395+SV1dvVqxYqXWrElRamqqfvnLl2PdTcxjDQ0Nse4CACAizFGPwSMeT6g+dp2Z
dVMJMSOz8zkAAAAwe+ZcKGnq7e3VuXPndOHCBXWcuyRPV69SUlKUsCReq5Ltse5eBLWrpvQh1RW8
qKqitClWrVHpQ3UqeLFKU626mOXl5cW6CwCwSI1e11Fy+vNVH3St/oRzsKx5f3AKtnF/eDRkoN5u
azq2rHuB1Sa/Znx91/gK1dbAs4bPzTqjA82xIhnsBUY5Bk+/DkzJDjZ6ena4advstg0AAID5Luah
5Ojp2u+8847cbvfQSMkrV3yyxS/T6pRk+W198qtvUu16Wmv19NNPq6bhfXUpUamb8vXYjl0qzk1X
0mx9mCEDYeP+5kd06OVyZc/+AwEAmOPMdR392j366uhro87H3B+3vX8wvqbTVmiRCiRDBY9TKT/Z
egGMkgQAAMB8EPNQcvR07XXrMqzp2jfdNDxd+6//+i8Ub+vW6Q9X681fLdH9998/bpveliqV7GxW
flWVag8MhJAeV6Oqq1vkiUYo6W5QdeLX9XXHQdWeLFP2bKSSaUWqaiqKfLsAAGBeI5AEAADAfDAn
dt8OTNc2R0ieOu2W23i1nzuri56L6un1KePmW7X5vge1Oe9BFRY9Yo2mDM+t4weOKmNvlUqzhwNI
e0auSsoKZc109rbqWGmhcnNylFtYqiPN7YOlWnTAuHagtllHrPulqjFveV2qqShRvnEvJ79EFfXu
cT+P21mj1IIiFRU49EOjLW/wzaBn55fsV7UrcGPg2fuOVKu8JF85Obnatq9Wra01qhg6r9fQk83p
24H+DdatqK41yppt56qwvFbj9xIAAAAAAACIjTkRSo7mt776h6Zrd168oLPnz+jipQvy9XaPX9nT
puaTDuVnh1t70qP6/dtVl/2Uapua1Hi4QM2lO3WkdbhEo9MtR0WtGpvM9Rq9ajywTUeSSlVjlG86
VqxT5eWqDpv4ueSsTlVBrl323ALl/bBezUOp5MCzqzMqrGfXH9qlglHdbHGv165D9Wp69SltqvuG
dj7tU3GVcf6yeW48tyX8R29utavkkNnvw3rM9Q0drPeM/70CAAAAAAAAYiDmoeTNN9+s6upqvfba
a2pra9Ov33pdv33nNb395gn9srlBz/3giFatWa1+W6/61We8esdv0OuRRxnKCLf5S3ujquuytXVL
lqw8ML1IJcXvq9o5nErmFhcpMxAWepw6/sN8le7IDip/UvVDoytHcTWren2Bcs3C9lwVFfxQx52D
4aCnWXXGs0seG2wrKVX21JHVc4tylW4O70zaqKxsKasgb6AvdvPcpzZXmOcG11WmVdfj8YYtCwAA
AAAAAMRKzNeUNKdi//Ef//HQmpLt57p0wXNZy1eYm9usVlrqGj351/9NfV0enV/9od5dMtGakoky
Ryua2V1WyGDSZ7wylB50b8NGh061+UI3Z4WcdXri/roRlx17QxdvrT+ijKJjA6Gj8Z/ZBQV6oqZR
e/ILZZ8oMA3XXQAAAAAAAGABiXkoaQqsKXnhwgV1nPfowuUrWrXarrhEaVXycl1/y826/a5PaHXK
KqWtWaPW5re0cePG0I2lZSl/0zdU52xXUVGo9G8gtHQHhZbvtzm1PnWXQieAZvlH9Hevlit3wv1q
WuWsPqW6U/drZITpVaOnUIVWWx3qMAdOhptdDgAAAAAAACxwMZ++PYZN6rf1jZiu3enp1JkL5pqS
nfL1enXp0qVxGkjXlrKtclc+oapm99AmM153s44cqFV7Wq6KC5r19NFmWZOq3TU6Ur1BxY7M0M1Z
5Y/rwIFGDUyc9srdckxHakNMo251qlq79H1z7cmh16v6u0caVNfoGQxM61RdN7Agpcco73RN79sE
AAAAAAAAzFcxHykZWFMyMTHRGjF55swZ+Xw+LV++3Jqu/WubTTfceINSV6/RSuNafEKcNaJyPElZ
ZTpyuEZVldt1/8kO+bRSG7JzVfzYLtmNr/y9h+V+4nEV5nRIqQ7tqDqkkjCZpKzyx+Q5sE9/mvu4
OnxGW3lFKi0dO9Sx1VktFT+lkU0lKTv/ET3+TL3aC4tUXPFNNW9/VDkH7HLs2KWN6RLb0QAAAAAA
AGAxsfkNsezA8ePHdffddw+vKXn+ojq6OpW4PGFouvZTe5/UNddco7i4ONlsNqWlpamwsFA33nhj
LLuOOaChoUF5eXmx7gYAzFhnZ6eSk5Nj3Y2IMf+8Nv+KEThGunzYdvYb9ff6h46RNtvtAwAAAItF
zEdKmlOxR6wp2XlR7VcuaHnyMsUl+rVq1Qrl5OSoqKhoRL1ly5bFqMcAAAAAAAAAZiKmoaQZQpph
ZEJCgtasWWNN2U5ctkIJXUlasjxhaLq2OWLCDCFTUlJi2V0AADAJjJIEAAAAMJGYhpLmVDXzF5Dv
fe976u/vt66ZR/OaKXi69vnz5wklAQCYBwLB4mQDxqmWD9vOYFAYKjCcapAYqvx47QMAAACYmpiG
khs2bNBXv/rVWHYBAADMYZEaPRmpcwAAAACRERfrDgAAgMXihJ602aygceD1pHFlfJEYPWkGi6bx
Rj9OtjwAAACAyCCUxOLjrldFSb61gVJpTXusewMAi4QZSDq0R5Vy+p3GfwIAAABYzAglsch4VH/w
CZ0qOqampiZVFaXFukMAgFkUPNoxeBRkpMoDAAAAmB5CSSwyLrXUSxkb02PdEQBAFEw0XXum5U2B
DfoAAAAATF5MN7oBoqtFB3KzQWHWAAAgAElEQVS26xnz7fYc4+jQ3herVGRv1bEnHtdBZ4cSNzmU
0eGUfceLjKIEgIjarN1+p2RzyDGFDG+mG90EhAsXw60byVqSAAAAwOyKWijZ2dkZrUcBYWSprOmw
lLNdOtyksizzmkf15dtVnVGl2qps2b2tOrbdKWesuwoAC5IZTPq1e2h9yYlFIpAct/0Zho+RCk0B
AACAxSZqoWRycnK0HgVMnqdZdXXZKnkxW3bzPClV9tRYdwoAFrLgQHKPNWrS6d+tzTHu1XQRSAIA
AADTw/RtLG5ejzzKUAYztQEgSgKjJQEAAAAsZmx0g0Uu0Xh1qMMT634AAAAAAAAsHoSSWNzSspS/
qU7VdW7r1NPqlNMV0x4BAAAAAAAseISSWOTSVVzxlFKrH1VOTr5Kq11aaY91nwAAAAAAABY21pTE
ImPuwN008lJ6vvYda9Q+66RdNaVHdSr6HQMAAAAAAFg0GCkJAAAAAAAAIKrm1EjJD35+UK63T6i7
26uzZ8/qypXLSklepauuWqtrN25WRu6fx7qLWPDSVFTVpKJYdwMAAAAAAGABm1MjJX/zxsv61EN/
qHsLCvTg5wqUd99tuu+edN1953L95lf1se4eAACYJJvNNuIY6fJh29lvG3HEzPD9BAAAwGyZUyMl
zyy5TW+99ppsfX1qbz+jzgunlbZ6qVbYk9SRlBXr7i0c7TUqfahOBS9WqSgt1p0BAAAAAADAYjMn
QklvT6/e/OCsVn/iy0q4ap2WJ8Vreb/U09svr/Hq6evX6gvteu29U7rturVKWjJ+t1sO5Gj7MwPv
tx5uUllU8kxzg5SHtN85eLpyg/JKyrWnJFuxzf1adCBnuxS178Pc1tDQEOsuAAghLy8v1l1ABJmj
Hf1+/9Ax0uXDtrPfqL/XP3QMdW+8esHnwQL3JnM9XDuh+jOZ8qFGKIaqM5XnjvdZRz873PcTAAAA
mKk5EUq+7e7QZV+vbrsuXUuXJCgxIU5xxt+Ru3v61ddvvIxfUFLt6Xr/TIdV9vYN68ZtL6usSU1l
AyFhW5Q+Q4Bj74uqMocfelpVXb5dO3VY1SWZUe7FBNKKVNW0eFdNJPwA5hb+sWDhCQSLkw0Yp1o+
bDuDwVm4ADCUyYZ+4a6HCvlCBXnB56Hej1d+MmHqZJ8bSrj2J3o+AAAAMBNzYk3JMxe6lLF2jTq6
fDrX5bUCSnN05IVLPrV7fDrT6VWHx6vr01KsslPnlau2QiWFucrJyVFuYamOtXqtO57aMuWU1coT
VLrlQK5Kqt3j1puQPVNbtm7R+81tardGK+boQG2zjpQWKjenVDXtZvOtOmadD7R9pLk90AOr/L5j
NaooyTeenatt++rlHvo4LtVUlCjfKJOTX6KKeveIesHP+e7/2C5z0Ogz23Osz1BqPticvh3ow7jt
Se6hz5+rwpJyVU/28wMAEAEzXWPSNN1QLdwIwcmMHJzsqMzpBn/h2plOnwAAAIBYmBOhZHdPr+Lj
44fOlyXG64qvb0y5uLh4q+zUeeTuyNKe5xrV1NSk53ZJB7cfVItxx56/TY84j6s+ENAZV+uqN6rI
kT5uvcnw+cwANXHovNHplqOiVo1N5lqOHtXv36667KdUa7TdeLhAzaU7daR1uL7rVLpKDtUbz35O
xR1PqHwwKG08sE1HkkpVY9RrOlasU+Xlqh7OEUc852t/dVhbNTCN3fwMVWMWkRynPXe1yr/hU4n1
+Rv13B6HvKc8AgAgWmY6enI80ZiWbD4j3HTyUCMXQ5UPXBuvfCT6yGY2AAAAiKY5EUqaU7QDlsQb
XfJ51PvBccX99rDif18t25VTIctOXppytxUp0z5wlu4oULbPJZcZRCZtUuGWZtU5B1JJb3ONqh1b
VZA+Qb2JeJr1dFW9HFuG15TMLR5uS+2Nqq7L1tYtWbIupReppPh9VTuHU8msgmylJ1k3VVBcoJP1
LWr3OHX8h/kq3ZEdVO+k6puHOzXiORP2c5z2PB51GF9ud7vM8ZH2zCJty2dnHADA/DdRIDmTUZLB
zLKBadWj2xh9PVz5wLWptDMV4doHAAAAZtOcWFOyf1TQ6O96Tymr+rQ8/Vp5znXogw9fVN+NJSHL
TpbXVauDVUfVfNKltg6fccWhAutOkrKLd2hfZYPcRVt0qva48otKZZ+wXmjO/Q8pZ7/xZuUmPVJ2
TE8VmiHeqRAlzbYylB6U8W3Y6NCpNl/Idu2pqQN1vD55VKcn7q8bcd+xdzLfhRC8nvDtZW5V1V63
9j3+sL7dIaU6dqhib4myySUBAAtAqIAvGqYaakaindlsAwAAAJiOORFK9o4KGvv7+9TT1an+br8u
d11Uf2/4spPiqVfltoNKrDikQxXpsntqVPpQUAiX6VBxR6WcrRlqrdui4jL75OqFMLTRzYTMad0u
udulrMHi77c5tT51lwYCy5HaXS7Jnq0ka8ziI/q7V8uVmzS6VKjwczL9CNeelFFUriPGS1636g/s
1M6j2WpiG28AMdLb1aX3Dh3S6dpa+c6dG7ds4po1urqwUDfu3KmElSsnbLur95IOvXdUtadf1jnf
hXHLrklcrcKr79fOGx/TyoQVU/oMmBvCbQYTKVNtM1IjM6dqOu3PdJd0AAAAwDQnQsn+/sFF3rs+
UM+ZN9W3Jl3tZ8+pz9etnp5u9cWtVHzX7yX7zUNlJ+RuUJ1zk/L3GO+9XnX4MlSwMV32JKnd2SLX
iMKZKiiRnqiskrugVGWBcG7CejOQlqvigv2qOtqs3LJs2d01OlK9QcWHzZ26B1at9HSY6zfarang
R48065Gyp2RP81n1DhzI18byXKXJK3dLtercBSopDPWg9drokOpcbikrPWw/QraX3qAqn0M7stOV
lGS3vgeJiWObAIBoeffQIV2uq9PHb7xRiX/wB2HLmYGJz+fTb42y7xrnmWVlE7Z96N2j+nHnz7Qu
42pdnTDy/y9HBzA9vT06fvolmY2XZf6XaX0WTE4kArBwO2VPdG8yQk21novXw33W8coDAAAAs2lO
hJJ9fQOb2nS/8wPjl8HrlLx6hXov2nX29GXdeNO1unC+Qx++86y0vnyobGjtqi17WN9o8A1Mn/5m
hYqt3yvztevrx/X4oznan2hcL96o0UsupjuKlFh5RCV7zNGIg9Imrjd9duXvPSz3E4+rMMeaG60d
VYdUkjlcwvVMuQrLnepIHJgKXmYNZUwy6h2T58A+/Wnu4+rwrdSGvCKVlpo9CzVSMk0FO3apuvRh
5exPVN43f6QD2aP7Eaa9levlqyxV4c731aWV2vRImY7tYpQkgNj5sLZWt2/YoK6urkmVv2b9er1p
1JlMKFn74cu66sardPnSpRHXOzs7rWNycvKI66mpqar93cuEkrMsEiPypjMFeirXI9HGXLweCqMk
AQAAECk2/xz4m+XRf2tWwSdv08nqHcrJzVNSysf00buv6KNTH+nGG9KMTvbo9Tfe0a1feFr/9sZb
euzT2RM3Oq+16EDOdulwk5gpPb6Ghgbl5eXNWnkAs28q/7v8SU6O7rz9dnV0dEyq/IoVK9TS2qrP
NjVNWDbnJ5/RTbfeogsXhqduezweNd73Y+t97iufk90+/E9Ty5Yt0+/f+52aPvuzSfVlImb4OTr4
XDhO6EmbQ3tC3quU079bm6PcIwAAAACxNSdGSnb7BtZQTLjuQb322hvacOtauc/0yde3Qq82vqGe
7ktasf72EWUBAIuPucRwd3e3FRZOhvnvbr0TFxts3C+v16srV64MXfIF/Zljvg++Z44YM+tgMjZr
t/Hfxe5YdwMAAADAnBHTUNL85c76xbK/T6c6zuv62/9IyxO/qBVLE2S/qVC9fX719PUPbW7z0fnz
VtkzZ85Yo1XMUSoLU5bKJjGqBwAWG3MBj8uXL+tS0BTrnp4ea8q1+TKDw97egRgyISFBa9euVd/S
pZNu3KwfHEya79vb263z93/3vvoH/zwy216zZo1W9E2ybQAAAADACDEPJc2A8cZVCXK+2abefr8S
lyRoSUK84uPijBJ+9VnBZJ/1irdJG1OSrDrmL4QLN5QEAIRihpKB4PHeV1+V2+22plvHx8dbU7VX
rlypxMEduWpuuklXLl6Uf9KhpN8KOM3As/nBl/TRRx9Za1eaoeSSJUvU9JmfWn/2mK9bX8yVx+vR
ClvSxO0CAAAAAMaIaShpjjIxX5uM9w/GsiMAgHnBDCXNQNLn8ejtt9+23puB4ehA0mT+s1VCT4+6
J92439pM7UrvFb3zzjvW1G8zgDTbD4SRgZeMx/Qu6ZW8TN8GAAAAgOmYE2tKAgAwGebEbO+5c/K3
t+vt++8ft+xK4xXX26vJ7dMta33I877zurDkgu49+fDQA1//1L9ZQWRW/X3Df2qukvpsfdIlQkkA
AAAAmA5CSQDAvGGOlLSdO6flfr+WT6ZCf79VZ3KN+3Uh/oL8y/0aavyKhkdHpmhg+GWgaeNL7YSS
AAAAADAdhJIAgHnDHCmZGLQj9oSmtPu25Es02o4LutYfFEqay0cGJaF+42vyjQMAAAAAgsVNXAQA
gLkhfs0a9fv91oDFybxsCQlWnclYE58sm9H2iAbWSre+lqtbfnGX9T74XoIt3qqD0Gw224hjzNvZ
bxtxjJZYPRcAAACY6wglAQDzxnWFhXpz1Sr1Llkic0/t8V69CQl6OzXVqjMZhdd9RqveWqolvfEj
G7pp8BV0LaE3Tqlvr7DqYP4jMAQAAACiL2rTtzs7O6P1KADAAnTu3Dmtyc/Xhxcu6KdOpy4Zx/Gs
WL1a6Q6HVceqO86ISfN+/pp7deHDc3L+1KkLl8b/M2v1imQ50h1WnYnaXozMUY3m7uWBY8zb2W/U
3+sfOkZLrJ4LAAAAzAc2/0z+lg/EWENDg/Ly8matPIDZN9n/XV65ckUej0e9vVNbyNFcD9Jut2vZ
smVhy8xm25Nl/uNdcvJinQ5+Qk/aHNqjSjn9u7U51t0BAAAAMOvY6AYAMC+YwV8kwr9ot43ZMdPR
kwAAAABii1ASAADMsoGRkHI6JcfwcWBkZL7qrVGSpj1y2Mx3E4+YjFQgGVhPMnh69eg1JkPdC1wb
rywAAACA8NjoBgAAxNBm7fY7VWm9N8NIv/xRnMIdLkQ0rwdeAYG1IQPrRAbXH30dAAAAwPgYKYlF
x1y/DgAQTQPB45OBEZHmaMk5vH5kqNARAAAAQGQRSmJRYZMbAIityqGp23Nb8PRsgkkAAAAg8pi+
DQAA5ghzTUmbbLYndWKCkuZGN7PFDCIDr2CBEZTBQWWgTHBZpnADAAAAE7P5Y7x1ZVtbmzwez6TK
XnPNNbr66qtnuUeYT8yp2Ix+BLAQdHZ2Kjk5OdbdWJQYDQkAAABEX8ynb5u/hN15552TKvuLX/zC
2m1z/fr1s9wrAACwkAWPZiSQBAAAAKIv5qFkZmamnE6nEhMTJyxrhpcnTpywgsn09PRpPK1FB3K2
S4ebVJY1jeoz0q6a0odUV/CiqorSov1wAAAQhCASAAAAiK2Yh5KrVq2ypmV/8MEHSkpKGrdsc3Oz
7r77br366qthQsmB0PGZMPUde/9GGTPt8KwYCCz3OwPnK7UhO1fFO76ubdkEmAAAAAAAAFhYYh5K
mtO3zUBy8+bN6u3tHbdsQkKC6uvrdcstt4QpkaWypiaVWe9DjYo0ru2PWNcjzrE3MIrSq/bWOh0s
f1ilJc8Z16YzKhQAAAAAAACYm2K++7Y5+vGuu+6S1+tVX19f2FdcXJx+9rOfKSUlRdddd92Mnult
q1VFSaFyc3JVWF4r99AdM8jM0YHaZh0pNe+XqqbdrOBSTUWJ8o17OfklqqgP1PDKVVuhksJc5Rj3
cgtLdazVG/SgVh2z2slRfsl+Vbsm28MkpWUWaV/VHml/uardQX1rGS7VciBHpVYHh+/vO1Kt8pJ8
oz+52ravVq2tNcZnDZzXj/ms+46Fuw8AAAAAAADMjpiHkrfffrtqa2v1xhtvjPtqampSfn6+Pvzw
Q7377rszemZzq10lh2rV2HRYj7m+oYP1I3f/bnS65agw71epKM2rxgPbdCSpVDVGH5qOFetUeSAo
9MjdkaU9zzVa/Xtul3Rw+0EN5IYe1e/fruqMCtUa9+oP7VKBfYodTc9XccFJ1be0T1x2UIt7vXYd
qlfTq09pU903tPNpn4qrjPOXzXOj3y0jy7tOpRvfC+N+03Mq7nhC5dXEkgAAAAAAAJhdMQ8lU1NT
rc1uzp8/P+5ISfNl7r79wAMP6Fe/+tWMnplblKt0a/nKTGVlSx6Pd+T94iJlBgJEj1PHf5iv0h3Z
si6lF6mk+KTqm82gME2524bLpjsKlO1zyWXe8jSrri5bJY8N1ktKlT11qj21G98f4+CbxmdL2mh9
tqyCvIH+2c1zn9pcIwPOrILswe9FugqKC3SyvkWTj0ABAAAAAACAqYv5mpLnzp3Tb3/7W91///26
fPnyuGWXL1+uF154QXfccUeUemfweuRRnZ64v27EZcfewduuWh2sOqrmky61dZjpoUMFQ/UylDGj
fWo86ugwDhNvTB7eFAJN+1QTUAAAAAAAAGAaYh5Kvvzyy3rooYfk8XjGLbdixQo999xzuvbaa62R
ldFjJoKP6O9eLVfu6M3BPfWq3HZQiRWHdKgiXXZPjUofqguq16EO82NNddp2QHu9quvytGWPmWye
UmLi7EaG7S6X0ddsjb8HOgBgsbHZbNbR7/fHuCcAAAAAFoqYT9++55579M///M968803x32ZU7f/
6I/+yBpV2dLSMnHDkZKWq+KC4zpwoHFwWrNX7pZjOlJrnHm96vBlKGtjuuxJUvvJFrmG6mUpf1Od
qusG1mj0tDrldIVoPyRz9+0a7dtZKe0tU6EVahrPyZfx2V2D7dWounHmH8/TMRgGe5p19EizHtni
mHaGuriM3XgIABYqwkgAAAAAkRbzUPLqq6+2dq42N7Dp7+8f9/Xzn/9cjz76qLXxTfTYlb/3mEr0
tP40N8foa6FKj5xShrlQY1q+dn1dOvjowK7cT7cED4pMV3HFN2V/+lHl5Baq3CmtTx//Sc79D1nf
C/MZO7/t1MbyH6mqKFDJLseOvUo/um2wvXQ5smf+6VzPlKvQ/FxFVfKWHFPZmOGgAAAAAAAAQGTZ
/DEe/nD69Gm98sorKiwsVGdn57hlk5OTrZ26zR27ozuFeyEyR/ptlw43qSwr1n2ZvoaGBuXl5U2p
jru2QuXfPq6THVLqpnzt2LNXxZlJkrdVx554XAed5g2HdlTsVUm2OXV+8Hv1zUNKPV6up50b9b99
wan/9fxwm469L6qqaEYLiAJY5Mw/A80/5+Yqcwo3IyYBAAAARErM15SsqanRF7/4RV25ckWJieF3
dFm6dKmeffZZ3X333QSSmD53tcq/4VPJy43Ktw9Mg6855ZEyfarfv1112YdUW5Ulu7tGpY/ulA5X
q2Twx63R6VZFRa1KrOGwLbr8/PwPdQEAAAAAAGIhpqFkR0eHFUQePnx4UuVvueWWoXqp1k7RmL4s
lTU1xboT0efxmNsPye1ulzczTfbMIm0zQ8f2WlXXZWvr17MGpuCnF6mkeL/2OVuHQsnc4iJlsuAm
gEXKHCXJaEkAAAAAkRLTUHLZsmXWztt9fX2TrhMfH2/VA6Ylc6uq9rq17/GH9W1rlvYOVewtUba1
r3mG0oNmYG/Y6NCpttnc7xwA5g8CSQAAAACRFNNQcvny5dYLiJ4kZRSV64jxktet+gM7tfNotpoe
M5cOcMndLmUNBpPvtzm1PnWX8Y5gEgAAAAAAIJJivvs2EFUt1apqdstrvk+yy54kWUuZpuWquKBZ
Tx9tlse8567RkeoNKnaEW790vTY6JJfLHa2eAwAAAAAALBiEklhc1q+X71ipCnNylJNTpCrvDh3b
Ye5UY1f+3sMqdpVb93K31ym76tDQepJjpalgxy55DjxstJOrstr2KH4IAAAAAACA+c3mZ4EozGMN
DQ3Ky8uLdTcAYMY6OzuVnJwc626EZK4naeKvDAAAAAAiJaZrSgIAgLmPMBIAAABApDF9GwAAAAAA
AEBUEUoCAAAAAAAAiCpCSQAAAAAAAABRxZqSWFTMjXEAYDax+RYAAAAATIxQEosOgQGA2cI/fAAA
AADA5DB9GwAAAAAAAEBUEUoCAAAAAAAAiCpCSQAAFhmbzWa9AAAAACBWCCUBAFhk/H5/rLsAAAAA
YJEjlAQAAAAAAAAQVYSSAAAAAAAAAKKKUBIAAAAAAABAVBFKAgCwCJnrSrLZDQAAAIBYSZhuxV6H
I5L9ACYlwemMdRcAYEEwA0k2vAEAAAAQK9MOJa3KBESIIoJwAAAAAACAhYHp2wAAwMJ0bgAAAADR
QigJAAAAAAAAIKoIJQEAWGRCjYhkjUkAAAAA0TSjNSUBAMD8Eyp8JJAEAAAAEE2MlAQAAAAAAAAQ
VYSSAAAAAAAAAKIq6tO3L168qF//+tf66KOP5PV6o/14zEFJSUm6+uqrdeutt8put8e6OwAAAAAA
AJhlUQ0lz58/L6fTqTvvvFMf//jHtWzZsmg+HnNUd3e3PB6PGhoadM899yglJSXWXQIAAAAAAMAs
itr07QsXLliB5Gc/+1mtXbuWQBJDli5dav1MbNmyRa+++qo6Oztj3SUAAAAAAADMoqiEkuaOnm+9
9ZZycnKi8TjMY+YoWvNnhV1gAQAAAAAAFq6ohJJ9fX06e/asVq1aFY3HYR4z15Q8c+aM9TMDAAAA
AACAhSlqIyV9Pp81TRcYz/Lly62fFUZKAsDsstlsI44LTSQ/n9nGQv0+AQAAALES1Y1uCJowF5gb
6gAAMBX8HQYAAACIrKiGkqb+/n5rtIH5l/tJHz/6sf78sZ/qwaPf0efWTaFerNrlOO3jbMvLy5v1
ZwDAXDf6/38XmoX++QAAAICFIGq7b5vMQHJax8FfKPz+adaPdrscZ3QEAMwu/9CffwszsFvonw8A
AABYCKI+UtLcwMQcuRAYMTmp41Wf1YEf/6Fx7jfqT6HeREfjdxW/zP+IcLscZ3QEAGC2MHoSAAAA
mBvm3EjJD176n9rxxc/rc5/7gr6446/0/Ns+9Z86rq9/7us6fsos9ytVffaz+u9P/0B/tWOgXMlf
1+ntt3+iyqHzen001O5g+cPh7gcdL76jn/zPnfq8Uf5zX9ipyvpTk+43R0ZKAsD8dUJP2gY2c3ny
xPB7m+1J487I+6GvBd8Ld33ssyYuP9W2JjbVQDIaS4sAAAAAi1FM1pQ0jZ5aZR1//4L++9949eg/
/VAPpEjn3/5XvXC6Q/7kwcpGmf5+a2yj3j63Vk9954da5zuhb335m9rd9RVVVPxQf7nkFeP8b/Ts
G/fq/8waaNcs/0HXWu03yv9l4u/1whNf03/7lxv0vc3B7Xp04u/L9P0V39A/1WRrpdGXJx7/v/Uv
N3xPn782TH85jnt888039cILL4QMG+Pj47V161ZlZGSErA8AiKbN2u13SjaH9jgcxnmlnP7dGvhj
0gz+jOvWtXzVG+8dNlnvBwSXHWwt0FaIOvVjrpvvnaqc4jPC92t0uZmJ1prHAAAAwGIT1ZGSwcFT
yFfXR7qg8/r9R+fkNc5XZz6kx+69ajBYHC5n2vzQvbpqiXG+IkObbpBuuPdeZa42zzca5z1674PT
I8pn3fvJgfL+a/Tpok/qw1d+pXPB7Xqa9a//nqWvfPmTWmGeX/Ow/uTeD/XKr06H7y+vcV8f+9jH
VFBQMObnwPzlbsuWLdqwYcOI8sE/IwCAWAkVAJr2yGGFgAEDQWaldX3yIxWnZjLPGN0vAAAAAPNB
VEdK9vT0WK+wwdOGR7T3K/+ov937FVVflpbf8qD+r/9aojt8PVZ42OPtVne3T31mWZ/53nzjVY+5
LGSPxzhfFnTuNc7NAqPLGx96RapZQB6vhtv1XpBHr+mpbQ/rqaAu3XJjoB1Mx2233aZz586psbFx
6NqDDz6om2++ecz31QwrlyxZEu0uAgAmJVRYaYaGfu0eHLU4GyMVJ35GuBAVAAAAwFwW1VAysB5U
eCt1Q+Ff6DuFxlvfGb369/9VFT+4Sz/4gm1sfeu99Ua2oXNbyPOR5aUzbpe04jattF0abneJeTNX
//X7f6G7EiP5qXHffffpypUrev3117V582ZlZ2eHLDfxzwcAYHYEpkKb9owK/oandjtsgfGIlUFT
sccz0FZwcLh5qK1Q7exR/QlnUN3f6Wv6rvEVSrh+jR9QstENAAAAMDdEfU1JU+AXgjHHt36sQ947
tP2T12pJ4gqtSJSWaHiR+dGB1UC9odgx7Lnpwpnzsm1aI/+51/T8D1zK/T/u0Epb43C7KXfqc3cc
0T/+/au64euf0lq/V2ff+oGOf/Sg/vdPrwvdX46TPpqjI6+55hpt2rRp3HIAgFgIjEac2v3N49Yx
jTe6cpx2Rpz/g/E13X6PNd1AkjATAAAAiKyoh5KjA6gRx7VXqefv9+mxigvq0RKl37NdFds3SZfc
I+oPvpnS+Yc/+X/05X/8jS4rXfdsr9DOu1dKZ4L7tUaf+osKXX76b/TE1r/V5Z4lWn3bPSrZkTK2
nxynfDQ3tsnKylJAuHIAgPluvFGX8xNhJAAAABB5Nv80/6bd63AowemcuKAG1pJ8/vnnrc1NzPem
6I3UO6mnH90r//7n9NVNsR8xyDH8MS4uzgovf/zjH+sLX/jCmPUlQ/3MNTQ0KC8vbzo/wgAwp3R2
dio5OTnW3QAAAACAqIjq7tum6I/UG3yu5saIQY6TOwIAAAAAAGDhimooGZuAa5O++sMfauem2Adt
HOdyINmiAzk5OtAS6zYAAAAAAAAWvqiFkomJieru7ram6FoP5shx1NEMJb1er/WzAgAAAAAAgIUr
aqHkmjVrdOnSJSt4Ml9zYQ1DjnPraAaTXV1dSk1NndWfRXdthUoKc5WTk6vCknJVt3rVcmC7njHu
PbM9x7ieo9KaduPMK76n0+IAACAASURBVNdQ2RzlFpbqmFF2wOCoyNpmHSktVG5Oqb77P0K1MZGx
7Qw8ulXHrPOB5x5pHmjL21ihnJ01Cmz91HIgV9uqXYNnzUZbO1XjDv85AQAAAAAA5oKo7L5thk43
33yzmpub9eCDDw5dDwRRHDmaG9yY71977TXdddddszeV212t8m/4VPJyo/Ltkqe1RjWnPMoqO6yt
z2yXDjepbGiT8Ha5O7K057lyZRpl3TWlenT7QWU1lilQpNHpVkVFrUrs5lmLLj8/uo3JGdmOR/Xl
21WXfUi1VVmyu2tU+uhOo91qlWTlqqC5US5vkdKTWtXckiqPq0XtxRlKc7nUvN6hLenhP6cykyLz
fQQAAAAAAJiBqIyUNAOn1atX6+Mf/7jq6up0/vx5+Xw+JSQkWEEUx8V97O3tVUdHh2pra/WJT3zC
2n3W/JmZFR6POowvt7td5rhBe2aRtuWnhSmcptxtRVYgaUp3FCjb55IraABkbvHw/ZkY0U57o6rr
srV1S5asS+lFKil+X9XOVqPDGcre6FSby7je6lR9/i7tUJ2cRp+87la1OTYqY8qfEwAAAAAAILqi
NlLSXCfQnJZ7xx136N1339W5c+fU09MTjcdjjluyZIk1vf+Tn/ykUlJSrJ+VWRspmblVVXvd2vf4
w/p2h5Tq2KGKvSXKDpPXeV21Olh1VM0nXWrr8BlXHCqYnZ4FMZ+TofSgPm3Y6NCpNvN6pjY6OvTM
KY9cHfXKyj4iR+pxVTZ7lNV1UgW5pUqaxucEgImMXnJjoVnonw8AAACYa6ISSprMkW9Lly5VWlqa
Vq1apb6+Pv7SD4v5C6D582GGkeZr1kZJWpKUUVSuI8ZLXrfqD+zUzqPZaioLUdRTr8ptB5VYcUiH
KtJl99So9KG6WexbgLnRj0vudilrMER8v82p9am7rPcbs7eovrlO2c1ZKjgipaXmq+NgnZqNe9k7
AsMtw33OKc4rB4AF54SetDm0x3pfKad/tzbHuEcAAADAYhS1UNIUCCbNkXEEkggWCCZnbYRkQEu1
qnwO7chOV1KSXfYkc2d488Z6bXRIdS63lJU+UNbrVYcvQwUb061y7c4WucZtPEQbJle1tj1ao+If
HVFxevjaQ9JyVVywX1VHm5Vblm2tKXmkeoOKD2dat5M2Ziv7CeP+lirVmhfSs1XkKtURb4EqMib6
nAAwdbM7ijA4JAw2W4HhZu32O40PNfzMSH2+4D/C+GsOAAAAML6ohpIm8y/85lqCQEysXy9fZakK
d76vLq3UpkfKdGzXwOjBgh27VF36sHL2Jyrvmz/SgcJ87fr6cT3+aI72J27SI8UbNf7ykWkh2khT
e0u92vK2qmAygaTFrvy9h+V+4nEV5lhzr7Wj6pBKMgOPyVR+hk/r8zcNTNVWhrKL7apszdbGSXxO
AJiqQFA3O/+gGBQSVjrl360wIeXsicTnMwPJ4OqjzwEAAACMZPNP82/gvQ5HpPsCTCjB6Rxx3tDQ
oLy8vBj1ZjK8aqy4X/WFL6s8m52vAYTX2dlpbfS1OA2OlqysVOWePdoz69OqA6MzJ37OZEdPEkoC
AAAAUzPtIYujw6HFqr+5WXHZ2bHuBuasNjmbd6i4nEASwEISasq1GfDlqz5w/fOf1+dfeEEvWPe+
Znx91/gaXX5UIGgFkuM9a6bPCDdVPLzp/NvtbK9EAgAAACwEcbHuwHxnW78+1l3AnJalsuoSZU5c
EADmkYEp15XWezP4M9/vkcNWr/yh63+i7w29H1DpHDgfOJrln9SJ4GbNkHHEc4JHNE70jOv15ZB9
CjxjdFuRZWaXZhjJCEkAAABgcgglZ8h/6lSsuwAAwAJhhox++efpjthmGEkgCQAAAEwOoeRMdXXF
ugcAACDGgqdsj11fkvncAAAAwGhsgz1TK1fGugeYAnNjHCDYTDdK4mcKo83tzbciJXhtxj2qPxFY
Z9qcLj04Pdq4v34oixtY6/FrMidZj9PWC1uNOq6gdSCHd+Z2WG0NrxG5efD68DP2DJYJ1SdZ9Ua2
NfJeuJGZk93oJjB9O/AeAAAAwPimvfs2BvQ3NChuUfwCOjdNdfftub9bN6IpEj8P/Ewh2Ex+Hhb3
7tsL12RDTQAAAGCxYfr2TDF9GwAAhEEgCQAAAIRGKDlTV18tv9sd614AAAAAAAAA8wahZASwAzcA
AAAAAAAweYSSMxSXnS2dPh3rbgAAAAAAAADzBqFkBPg/+ijWXQAAAAAAAADmDULJSPB4Yt0DAAAA
AAAAYN5IiHUHZssv/uM/9P9+5zvW+6/8+Z/rrk99Sr9uekUXL7Rr1eo03ZpzX+QeZrdHri1E16Xf
yvnqL/XBhR7jZIlWX3eH7nHcoBWx7hfmN995tb1ar1/2/YG+9MCtI+/xMwcAAAAAwMIMJX/+yiv6
x7/9WxUUFlrnT3/72/L39yt5SZfuvPNutb31RkSf529ri2h7iJYr+rWzWR/G3aaHim/Viku/0s/q
mvWLd6/X/TfFx7pzmK9+/ZKebTk38H7N6Jv8zAEAAAAAYFpw07edDQ36h6ee0qc/8xnl5Nxkvcz3
5rWWX7boUme7vN3dEX2mbf36iLZnOd+iV156RS3nI980Aj7Qh+fidfXGW7UqXopf9XHdlCp1/M4V
645hPrv1AX3pS19S/nVLQ9zkZw7zl81mG3GcC+ZinwAAAABMzoIaKfnqyy/r77/1LRUWFmrz5syh
X1LM9z09PfqXmjotX7lKa1JXjdNKnzpdv9KbrvO63NsvM7dNWLlWG2/PUvqyMFXsdvlbW2XLzIz0
R8JsOtOhy+b02aDZ9/alieo/26EzuklXxa5nWKj4mQMAAAAAwLJgQsl//9nP9HeVlVYgee+9m+Q8
Uqnku/7Yutf5i3/WvSV7rGDy6NFq5d13uxyf/dOQ7VxxNav5nW6l/sGduvNau+K87XrvjZN6y9ms
/rxsXRtmhqW/q0sRHaeRkqX7HohkgwhtqVakjL7WF4uOYNHgZw7zj/mPfH6/f+g4F0SqT8GDLOfI
RwMAAAAWhQUxfbvhpz/VU/v36/7779enP/0JLVmyRJc+cunae79kvcz35jXzXr5R5qcv/adVZ6wz
anNdVOL6T+j2a+1aYlyJT0rTLdl/oLVx5+Vq88jz5n/opf94U8P7bffpo8RevVfbOHB6xa2WE/V6
6aWXjFe9Tvy6fTBucOkXxrUTb7rU/Mq/Gfde0Wuvj23L9YuXVP/GmbHTt8O0621t1EuvtKh9RP3T
g825dMJsoz2y3++FpVuXxkyRZ20/zCZ+5jD/BEK/yYd/J/SkzSab7Unj3UyFbmvqfRrLDCTN6oEX
s8ABAACA6Jn3oWR9XZ2+tXevPv3pT+uhh+7W0qVLFR8/8Av+6uWJ1stkXjPvmWXuN8qadcy6I5w/
q87eRCWnj9pNO/5qrUtJULenQ/ab12lld4dcgVCh7wOdvxyvZXZz79wran39LZ2Ny5Dj/geU9/FU
+T48qZNnhpu63OnR+uw8PfDAffrkx8a2deZiglLWj57EGb7dpPQULfV51OE1659Sx+U49XeeldXk
2U51x61QStqMv80L01WpWq4e47/X4Uuebp+0fDXTaDE7+JkDooI1JgEAAIC5b96HkpV/9VfWCMnb
bkvXunXrrPDRfK1Yl6EPf/Fj62W+D1w3y5hlzTpm3ZHMNSSXyj5maqWUFGd8q/p71JN0vVJX+nT+
9wNJove90zq37ialtb4meVw6e3mp1t+aoRXx0pKrPqbrV/aq86PhYVEr07OUvmJwVFSIti4uXasb
R6cT47VrdNae0K2us0a5Ux/JY1+ntTovs0lv5yX1Ll1pnCO063TV6h6dbvu1LvZJfRd/pXc7pLU3
3BTrjmHB4mcOC0lgBGPwyxzNaF53aI9VZo8cI0Y5BtcZe+3JE6Pvj9dWeHNlijkAAACA8Ob9mpK1
v/iFdXznP2sVFxc3NEqy8PHKoTKZmcPvzTIZGRv0wBd36IlvfnNUa2ZG2y2PmRGOCia9/f3G7SVa
oiTdeG2KPnjndzqj5ers6JJt492K/+lzUm+v+o36H/78JX0YVDdxRbjej21raeptso8uNm67Vytl
+Un9zuPRaZ9Hy1Pv0LWJr+pNt0fne31ampJuPAWhLdPH77lTF19p1ovVLcb5Eq2+Llt33cRUWszA
r1/Ssy3nBk9a9OyzLVqT9SU9cKt5zs8cFqJKOf27tTnoyma/U7LCxOB7gYDRvJaveuO9wybr/u5A
eYdjTHuh2wIAAAAw3837UDKgr69PcfHxSkgY+EhvNdbr+Hefst5v+doT+lhuvvXeLGOWDSllrZIT
TqnT7THeB0WDfaf10fleLV2Xap3Gr1+n5LZ3dMr9O13pWql1nzDKNjdrINRcruvuzVXmmCSwM+Qj
Q7Y1xnjtSuuSl6ut8z19dHm5rtoUr5SOZPW2GefGPfvNodrDkBU36FN/eEOse4GF5NYH9KVbx7nP
zxwWjM1DYaLDZo5lnCg0DC4frgzBIwAAALBYzPvp2wG9vX2yxSVYoaT5av6X/0+PbLnHepnvA9fN
MmbZ0K7SxoxV8p16XW/83qMe40qft12/aX5bZ/tTlLFxMOCLv1bXpUrn2z5U18pUXZ8k+TdulD9+
tdYuvawPX2/V+YHKav/d62p+c8yuFsNCtDVGyvXjtpt0VbISL57V2aUpWm8OuLpqnVJ6O9ThW66U
q6f9LQUAYAJm0OiX3+9UpTW9eryp1cEjJc3ycxvrUgIAAACza8GMlOzt7Rkxfdvvuyyfzye73a6b
N1w9dN0sY5YNZ1lGtu6OO6k33vlPNbxtrjEZp4SVa/UxR5bSg2ZYXrU+RW+d7VDKtTda06N7jef4
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
a+HCs/WZvpd0zmmn6/t3nq/bg11q6ZTmzJqskjdb9KklF+qKmaEuhPpzQgePS7MK+3T26y/L/tMQ
7Qy6n3Y90HRCU0tK9OKSY7rYuZ+zCzq17ab3aGFflx76rllrsjPch9N08e/e1CcXXxDqQ2RNySHa
ixjY7jGtae7SrDOKdPC3h/TlFJ472bcBAAAAAMgtls3cKoxhdXV1Ki8vH7JcX1+fJty5R77CM5Nk
356uH91brIpJ8Vef0NbqA7r/o3+uX37Qp2f/uVnX/9opP9UpXzlLc5rf0J9vPyb73Fn60VXTVDHN
H7rq+AnV/qRNH9nVJevcs9R4zVRdMimSffuwrv16m6wl79W28sma5Rw9+vZRvZznlDnSqhlPH3b7
dcXyefrOggJNdM4fbP6DztpyJHk7g+4rX5+68mx99eLTNCt8XyfeOqzP/0urnmwLlbt8yRx9u7ww
rg9tmv50OFt2wvam6tWaaVJjky7cMbBdXfAutf5dob775dd1y9FEzzumfFe7er5ymfLyGLyN3NXR
0aEpU6ZkuxsAAAAAkBHWexZdYbtrulm+8Bp24WmU4VBl9JCZXmnZ/afsUEAhVjS6GT5siluRy207
NCvVDIgy69lZfsnvly8v39nPc6q3QmvLKbTOnBsrdbY+q78V96wdcA4HFAwG3a07pTZc1u2TL9Q3
W3Gx1kifwoNDY3tuR//jJdEJa+DbaI4Qj2mokefXv/GsL1JNglbc52Mr/Ji8SyjmRhOU8eqAFfdf
O9pIaC+SDCXuqYan39rmC20PqCp8J17PzhdTyI5uEnySBiZ7SXQLzn53V0e4WKhc7DOyB1wSvi8r
rsWBNxZ33I7WF/002hr4GYt+iKwhPlyhIFzBaaeHijofWPOZDX2EQ+srWuGXwmE7wxf+/oh+Rpyy
Qbv/69L/SO2Ylvo7Yoc/m1b4MzRQ3P3G998K1xXub+gZ29G+2Lbd33wg4H5/+53XhPwJ0bIB873q
XDthQoEmT56s48ePO/0PuJVPmJCnQF+v8iZMcG4roAl5ee71gWCf+33uNz8nnP2g8z0e6OtzA5d+
f17ouHN9wCmT5/O7+729vW4Auq83oJ7eHmfb69ZhjoWSbYSfqhWqzw6anxlW9H6CwdD8+YmTJqm4
eLbynDo7uzrV09OjadPCo0PDPwd9PsutJxDoU69z3vTN7/TDtBXo7Qv1xTlnBJy2TF8Ubsu063Ou
Dd2L36kj6LZt7sW8jzzXPOc+I2uamvZMJyPt5OX5Q8/eOW8+H6Zd2y3nPH+/z/18BJyvhzlv2jBb
04ZlfvbawdDnLPL94A8/G+c/7nM1zzJcX6iO0Nc9YH4GBIPhHxGhek1dE5yvnVt/uD92MPKM/OHn
K6e+QPSzFXTqNPeZn5/vXuP+PDeDc83PfF8o+G3u03ytfO7XSqG23HsN9cUOr39q+mc6lJc3wa03
8n0RCXoHw78P7PAzDLrLOISeUyAY+nz6nd9Bkc+D+Rr1dL0T/TqZffN5DH3v+pxfV3nu8WDk51/k
d2XoF51TJhhOGhXzMzX8yy9Sxj3qs6I/h0K/z4L9x916gzHrMYZ/f0TXfO3/OW/qKCiaNnDtxtif
DfHf0s7n17LjfttEfsAN8f8oY39uDiia2uUJ2+rpOhr6/TbgZ1qi31Vxx2PLenYg/lj83w2Gv3RE
QeFUd3usvS30Nej/VTaouwN+Dsefsz2uiZ62otdY4X7avsjXPfb3hGJ+cHtUGLMyyeQzznF/VpjP
fuR3ih39/rM91/+MtB3aif08Rv4OaEd/H5rvCzu2D5HfY7b6P4tWzPHw95+774v5W5BtDazHtvq/
l2LvW/2Xf+RDl2rSpEH/R9Flfn4XFRV5nsuEtt+9kbW2T8bss9+d7S6ckrH6vOl3ZtDvzKLfmTXW
f34jd/1/KJ8podVNQkYAAAAASUVORK5CYIINCg==

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://img.baidu.com/hi/jx2/j_0016.gif

R0lGODlhMgAyAPeAAKfuLITVKfn4+fz8/JPgKiyXEPb29k2uIF26Ja3xLcrjxjKaF3zQKcryjzuh
HKvMqv///4y3i1GWTe353t/t3XPLKunz6PHw8pTZVWnEKK/lbuL2ygdlBOv61YvLcqTiWdHoyTqK
NdDwrUOiKRZ+CyWFEub4y7nTuZvjNcXbxNXq0GmiaF2uSOTz3e39zPj98dHS09Hj0XvKUPT86Pn7
+ef40H+vfre4uCN9H7PtYIrVQGi1UZ7be3S8YNvxyZrFltjl2O3q7bncrmq+OpPdNYPBbUunOPD3
7VKrO7XliGKnPNnt1Nja24raMej31/H91v35/cb4ZXfGOrj0RqbnS6PpOd3x00SYNg5xCajakWCd
XVezNHWqdL3ln+Pg6PT59OT1057jROL7savWoN31up20orP0N/z++X3QNeX5w2yzY+Hi4jV4Fr/J
xKnwNbvzVabuJnKkXp3nH4/aJE6KHev9xa/CsIbKPZiYmG5ubofkLJrkKyeTDbX3LYzaKaHpLP//
/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEA
AAAh/wtYTVAgRGF0YVhNUDw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVT
ek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9
IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAg
ICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIy
LXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFk
b2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFw
LzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9w
IENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkQyMzJDRDIyQzk5MjExRTA5
OTFERDcxMzA1QjQ2RTI5IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkQyMzJDRDIzQzk5MjEx
RTA5OTFERDcxMzA1QjQ2RTI5Ij4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9
InhtcC5paWQ6RDIzMkNEMjBDOTkyMTFFMDk5MURENzEzMDVCNDZFMjkiIHN0UmVmOmRvY3VtZW50
SUQ9InhtcC5kaWQ6RDIzMkNEMjFDOTkyMTFFMDk5MURENzEzMDVCNDZFMjkiLz4gPC9yZGY6RGVz
Y3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4B//79
/Pv6+fj39vX08/Lx8O/u7ezr6uno5+bl5OPi4eDf3t3c29rZ2NfW1dTT0tHQz87NzMvKycjHxsXE
w8LBwL++vby7urm4t7a1tLOysbCvrq2sq6qpqKempaSjoqGgn56dnJuamZiXlpWUk5KRkI+OjYyL
iomIh4aFhIOCgYB/fn18e3p5eHd2dXRzcnFwb25tbGtqaWhnZmVkY2JhYF9eXVxbWllYV1ZVVFNS
UVBPTk1MS0pJSEdGRURDQkFAPz49PDs6OTg3NjU0MzIxMC8uLSwrKikoJyYlJCMiISAfHh0cGxoZ
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
QpQA4SMBAQA7

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://s5.51cto.com/wyfs02/M01/89/29/wKioL1gJy1CAoYX8AAFWTP4JYMA991.png

iVBORw0KGgoAAAANSUhEUgAABLgAAAMOCAYAAAAdkb+wAAAgAElEQVR4nOzdC3wU5b0//s/sbnZz
25AbEALECJhghKgkIkm1xEtBe4ztEdtT6Q3bU21/NZ5aalvo8QC2xfZf8RyLvehpK7ZHbKuxrdFW
qNZQgSAG5SaSGCCEuISQhCSb2ya7O//nmdlNdpPdzeZGEvi8eQ07O5fneWZ2Ntn95nm+o6gCiIiI
iIiIiIiIJinDeDeAiIiIiIiIiIhoJBjgIiIiIiIiIiKiSY0BLiIiIiIiIiIimtQY4CIiIiIiIiIi
okmNAS4iIiIiIiIiIprUGOAiIiIiIiIiIqJJjQEuIiIiIiIiIiKa1BjgIiIiIiIiIiKiSY0BLiIi
IiIiIiIimtQY4CIiIiIiIiIiokmNAS4iIiIiIiIiIprUGOAiIiIiIiIiIqJJjQEuIiIiIiIiIiKa
1BjgIiIiIiIiIiKiSY0BLiIiIiIiIiIimtQY4CIiIiIiIiIiokmNAS4iIiIiIiIiIprUGOAiIiIi
IiIiIqJJjQEuIiIiIiIiIiKa1BjgIiIiIiIiIiKiSY0BLiIiIiIiIiIimtQY4CIiIiIiIiIiokmN
AS4iIiIiIiIiIprUGOAiIiIiIiIiIqJJjQEuIiIiIiIiIiKa1BjgIiIiIiIiIiKiSY0BLiIiIiIi
IiIimtRM490AouHYsWPHeDeBiIiIiIiIiCYIBrho0lq6dOl4N4GIiIiIiIiIJgAOUSQiIiIiIiIi
okmNAS4iIiIiIiIiIprUGOAiIiIiIiIiIqJJjQEuIiIiIiIiIiKa1BjgIiIiIiIiIiKiSY0BLiIi
IiIiIiIimtQY4CIiIiIiIiIioknNNN4NoDGiquiuOwXV0QVLeobfqu66D9Fcug3GKQkwT09FTNaV
MERGjlNDiYiIiIiIiIhGhgGuC4jjxHto37sdjqpDcNR8AFdHB6Z97YcDAlyNL/4GjX97EaoLcLvF
AsWIqMsWIObKa2C9KhexC66CwWIZn4MgIiIiIiIiIhoiBrgmObe9CW2lv0dn+Tb01H8oO25BdQMG
MWNMiEPs4hv9tnc2N8K+6xUYzQpUlwrFJbZ3udBZcQDtR/aj7v/+F0pEFK7Y8jwsqbPG6aiIiC4e
LS0tmDJlyrD2IyIiIiIiHQNck1zXoTfQ8cYWbUiiyaJAdatagEtVFcRc93EoJrPf9q3bt8KAHihi
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
5W05rKqqJnmnIuDy1Ksq8Zv6pmuPao6WKisaCVdaoSobCie/XQAAENMItwAAwGxm61sUg1MSzZFb
xz/1yGNsradP6Zz3nDq7/Mq44SatvecBrc19QAWFj1ijvCLz6NDuA8rYXqmSrIEwy5mRo+LSAlmz
+XzNOlhSoJzsbOUUlGh/Y2tfqSbtNq7trmnUfut+iarNW74WVZcXK8+4l51XrPI6z7Cfx+OuVmp+
oQrzXfqx0ZYv9GbIs/OKd6qqJXij99k79leprDhP2dk52rCjRs3N1SrvP69T/5PNKYrB/vXVLa+q
McqabeeooKxGw/cSAAAAAABgZrE14BoqYP3p6Z+S2H7urE6dOalzF87K39UxfGXvMTUedSkvK9Ja
XV7V7dyo2qynVNPQoMP78tVYsln7mwdKHHZ75Cqv0eEGc30rnw7v3qD9SSWqNso3HCzS8bIyVUVM
j1rkrkpVfo5Tzpx85f64To39CVfvs6syyq1n1+3dovwh3WzyrNCWvXVqeO0pran9tjY/41dRpXH+
inluPLcp8kdvbHaqeK/Z7316vOXb2lPnHf5rBQAAAAAAMIPYFnDdcMMNqqqq0htvvKFjx47pN++8
qd+994beffuIftVYr+d/tF+LlixWj6NLPeo2tq7hG/R55VWGMiItvN56WFW1WVq/LlNWtpReqOKi
D1XlHki4cooKtToYPHndOvTjPJVsygopf1R1/aO+hmhpVNWKfOWYhZ05Ksz/sQ65+4Imb6NqjWcX
P97XVlKqnKmDq+cU5ijdHHaWtEqZWVJmfm5vX5zmuV/HWiI8N7SuVlt1vV5fxLIAAAAAAAAzjW1r
cJnTDf/oj/6ofw2u1tPnddZ7UfMXmAvLL1Za6hLt+pu/Vvd5r84s/kTvzxlpDa5EmaOozBwoM2zI
5Te2DKWH3Fu5yqXjx/zhm7MCs1o9eW/toMuu7eGLN9ftV0bhwd4Ay/jfrPx8PVl9WNvyCuQcKXyL
1F0AAAAAAACMyLaAyxRcg+vs2bNqO+PV2YuXtGixU3GJ0qLk+brmxht06x2f1eKURUpbskTNje9o
1apV4RtLy1Temm+r1t2qwsJwSVJvAOYJCcA+PObWitQtCp8mmeUf0d+/VqacEdeKb5a76rhqj9+r
wXGYT4e9BSqw2mpTmzmgK9IMSgAAAAAAAIzL9FmDyyH1OLoHTUls97br5FlzDa52+bt8unDhwjAN
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
7hhi2U3367HHHlPe1XPD3OR7DrHL4XAM2k8H07FPAAAAsNeMGMH12iuv6B+++10VFBRo7drV/T/w
msednZ361+pazV+4SEtSFw3TSrfaW36tt1vO6GJXj8zsL2HhUq26NVPp88bYoeXLx/tRMBVOtumi
OUXMOXDJOTdRPafadFLX6wr7eoaZiu85AAAAAIiqmA+4/uMXv9DfV1RY4dbdd6+Re3+Fku/4I+te
++v/oruLt1kh14EDVcq951a5vvgnYdu51NKoxvc6lPoHt+v2q5yK87Xqg7eO6h13o3pys3TVGGcR
WQvNZ2WN/QOlZOqe+8deDWM1VwtShl7rtqMjmDX4nkPsMX9hFAgE+vfTwWT1KXTw1zT5aAAAAJiA
mJ6iWP/zn+upnTt177336r77Pqs5c+bowokWXXX3Y9ZmHpvXzHt5Rpmfv/xfVp3LndSxlnNKXPFZ
3XqVU3OMK/FJabox6w+0NO6MWo555X37P/Xyf74tb3+dbrW8/rLq3jrZe3rJo6YjdXr55ZfV2Pgr
fXzqYt8/XVv0unHtyNstanz13437r+qNN4dpa+gUxZB2X365Tkd+02q162s+rJdfbVLroPqf9jXX
oiNmG62T+/WeWTp04bJpoKyFhGjiew6xJxggjT5IOqJdDoccjl3G0USFb2vsfbqcGW6Z1YMbMx0B
AABiX8wGXHW1tfru9u2677779OCDd2ru3LmKj+/9x+Li+YnWZjKvmffMMvcaZc06Zt1BzpxSe1ei
ktOdg6/HL9eylAR1eNvkvGGZFna0qSX4D9Tuj3XyXIJSVpiTiy6p+c13dCouQ65779et1y1Swkfv
6ujJgaYutnu1IitX999/jz73meHaCjW43dxbUuX/5KjVblJ6iub6vWrzmfWPq+1inHraT8lq8lS7
OuIWKCVtwl/mmemKVM1Xp/HfdeCSt8MvzV/MVDFEB99zwJRgTS4AAIDZK2YDroq/+itr5NbNN6dr
2bJlVpBlbguWZeiT139qbeZx8LpZxixr1jHrDmauuTVXzsumD0lJccaXqKdTnUnXKHWhX2d+35tK
+T74VOfmLtV15r9OvS06dXGuVtyUoQXxUuL9j2ix97TaTwwM11iYnqn0BX2jNYZrK9SQdudc8Rld
s7Crt12js86EDp0/ZZQ7fkJe5zIt1RmZTfraL6hr7kLjHOFdrSsWd+rTY7/RuW6p+9yv9X6btPTa
6+3uGGYsvucwkwRHVoVu5igr87pL26wy2+QaNPoqtM7l13YdGXp/uLYimy7TKAEAADD1YnYNrprX
X7f27/1XjeLi4vpHbxU8UdFfZvXqgWOzTEbGSt3/1U168jvfGdKamfN1yGvmTUNCLl9Pj3F7juYo
SdddlaKP3/tIJzVf7W3nNTf1Zlljvrq61GPU/+SXL+uTvnq3dA3X+2HaChWmXVPiAvN/lytl/lF9
5PXqU79X81Nv01WJr+ltj1dnuvyam5JuPAXhzdMtd92uc6826qWqJuN8jhZfnaU7rme6GCbgNy/r
uabTfSdNeu65Ji3JfEz332Se8z2HmahC7sBWrQ25sjbglqxgKvReMKwyr+Wpzjh2OWTd3xos73Jd
1l74tgAAAIDwYjbgCuru7lZcfLwSEno/yjuH63To+09Zx+u+8aQ+k5NnHZtlzLJhpSxVcsJxtXu8
xnFIzNT9qU6c6dLcZanWafyKZUo+9p6Oez7SpfMLteyzwbJmQDZfV9+do9V9qVLXX/+17sk007L2
sI+M3Faoy9sNtSx5vo61f6ATF+frijXxSmlLVtcx49y457whXHvot+Baff4Pr7W7F5hJbrpfj900
zH2+5zBjrO0PplwOc4zVSAFUaPlIZQixAAAAMDExO0UxqKurW464BCvgMrfGf/3/9Mi6u6zNPA5e
N8uYZcO7QqsyFsl//E299XuvOo0r3b5W/bbxXZ3qSVHGqr6wKP4qXZ0qnTn2ic4vTNU1wdAp5Rot
nXtRn7zZrDO9la3LjW9ftqL0gEhthQrTbutHb/a3m3RFshLPndKpuSlaYQ4EuWKZUrra1Oafr5Tl
Y/5SAgAwSmZoFVAg4FaFNYVwuOmDoSO4zPLTG+t4AQAAxKaYH8HV1dU5aIpiwH9Rfr9fTqdTN6xc
3n/dLGOWjWReRpbujDuqt977L9W/a67JFaeEhUv1GVem0kNmEV2xIkXvnGpTylXXhUwBdOqmrM+o
661jerP+Y2tFrztTUrSoK/zoreHbCnV5u3FzF2nFDfN7b6ekWiPPLqRc01ffXBT/XZ26kKxlw3/Z
AAAYp9D1sSLZNmh01+UjuMz7H+kb+r7xJ3iuCKO4to1ypFhvODWadbiGvjmRpbsAAABiX8wHXH6/
GXDF9wdZc+cmqqOjQ52dAb3wwi/0hW8FA654q2xk8Vpwza3KuWaEB15xq/LuD3N9Xroy16b3n3a9
8IKu72ozjrJ0x/0Zo28rJVP3hF4b0u5gy3Vr3uChWstvzRODtwAA0dM7emvrmO5Fuv6Pxp/xPCe8
sSwyH67oaAMyAAAATD8xP0Wxs9MvR1/AZW5z586xAq65cxO0YcMX+6+bZcyyAAAA4RBuAQAAxK6Y
HcHV3t5uBVnm5khIVFzfXIPExDny+XzyeDzG3q+4xN7pfI743uDrxIkTmjt3rpKTk6Pex8D770tZ
WVF/DgAAAAAAwGwW0wHX2bNn9fOqV/QvFXuta59dt05Hz6/S1WkZ1vnHbS06+/Q/6c1Dh6zzJatW
Ke3GO7V48eIpCbh0/nz0nwEAAAAAADDLxWzAdc0111jbLQcPjlx4x46o92cox+c+J3m9U/5cRFZf
X293FzDD8D0FAAAAANNDzAZcsSDw29/a3QX0yc3NtbsLmGH4ngIAAACA6SPmF5kHAAAAAADA7EbA
FUWB5ma7uwAAAAAAADDjEXBFy8KFcrDIPAAAAAAAQNRN6zW4zDclxqq45cs1z9i3//73ktNpd3cA
ABgXh8OhQCDQv4/FZ5v1g6b6MwAAAGBqTOuAKzk52e4ujFvPggXqMfbOEycUd9VVdncHAIBJdkS7
HC5ts44r5A5s1VqbezQcgi0AAICZjSmKAAAgrOFHUK3V1oBbFbY8GwAAABiMgCvKAu+/b3cXAAAY
l2CwZEfAZOezAQAAEHsIuKLEceONvQcsNA8AwKQKXVMLAAAAMBFwRYlj0aLeA6/X3o4AADDpzPW3
HHL0r8E19Lq57TLOwl0PvTf0+tB64TGqCwAAAENN60XmZ4LAb39rdxcAAJhEwcXlzYXl81TXH3Jd
ft3lUEiZoeVDTf9F6gEAADC9MYILs4enTuXFecrOzlbJs8+qJLtE1a12dwr/P3t3Ax5VeeeN/zuT
yTshjCFAAoQxhABCRB1AokICTZFuxW3XXmvxuVyh69r/Utnnev7uX8G2S3mwYH3Kri1ePNvWXeTy
Wbt2a5/doltKUwSyGERG1CBChBgDJCQQQ5gAeZmZ8z/3OXOSeTnzlkzmLd+P1zgz59znnPucORly
fvndv0NEY4koTC9BGgxmaYXqN6EyzOwtIiIiIiI9SZ3B9d577+Hzzz9Hd3c3nE4nHA4Hurq6YLfb
kZ6ejpycHOTl5WH8+PEYN24cpk6dirvvvjtm/ZNyc4HW1phtj4Kx4+BLf4u21b/F8VeKgSt7sWFH
vPtERDTWeGZ5eQa5JGx0z1OzvpjNRURERESRSeoAlwhmVVVVKYGt3t5e3Lx5E9ev9+Hy5RtIS0vH
uHFqcCsvbxyys7Nx4sSBmPbPMGcOYLPhcO1hmK3LUGEexkq6GnDY1jX85cmtGQ0HAcua4nh3hIgo
yalZV3AHo1QiA0sEreqxfXD6UBBriVd7z+CWFvCKjKjVxTpcREREROQpqQNcwqFDhzBp0iQla+v6
9evycw+++KIHJlOGEtwym83Iz89Hd/clJaMruC40HLahvX8cZixdglmZMdkFGnUN2LFwHX4pXq5b
KD9XYvNrK+PdKSKiJKZlXenM0Z0eqH3g9QQznOCWdudFBsaIiIiIUlNS1+BauVINUtx6663K8MOJ
EyeiqKgYt9xSLL+eLr8uxfTp5SgpKVfarVq1KvgKO1rQaSxAQVYPOlv6otbPvKazw1/YXIFlNcze
GpkKPHV8N9bIr9bsPo7jx3di9S3x7hMREcWKpNT9khjcIiIiIkphSZ/BtXjxYuzfvx+LFi1CRkYG
nE4XjEYDTCYTMjMzkZaWhvr6/8Ty5ctDrqujrQsmsxVluI53Lzejb9ZsqElczThWexauwiKgqx09
DnkbWUW4vXIeJqaJ+X249PEJnG7vgTwLMGagoHwRKnzW3/fpUdS15+Hu++YhT52CT4/W4WL27ahe
YEbHxzaccq/DaMpBQZkVC3IbPYYoDui3mcZUMyIiIiIiIiIau5I6g0soKSlBdXU1jh49iqysLCXI
lZZmVJ5zc3PwzjtvYunSpZg+fXqINV1CW5cJ5pI85JWYkXWjE80+SVw3bppQVlmFmqrbYHa04XSj
XZuD7v5clC2S59VU4fZCoPN0A+xls5S5WVevKs+ZpdNg7r+Mpg73YvazaO/JQmHpJKDjFE61uTDZ
vY5FZXlwXb/h3YFw2hARERERERERjTFJH+ASZs6ciRUrVuDYsWPuAJdBeX777d8owxjFEMaQLrWj
y2RGiUityitBQdYNXG6yezUZN2U2JmamAenFMOcALofDPceM2XdWYFpeuvw6HZOmmZGBXtxMV/O0
MrrVABfSpmF6AdB5/gKc8lt7Sxd6x01GmWjW74ALDvR230CfMx150ypw52yfcYnhtCEiIiIiIiIi
GmOSfoiipqysDC6XC//2b/+GO++sRn39Pnzzm99EeXl5WMtfuNgJU8Ei99DBPEwryMLFzhbYoQ0n
DO5m68doaLqMHhGEEsMUkaHbblJpITLevYCmvgzcuNwPc1mpOgxy2m2Y0/UhGhvfQ91pMcrRjNIF
d8DiuXCgNvlpYe0jEREREREREVEqSpkAl+AbzJo3b16YS15Ae7cLvV3vovai5/QutNjl9YSKcNnP
4MSpdmDqfNxdWoDcG6eUulma/M+aMDiQMK8Mk8fVod12Fv0owPxpWnAqG8UVS1Asv3L2XUGj7SOc
PXMellmeGwrQZrElzP0kIiIiIiIiIko9KRXgGi7nhXZ0w4w5NVZMG5zahzPv1OGyEuEKsQKHAw75
UJoLC5Cb6UJXkx1i8KIzd5xO40yUTjPj/OkuZBRVYJI2ueVDHOsrQoVlErJN2TApg0d9RpCG04YC
EHdSPD70duJq7Dy+On7dISIiIiIiIqKoSbkAl8FgUJ6NxnADP060tXcD+eUewS0hE5aCHJxvb0ZX
qEGK5lKUFnSi8YO3USsf0nHjM5SwU59lprqmri+8mqflZyHDaIZljsd683KAlpM48rkyvhGmcZNx
W0UJ0NsQug0RERERERER0RiWcgEuUVxeyMzMDHOJNEyzrvAJbqkyZ9+Dmtnq68U1Fq95lsU1HvWx
sjHtzmV+63DZbBChqOyrXajwqAXf0XQZjoLbMM2zdJZ5FhbfNwt+siuwrEZ7E6ANERFRAtH+2CRJ
Upx7QkRERERjRcqNb0tLU6NGJlOCxu6cF3C+04TC0kmh2xIRESUpBreIiIiIKJYSNAoUPqfTiZ6e
Hty4cUP5Zbqvrw95eXnK9NbWVqVNdna2Mi2eQS+RzWW0WoG0abCu0MsXIyIiIiIiIiKi4Uj6AJfL
5UJ3dzeuXLmiBLhEoGv//n/DokWL0NbWprQxm81KkCvWAS5DUVFMt0eBHTp0KN5dIKIUV1VVFe8u
EBERERGNWUkf4EpPT0dJSYnyEKwiSypBGIqLh9709MSvI6TgxScRjRYG0YmIiIiI4ivlanAlKunc
uXh3gYiIaNRpBeaJiIiIiGKJAS4iIiKKGhaXJyIiIqJ4YIArRqTGxnh3gYiIiIiIiIgoJTHANdq0
mmCswUVERERERERENCoSusi8uDtisst0OJSD7Lh6FddTYH+IiIiIiIiIiBJNQge48vPz492FEXOY
1ENsOncOWSmwP0REROEQxeZZj4uIiIiIYiWhA1xERESUfBjYIiIiIqJYYw2u0VZUNPhSOnMmjh0h
IiIiIiIiIkpNDHCNMoNngIuF5omIiIiIiIiIoo4BrlhigIuIiIiIiIiIKOoY4Ioh6dy5eHeBiIiI
iIiIiCjlJH2ReduZM+gKkRk1/9ZbMeWWW2LUIyIiIiIiIiIiiqWkD3B9ce0a7r3rLvQ7nRgQD5cL
TkkavIPTBx98gIZz55T3RQUFMe+fYcECaPeSkhobY759IiIiIiIiIqJUl/RDFF2SBJcIag0MKI/+
3l7cvH4dPT09sNvtyvOXFy3CR+fOoa2zM76d1TLNuhpwuPYwGrri2x0iIiIiIiIiolSQ9BlcIrhl
kJ+NBgPS09KGZjgccMjzvvjiC7z0L/+iTDp37hzWr1mjs5YuNBy2ob1/aIoxIwfmormYP8uM9JC9
aMax2rNAWQ0WW0a0OzGWrP0mIqJUYZD//RZZ1tpzvNdDRERERMkp+TO4XC4luKU9RJArKz0dGSYT
TEYjVqxYgeXLl+PBBx/EjBkzgq4rY7IVNTU1qFm+FNbSPNw8b0N9wxU4o9VZm019NldgWc0yVJij
tWIiIqJUchTPy/+mGwzPy68CzQs0n4iIiIjGoqTP4HKKDC75l9xjH32Ebrsdt5WVYXJh4VADdyaX
1jYsaZnIn1aBu7OAIx+cxMnJ1VgwqQ+XPj6B0+098vogUrxQUL4Id07LRvOxs7gmljtbC5EQJQJl
yypylPaffdaCRb7rF0MUbV0wW0WQS82icpjlPtsv44ZD/lByilBW4sKFs+3oUd5Pxfy752KikqDm
bl8wGcZunfk3L+DEe43o7HcpfTSXLsAdlnykuZdzFZUhvbMJXf0mjMvtR49fvxl1IyKi2Bhe1tUS
bJTq5YUrsWlE6wnUJ4AJYERERETJJyUyuMQQxYuXLuEbNTVoOn8eXVev+mVyiV96XeEGuNzSJlpQ
mOVA92VRLOsGuvtzUbaoCjU1Vbi9EOg83YBmJ2BZXIbxcovxZTVKBpgaJFLbT7//617rPH++VXdb
vQNZKK9cjpp7pyPjRhtON7swzVqF5ZXi/UU0XfRu3y+3LxPtq26H2XERJ092yFPt+MR2Gt25Zahc
XoOq+WZcP2vDBxeGctBudNtRZBX7sAxLKvX6TUREFBtaMMo/KCWCWOKGMRvlVyNZT2REcIuIiIiI
klPSZnC9efAg2q5cUV7v/vWvlefWjg585d578W5DA7KyspAtPzRpIsDljHSwYR6yM+QnJS5mxuw7
hwJAk6aZkdHeBfs1ZZaOofYOj6l959qABRl+rcdNmY2JmcqakZdxHg5zCablpQ++7+ru8tpQzqRZ
g+1LC7Pw7uXL6JKbXO7NQOG8EuSKbK5Jt6Fk3Ntoape3Oc29neIKFOdGeBiIiIiSVCRZXaIZg1xE
REREySlpA1wiU+tvHn3Ub7pT/u3UOm8eBpxO5aEVnk+Tnx0RB7jsuCkKz7sDQjdbP0ZD02X09Dug
JoP5B6o8ae3vinCrigiSzfKGonCyLOQOxsHSkJ+bAddNh/6CRERECUfU2NKGH25HvVcWl+e88LDg
PBEREdHYkLQBrkKzGS/84hfKa23o4X978EFMnTIFR0+cQHlpKXJycpTpIsiVZjRGnsHV1YzLvVko
KDED9jM4caodmDofd5cWIPfGKaWOVkAe7T3lfPwhsMCvKteIdNl7AWOe/GGK49CL64PJXk50X++H
MV18zAxyERFRMvCvsaXSglsi6FWNgxEGuoiIiIgotSVtDa41DzyAp//qrzB16lQ8/cQT6Ovrw/Si
Iux54w0UT56M8ePGed1dUQxRdIYb4HL2oftCA9450Q5MnoM5eVCL1cOEvMIC5Ga60HXJ7hEyyleG
MvbaPe646NFeKp8V7d2H46YdA/LzgP1TfHq5HzmFFuSZS1CY1Y/2T5txXe7IQMcptPQYkT+5KMBa
dPpNRERERERERJRkkjaDSyOCVqK+xtTJk/GDF1/E6i9/GSXFxXCJIQkeReUN7rbB9LfbUNuuvjZm
5MA83Yr5s8xQBjmaS1Fa0InGD95GrXzYxo3P8IgOmlFWYsa7Zz/A2/LyWUVW3DdvqP3kASducbdM
72iLyn73Xz6Buov9cIm+TL4Nd87OVqbPtc5B73uNqH/7rHoXxTIr7piWFmAtev1O3ULzhw4dincX
iIgoCUXj7oxERERENLoMUpL/xrb73/8d6772NeUXTxHUEjujPLvfi+GL4jnNZMLrb76ptI01x5NP
Ajab+sZqhemll0awtmYcqz0LlNVgsSUavUtOIlhVVVUV724QEY1Yd3c38vPz492NBOJbZ8uzDpde
DS7fOl3eIglOeRaY91yEAS4iIiKixJf0GVy9vb3Ks/jlU2RUiWCWGJIocreUDCujUcnkMni0JSIi
okQlanBJ2BjxPH2RBKb0mjK4RURERJQckjbAdfPmTdjtduWhMbjrbYlfRLVfSJWgl9EIg/wQbTs6
OpCXl4fs7OzYODuAIAAAIABJREFUdXbcuKHXWibXsFmwuMYywnUQERFROBjcIiIiIkoOSR3gEsGq
LKMRm//hH8JapmD8eGUZk8kU0wCXobwcEus/ERERERERERGNiqQNcN1yyy3KY/78+fHuSsSk1lYY
iovj3Q0iIiIiIiIiopRgDN2Eok1qi86dFImIiIiIiIiIiAEuIiIiIiIiIiJKcgxwxYBh5kyv99K5
c3HqCRERERERERFR6mGAKxY876Io9PTEpx9ERERERERERCkooYvMd3d3x7sLUWG8fh2e92zsu3IF
Aymyb0RERERERERE8ZbQAa78/Px4dyEqXLm5cHm8z2hpQU6K7BsREdFIGAwGSJI0+DzWRet4GLbI
y2+WBp9pbODnTkREYxmHKMaAwXeIIiWAK9i7YSE27L2ivm09iG1rq7Fwocc0IiJKIkfxvMGgBIYM
hufld/HYdqy3S0RERESahM7gShWG2bO93ktnzsSpJ6TPjoMv/S3aVv8Wx18pjndniIjGjOhmby3B
RqleXmklNkWldxoRvNJb53bUSxvlrUbPaGdvifeacKZ7rktvG3rtQ/VJbx3hrieS/ntOCzYv0Hoi
6dNI9ivSfoZqz+wtIiIayxjgigMDi8wnmGY0HAQsaxjcIiKKJS2IE5+hiVrgKrxA1fb6eqBSbv+n
f4o//Y//wH94zRXBNQkbR9ijaB0PLbjhG7zRex9ouvZaj2+b4QRxgm031DbD7b/nfK0PodoH6/No
7JfvdsNZT6Bjr7cfREREYwmHKMaJdO1avLsw9vSdwWsb7sc9Cxeieu0WvNEsJn6CHQvXYU8/8Mt1
C7Fw4QZwhCIREQ1xB68GI2DfxD/K76UoZ2+FIrK6Yi2cwEs4wZTRDLgEWrfv9Ej6ECorazjrDLae
SDB4RUREFBgDXHEiffppvLswxthxcMs6vGHZht8fP46DP3sSK/PE9Ll46vhurJFfrdl9HMeP78Tq
iXHuKhHRmOVRR+trX8PXBmtqrcf6wdd6dba05fSGEurV5vIcdrgJlX7zIqnlFWj94fQ3/Lpd0crq
EqIxhE2swzNYo733fQx3vb6PUP3XaxdN0VpvoKCh7/HSss4C7ReHIRIREflLqSGKtjNn8IXdrjuv
orQUU265JcY9GiKVl8PQ2Bi37Y95dhv277di7T4rlLhWZgHyCuLdKSIi8uZZR0tkSm3EEuV1Cf5C
nl4yOKSwGgfl15UGDL72nD4U5PIchui5zEaP7XgOUQzcPnC2VuDaX9qwRrifA/U39DaiJ1rBLd9h
cqMZAAq0bb3lRrp/8QgcRTr0koiIiPSlVIDryrVrWGa1YsDhwIDLhT6nE05JwokTJ/DhuXPKXz+L
CuIT1TDk5Xm9l+T+QO4rxUifHXZYYGF2FhHRGDIUfKqMKJloU4TthyMW2/AWrSBJvAItqRjkGe4w
x1Q7DkRERNGQEgEuLXPrdHMzHJIEh8MBl/w84HRi+pQp6OnpwYNLl2Lf0aNKkKt4YgJEOVhoPsYy
5EcnOkWCX16otkRElBr8M7LCu8Ni9O+QGJ9tDEn2oEiwuzmm4n5Fc/no3KWUiIgo8aVEgEvL3Lr7
9tv9Mrda2trQ2t6Ol/7lX5S2TZ99hvVr1visoQsNh21o7x+aYszIgbloLubPMiN9NDodYCjl6GnG
sdqzQFkNFltivOlEMLEC1fO/izf2P4nqh4phP1OP+uZ4d4qIiPwNZV0VDWY4iWynv8ZfD74Wz0MB
oiV+WVqb/IYi+s+r9ni/aXB9Q+21UJhPcOw/1sj9atYZ1qi37uD7572N4MGuaAQpfGtiaUMLfWs/
+bbXuzOhXvtQ243WemLdf991jGT9ekX69doHmu65TSIiIvJmkJL4Tzpa5tapzz5D2YwZfplbn507
h0e+8hX88sABzJg6FdPlx/vvv48/XbbMZ01qgKvLbMWyCjPg7EN3WyM+bmyHo/AO3FsxEWkj7Kvj
ySflDtuGJlitML300gjXGonUCnAdOnQIVVVVkS3U+ns8u24L9tvzUPnEkyiv34LGB/Zh5+o25U6K
2H0cT1WMTn+JiALp7u5Gfn5+vLuRBDyzsWJ7B0OiZMXsLSIiGkuSOoMrksyt5uZmPPbNb8Iptwkp
LRP50ypwdxZw5IOTODm5GgsmydNvXsCJ9xrR2e8SKV4wly7AHZZ8Nfh1sxUNHzaivccBcVhzCstg
XeDAh+6gkvWuuyB5BrjUXilBJ4e5ELBfxg15UVNOEcpKXLhwth09yvupmH/3XEzUImw+2xk3dT4W
zRUBOHVdrsIioEss64Ixqwi3V85Tlm0+dhbXxPJnayG6lDFZBPPGoeNjG06198AhdsmUg4IyKxZM
y4zOB5Roiu/Htt/LD+392tXuFxPx1PHjceoUERGFppclxSAXUSgMbhER0ViS1AEuyemES34omVsi
uCU/3+zvV2puKZlb8jQtc+vw0aPINBrhCCfA5ZY20YLCrHZcvtwFTDLhE9tpdOeWo/LeEmR0NqD+
Ixs+MFXBOu2GPO8ULmfMwN1Vs5DjuoKzpztxA4EDRVJr6+Dr3oEs3F65HBNdZ/HOkfM43VyIOdYq
FBmb8G79eTRdnIuJJaLlTZw5IW/HVIbK5RZ3H07iZIE7ACe7cdMkr6sKE43tOHHkFE43luC+uXmw
LC5Dh28GV8eHONXmwuS7qyA3gf3CaZy9fkOekaIBLiIiSlJiWJ+EjfHuBhERERElLGO8OzASDpcL
RoMBaeKRloYskwnZGRn44osvlMytzrY2HDpyBGlGeTfltunyswiChS9PXp/85JIfXS243JuBwtIS
5KYB6ZNuQ8k4F7rb20RkCJ1i3qxZyEsXCWATMXvBbJiDrNkg900zbspsTMyUV5o9CXny9jLMJZgm
rygtV33f292lNrQ34/KNLBTNtXj0wSH3oct/XenFMOfIXQ+2v/0Oedcc8vpvoM+ZjrxpFbhzdrBe
ExERERERERElnqTO4BLBKhHgMroDWBBBLnn6n/7JnyiZXNm5uYOZWyLDS7R1RBTgssvrkZ9yxWsR
5cpC7mD8Jw35uRlw3ZTXJzLI5Hl50YoNuQJMV7bTi4vv1uKix+SM3GFuZ9ptmNP1IRob30PdaTHq
0ozSBXfAkj/SimNERERERERERLGT3AEup1MpnikyuOAT5BK8MrfcAa6BSAJcXc243JuFghIz4BBD
CntxXSRLKYEsJ7qv98OYLg6hUZlnH5ynGUqQM0yeDN8qCC7bx4hsOKBYXw6mL70Hs/0W645gPZps
FFcsQTFEXf0raLR9hLNnzsOSClXoiYiIiIiIiGjMSOoAl6inJUI+gxlcPkEuo0fmliiyKQJedrs9
9Io97qKIyXdgTp6YWILCrDa0fdoMi1XUvzqFlh4j8ucUAeZ897xPYb9T1OC6hNOnulF8ZzHy5I60
d7XCMWXSyMeDmkUf3sXFE2cwyTobZmMfrlw8hc/tFljnhVo4Xxlu2WW/Aifcd4Vs+RDH+opQYZmE
bFM2TEoHk3rUakDirotERKMp4ju7EhERERFR1CR1gEsbouiVweUR5DJ5ZG794fBhtHz2GQry8tDU
1ITS0lK/9fW321Dbrr42ZuTAPN2K+bPMajAIeZhrnYPe9xpR//ZZ9S6KZVbcMS1taJ6tEe8e+hza
XRTL5OmlZZPReeoUPjzbjDt9N3jpCpA5NYI9Ftu5DY4PG3Hi0HllJKMxazyKynIQOoPLjLISM949
+wHelvcxq8iK+4rl5VpO4sjn6phI07jJuK2iJIL+JBdefBLRaGEQnYiIiIgovpI6wKXV01KGKYoX
PkEuz8yt2269Fd/62teU9tnZ2T5rMqNiWQ0qQm0wexruXDYt8Lz7dOZNqcB98sOVb4Nrt/csqd2J
xd+q8etH4PdiO8WoWFKs0wELFtdYvKcsroHnlGyLFdVeTcxYfN8s/f0hIiIiIiIiIkoSST0ebUAr
Mi8/tFpcYlii9qxlbj3/0kuYkJ2N3t5eFBcXw2zmnQKJiIgSgfj32/M5Gbdt2GLweg7VLtGE238K
oW4LHJWPwdUS744kMXEMt2yBqy7eHfHVAtdjj8H5ap1fTd2Rq4NTPm+cdcM4cVpehfOxLUq/KIoS
5TyU++F87FX/+4/F/bumTumX7s+C6POrkXVMevUxeX+26NxnbQQ/GzRmJW0G19WrVwfraRm1X0xF
oEuS4BJBLvlZvBeZW1+vqlKCWv6ZW7FjtFr9fmil998HvvWtuPSHiIiIRodvoEja7H8ZINp4Tg8n
uKS3nrHOJV+EYvPm4f/FVlwovtwE4+N7YFwa6bYr4dqnM313HYybI1xZQOIC72lg/etIezRRy0iI
4M/DcDWugrF+BJ+FRhzTzRG0d3+GhsbGCINP5TC+Ln/uYR/WRvkxA+GGgcVFu7PpcZjCPBcMM4b5
+TbK+741ggMmjtfTOieunlUvyJ/n05BKE/n8C8cwztFIz8Ogm6+TrwOX6pxrar+kGv3j6zqwTz72
L8D3/vZiukH+Tgj/3A1O+S5rWo+0PY+Gd363NMvn3S64Xq3y67fU3ARp18NwWuqRFuTUl17dAqlq
s7IPBkupfK6tUD8X5fxsUn82Pz+g/Ewbw/nZEMHe76s/C+px0T7zIMuUR7DPlDSSNsDV3d0Nk9OJ
LT/9adB2ouaWCGyJzC0iIiJKHAZ3KQHtORm3rQWqPANWoQJXvsEt32Ui3bbvNL11Bpvu2//YUgM4
kWxZXNilWXYPXaSLJ6+LVveFDcK9eKmBQfdCLPgFkuiHqT7MK0zfoMKqF2CSL559993wgu9F4QwY
ylcBSR1ciMCMUnl/MYwLzhoY6/eEv5z4PA6sCBggUIOXnsEQuaEo32sJ/3MwPCpfoMvrcTw22hfR
pUr3wrZ0s3zehhm5Uc5b8SJ0wCKlRHoeiuDKw7tCfI+t8vme0pTDUKX3AdZB2ieCsD4HXd6W1LRe
7tvDcFRqq1gPY00tXLU1wzjXWoAmeV8fj2C5z5sCBN1bINU2qt/RIc4Vw6PrID1WCefj9R4BPPk7
9+WmwcCzdKhJXtfW8AN5jU0+EwIHscXPuLSCwa1UlLQBrhkzZuA7a9fGuxsjIrW2xrsLREREcaMF
lmId3IrmtvWCWsFEK5AUTuAsUPBKLxgXv+ywpUirr49oCWU4y4HHQ16ke16wqRczkV6gl8C4p17n
glQE5V4OcFEagG9QQRlitE8JaJnGStAgiRhKy+UL63V+n730dCUceu39ApMq47r1kB5uUgIfI7mQ
DpQtONgv+VwaHClSvkre1j5IIjA7ggwVJQNtl7wPr9dHLVMopQU51uJYuuB/PgVVdwBSeY3fsXft
rpW/20SN5nolSK5QAmzis/LevvoZBojQK0F2+aRtOSSfK6sCBPn1uQ7I5/NmnZNCW9eecE6YEhhq
yr2CgtKru4GtewYzsKRaeTtbwzz5SiyIONhLKSlpA1ypwNDWFu8uEBERkY9oZHUFEq1Akha4Crft
2OLOtvFg3Pw6XCJboDnCoVY6mRmGVavk942QHq7UqRnjzjALug2RpbAvYJaDelFaGp3hfglKueCX
L16lRv2Lb2flLv0FgwZswssGVIJREfTVb9lIApIljyKtPry+eZ1PPvtp3FwvP+QL/pYSGDxPLeX8
bILB81xRhsNtRtoILvSVgHBpBBmKSWp0zsMQ3N8pCHEuKcMQH6+HwbM9tsify1Z5uRJleLZrqfjc
6wbn+wbDRBah6VGddW95DFinblw6JB8AkSUVRte9Aq37PIKq7mCZWJfy3egZcNX64rG/XoG3VXXA
CrG+p+EU73epyxpeeAFo9PieVY65BS7l5yhKw6EpJTHAFUPSlCkwXLoU724QERGNKtf778P1n/8J
0/e+F+GSR/G8oRKbvKZtR720EUv85ovp1TgYtL3eMp7z9EUjoyzQ0MFw6nNFY5vBhi8masArWLZB
xIEFPyUwPr4Kjqe/D1dVBHWXlACF9xWiuMgbSU0s6dXvD9XcUerGAEafi2W97KFUI5U+DtMe/+FX
esdjsFZR0GFUEWQDxrx4eLC+uTMCQ9YDK4G0uxLOELWSXLufVoIQUsQ/M3Vw1ckLHBhOtmPyiv55
OEQJCOEFpPkE3JUhhUGPrxieKPet6VVIeyxq+xlyn3avQJo7c8q4eYV83oiMwvIRZNmpQwqlxofh
0GJ5Ili14oA6pFrL8vLg/V0sjsf33cEyNePKry9KjbxSr/31Crxpw7d9g4Ziuuf2xWdSeQCGeo8A
tc4fIAaDa6vkY4ZGuDwCx0rfZwwtY1gxnGNGiY4BrhgyTJ0K+AS4XDabUoCeiIgo2SmBrZdfBk6c
AKqqhrGGJdgoyReBSkBqKIBVKf/GOxTM8pz+1/hreant4sJR/kUf7me1vQhkacEt33WFDnJFm+dQ
wUDDFKOV+RVo/dq0+NXbCk4tNOxTlFvLUInGxfbSFfLFk3eNFlEQGaUr/C9WdWvqyBeS60vdGQwe
F4QB6WQZ1Ik7hW0dCo6JANpWceG2xTsLJ2Z06oz5XtT6HYvQxdk9a1gZBgOXQ8dD+ax9y+XElV69
Nc/PuFypySTt0x+iqDYJI6un7lW4Zjw67CF/IpML8rF1Pgb9bYn6TPuGn90ihmBK4vMP+fPmXbQd
Hpk9QxmM3sfUf7reeeTOdBs8lmGcnzrZcYb164Fdu9R9CVLkP+rnobiDYPO6weC1+lnI23/15YhW
I4n25fI5V1MlH4PP1Yniu2Kzdxt1nxshiSbDOafqdqu1Cut9AksHVoRfp81jXVLN1ggzB+XP7mn5
vH5hlfy7Qy1clbsGP3tJDIMsbZb3celQ38pLvc95rz9A1LkDYNq5L86dWq9zTHwvOUSAWP5dQRJZ
ipHtISUJBriIiIhoRLwCW26Gu+6K8laGgl+VEY8L2TSMZUYmUFH3YKJVmysRg1eJQWTRhBkp08nc
0i7Mh5dN5nkRvk83OCaJgtEiIBTpqoctwLA5MVRIy+DRveOemhUhhcxi2ydfsIZ5t74oClavKvBn
F6jemkb+7Lcc0sno0aMTcNG2u7QKEENlA9w1LxxKXa/vB9iuz3BFqaUFhpJItlMurz+Sk7tJKRQu
eQSg1DvovQA87X0Mhu6sp2ZTuuTzSjrU4n0DhTr1rnlq/bzhnp9iWyGjz6NDDBlsfgzOV8WQv6Gh
f5F9I9fB1fQ4jDUv6w6BHhzi6HGTCyVw87TWIJy7g6pBMVFLy1iDEdeIU869A0PZZWHxHF4rAv+l
jyNtzwwlI0yqE5l1Iov10FDfPhe17HxT4ULxr8ml1WY0bI6s9iMlj4QOcIk7JaaSTIfD74Df6OiA
M8X2k4iIxga9wJbGMHNmlLfmn421KfRCbuENTYyWUHdRHK27FgbLDIt0W/G4s2XC07IdhpVNthTG
9eVwWfaoy/vV4VGHqYkbmsWMFkzwCVS5BjMbRHaFGjzwCgxpGV275OPxaKhMofjUyvELZGlDzoad
CSiOzy44t1iCZgSpPIYj+m23BMat6+XjF+5Q2cC1u5Qsrq3i1T5Ir5bCuUvNsvOvfzSan0GjvE2P
DCDt3Hj6ae+MNncgSjpQJx+epe5sSvl97SFIj3rcDOLAPqW/SsZmJOenb7A1rLsajg7l7pmDdfQi
D2K6thyAYfNmv6yvwSHc5WoGkufx1oJdoi4XNnt+1oHPH4Oo57Vis1LXyymG7Gr1sZqbYChdF1Gf
pe/Lfd6zWa1ppn3HBWsv9kXc8dEjoG8onQE10LwHrldfhVF8nq82qd+JJUGybf1ow0hFDa99/j8P
vlmYIbL8KPkkdIArPz8/3l2IKofJ/3Bnt7UhLcX2k4iIUluwwJZmeMPvPetlbcLBo9pfWEUGlghS
1WO7VwbX/5b/gzJMUf8ywjPrSwuHhQ52JUNwx7OmV7CAmpjnW5CeGV5DpKZG94VVKOrFtBj65KoM
MrQlyDA1ceGb5tN2KPAxlF0W609HavIe32TUMhvcAQZxAeh1wVryKIzra+WLbfnisW7z4IWxvxCB
lX1PwxEg0ypQce/YZbe5h8bB+/M0rPDfWalODdqE3beSKhjKd4U5rCxI7a7BIM4q9RjXD794/vCt
8s5q0/bN57gNBrSatCFn8mOVGPJZC6nlUXfhfLXuFFat8Dpnwjo/h5kNpxi181AEHtd5Z6iFIn+m
WLFZN+vLv2B8nV+xeuNmvWGF/hldUot8rA9pgVf5s3m1Rf6M1AbiOxErAvfZ/06iYv3un/NHt8Lw
2GNwzQgWvJW3ja0wDd5pUf1ulVaJgljqEFZDlfvcsci/b7iz/ML7rhZZo01KHbA0yD8fPt/Hw7ub
LiWbhA5wpRoxXEOy2eLdDSIiomEJJ7ClGHZtSRGQkrDRc5LP+yW+8z3a6bXXXWcIoxnc0gJSI83i
ClZjK9z2AfuYBAG+4dAKPg/9tb5Frb8T5GJOa+d67GUY1q9S7rg2mD3hQ8leQFUMgzAjtHQdjOXy
BaHnBb5HNoOSMQH9oI5SuwjyhXBzS5AAV2DKuvUyJ0IV9458U8OjZeuFrKm1Rc0iiuiueupwyJFy
7Rb1isphEMMDH7VA2lIHJFEminGF/PO0b2iYolZTavB8G8H5Ga7ROQ/VIYamehEgU4dlhp09VxJm
fTYlI07uX7267sGMqDDPQUPJUhgGg2Uz5O9BMRRQHRYq6oYZgpTf0i0yP7QDMNTI+727DkbPY1pq
8eiXPL2pEo5K9/qUu9JCDTQ2rVICodCG8M6Qv2cOiADn53K/5HP9df2DI+nU+UNdE6SwMr4o1TDA
FWeBbktLRESUKMIObLkZZs0a5R4lvkB3LPR871n0PVyxyL6Ka3BLN5ti1QgvUrQhK/XexbNb5Iu6
xlUhC9i7tqjLiqE8rsZdAbM6BMP6ADMC1AryXpe7KHvw7kSRu+6U53Au9/EXF7GjOaxQyUaJaInI
gkL+WSZQglDhERklTUpWStDPQhw3Jatv+PW0hk3ULJIv+I0v1Mj7KgI9S2EslS/y65YmT3aKFsBS
hilWKXfz885qHP3zM/rnofiuUYfrCWJYsvPlVyHVjKCTfut/GK7SF2DSMj7dwR3D+schtcCdDReJ
EhhKm9RlPz+gZFKNJBNQCX7X+hSH9yGy8IzuIJpyV1otaKZ81vJ3spbdJTICm74P16ulSv0tv33T
zg1l2ObjcFUeGJylDbV0bXlMyf4arBPnOUQxosA0JQsGuOKtpyfePSAiItIVaWBLY7jjjlHqUfKI
JMOKQwY96N7BbwS3OVMCS+4hKz4XR0oGjNIm0DC7ocCYWtAaQS+I1AyuAJZu9r4rWcAMkXCHKHrf
xW5EF/ueBfU9aiUZVqhZWoN1kzz76M6egUUdUpRoAtXgCodyBztRHDxYoMCvhlosuYfLiiDPDLkf
7qkGZXhYpfw+WYZgiWyfcmBXrVpUvFEEiHUyIEOcn2oWYYwDjAFIW+STbOuewZ9Hw6OPw1DbHKW1
q3X6DPJ3mcnjroDq3UrVbYr3zmEMwTM8ukJetk7+/pLPqxUR3j3Rl/iu89i++l2xQrep+p05dNdO
8Z0s6okNfZ+5M8J27VP+bfD7nhPnxutVkEpKlOyzIS2QauX92iofKDHk0vePG9CGKzK4lYpifzdi
8iLZ7fHuAhERkb62toiDWwIzuGg4BoMmnpSL20gDOOrQQyWL5+VSeXmdejBKBswqZYiP4YDcbkud
bwP5YlJcrCZosEAMoVMyEvYpwYHhrWOL/37PKPWpmwT1rnV13stpw4FCZb/Fg8gO8fvMxHkUTqaG
OC+wVScjyz2c1d3G8XCtEmgYybmh3PmuUjyeVu8OF1aMRgQ2n1aCAP7bVgvYQz7vna8mXtBRj6Gq
Rv5MGuF6WgSby+X3nndUDHF+ul9Lu74Pl9fuysfo+/EoMC+fIOt8v2uW6p93jU3D6N/Soe8ycWwq
1XpSJvf3o3b3UOnpLYED7YPEefSYx3ETGYAvw9W0fgQ3YoickkG34oD756BS3b7Pz556jgS5u6cS
3PIhsnNRM4xsNkoFzOCKpXHj/CYZOESRiIgSlPGrX1WeXc89F/Yy0pQpMBQXj1aXKIVFPlwokM/V
4SiBsq2UoWVNauFl8X7z68BjD8PxmGf7oaLvXoY7RDEcLS1qJoJvMXo9WtFuERQIp0Z+ILpDQocu
JtNeWKVmzOgM+TOsX5dafykX58WBFUjbrHdVLIamvQ7XY+I4rPe6+1tgdWqW3lb5O7RyCww+gVpt
mJaSSVIazrF0ZxTWBBkSqWS0AM6H5fN5l39x8YSjFaVX4qWP+/c12PlZstR9s4NGuB6uDCOoM9p0
htDpUYL2Eay2pXmohpU21FlkumoZoV7D9EIFcbW7KvqcGyJoXSsChrvgerUq6kNugxaHX7oZaeub
1Bpij8vPlZUew37dhfTLy+XPeAsQ5h87pEO1wON71ABolPaBkkfSB7g6G3ajr7s5rLaZ+RYUVER2
29NoErdM5w8ZERElk0iDXIbZs0ezO0RQarwEHbUY+M5zvkN6VGrmiyRfSLnqHg2elTPcIYp6fINl
7nWHR97H19fDeahq+AEM7cJyl+cfW30ufMVwo9dLh2og6bWJps+b1GymuJCPpW5wSxsOWq4MdTWF
3G/v4aPiXEmrr1Mu3B06x27wroCDtKFonu2Ghqf5DrX1owRQLEogQw38BP68pJYWGErcM0QgJebc
wxQbG/2LxYdxfipBcYtvfTv5uMvnrPTwCLK44noe+hCfpxLLqlMCsENDnT2DVSHOi8897rjpc7fN
wZtv7BHHf51y7jqadArvu+neRTHghlvU2mqBapC5A3YioKXdVdFUL/fhVbWwvHbOi89b6Wel/MUf
8rtHLfKf5vFVqluTD+IGBcHWQ8kq6QNcvVc/w1TrQsDpDN4wLQ0Xbcdj06kISWfO8IKAiIhSgrhj
MFHU+RRpF9lD4dMCDmptJpNeiRklk6RWuaFYUMPM4NKGDw3xv9DU6+9gW58WQ3dNG1mUSQkQhIqp
edZA0m9DhnnUAAAgAElEQVSgFgP3mOJZRDpi7uFb0a6NM3SnNZXfOeQ11MnzMwg3sDW4IiVoY3jc
M9tEC7q2qFlgQQdweAZgPYNleyLImAsc5PVk+Hw3HA97B4fCG9bl/5kHnx64P6IAeKDhrmGdn771
7YSWodpkwfsVxEjPQ8/i+GI9L/gMvxz8PgsWIPK0VAl0ed8xMNB3iCcxBLTUv60WXHrBsz6Vmqmo
ZLQqdzn0r/EX/C6K8NtvZf+2ep5UWmAO3plog0TdLLF973NeDQRX+gVtvX+uVwFbDsCw2XudfjX5
4M6c1DtclPSSPsAluVyAYwDSwEDQdob0dLVtpLoacNjWBbN1GSrg8do8zA7rkHp6WOCOiIgSkrjb
r/PFF8P+d0pkKxNFnXYRqxVnDzmExuMiKqwAhbiw2xO6H6EyuCz6GzGuWw9pX5PfMLXAfREX41qR
e/9lwrrwT1KjNfRx8JgFOIe8g5CRBrX8t6UfeIg00BJG+/LS4V9HDAaHtAyxEd6wIFLyZyGJY75q
RcINd434PNSGEWq0wLA433ZbvAMs7uOuZk/pDM3UuL9PPIM4SrZTfbgnpn9gcXBdusElpePKOWeo
U28u4X1u+QciDVv3eAdFBwPi6ncwXtCpSxYo+OoZdNPpmghyGdZ5ZB1C+7nWhu/KPwuWR8P83BKz
hiCNnEGK672gR67l7Wcx7Y47wgpwXfjgA5Qs36YztwsNh21o7/eZPL4MNbPsUQtwuWw2uJ580m+6
8fnnYayqinyFY9ihQ4dQFcExi7Q9EVEkRvId093djfz8/Cj3KDqka9fgWLsWBlFsPkymMLIGiIiI
1GALoj/kVcsi8r0rKxGlvKTP4HK5nJCc6iMoo1FpG0zGZCuW6USulmnjhruG2Um3QHeVks6dAxh8
ISKiBOPcti2i4Bas1oi3YTAYIP7Wpj2nmmjtn2GLvPxmafA5USVLP4ko3urgEplE5et5tzsiipoU
CHC5lOCWy6lXOm6IUQlwjXSIoo+brWj4sBHtPWLbJoybOh+L5k5EGgbQ8bENp9p74JA3aTTloKDM
igXTxke+fSIiojhw/tM/idS0iJYJ9IecseEonjdUYpPyejvqpY1YEodeiMCSwOASESW28OqEDUvI
unFElKpSIMAlglsDcDpCDVE0hczgisxNnDlxCpdNZahcbkFGZwPqPzqJkwXVWIBTONXmwuS7qzA3
D7BfOI2z12/Iy2TqrknUN6HRdyjCCzUiorHK9f77kF5+OXTDP/kTZYi983/+TxiuX4fhjjsi2k5q
ZW8twUZJvlgbDHLFJ3tLazfcbfhO81xvONOZvUVERETxkvQBLqfI3nKIR+AMrvTsHFw4/anS9lqr
DeOL9YdQ9LfbUNuuvRuPsprFsARaqb0Zl29koehuC3JFFclJt6Fk3Ntoae8CzA644EBv9w305eQj
b1oF7gy2Ez09oXaTRoj1t4iIwiO1tsL5zDMhixZLs2Yh/fvq3ZMMv/kNnM89F3EGlxb0Sf7glr5o
7Z8WLBqtoJFeQMw3SBUoeOX5frT7SURERBRM0ge4XEr9LUfAIYqmjEycP/Op/ErCrK+8iDNvbggY
4ApUg0uXQwSxenHx3Vpc9FxHrvy/abdhTteHaGx8D3WnAWOGGaUL7oAlPw1Sbq7yV24iIqJE5Ni0
CYYQf3gR/5aZXnpp8L1h/HiYXnhhtLuWUhIpay2SrC8Gr4iIiChRJdodWSPmFEMUHQNBH/arVzFl
ejFu9Pcr7aNDHLocTF9ag5qaoYcaIMtGccUSVK+owfKld6DI1I2zZ84rSxnmzPFflc0WpT4REREN
n0NkYYUxbN60a5cS1Io+UcfKoAR/hh7Py1P15mvTgy2jN2891svPzx9V52nP+suIaUPvh9oG6tfQ
8MRQohXcEoGpQBlYwaaHCmgFytLyXQ8DXkRERJQokj/A5R6e6AzwUOY51Tb23l6lfVSYS1CYdQMX
T5xBlyj/5ezDlZYTsH3cBbR8iGOfduCmPD3NlA2TcpST/lATEVEKc731FiAeIRi/9z0YystHqRdq
HavtymtRqF283oTKwUCTCCD5TteI6ZISOJL8Crx7zvsLBL5hl942DqLa3adNldo8z234LhM7WoBJ
LwNLb7pn+0i34SvQdomIiIjiJemHKDrdd1AUheb1uJxpcDjUIYzX+/qU9tGRh7nW2+D4sBEnDp2H
uD+jMWs8ispygEz50XISRz5X79poGjcZt1UEv/+tqHliKC6OUt+IiIjCJ2524nzxxZB1t5Si8l/9
aiy6pGOoiHulIdB0kT/leQdD/Xli2uAdDysrPZY5ioNB+xC/uyPqGUmAKZwgFzO0iIiIKJkkf4DL
JWpwOZVaXHrEPKdTbfNEcyF+pDtE0YyKZTX6GzBXYGiW52tZdjEqlugFpWZh8X0RFtpta2OAi4iI
Yk66dg2OjRtD193yKCofH56ZUtU46DUcUASyJGx0txEBMO8gl++8amXOdnGL+srwhxUmGs8AVKSB
rlDBq0DzhxP0SqR6Y0RERJS6kj7A1XuzF5I7yKVHzOvtVdt0dt5Q2seTuMOUxJpbRESUIJzbtsHQ
1ha0jW9R+djY5M7UGsqaWuKXwSXatOCv8b/l//QcHcrUCotvlphvMG2TT/BMb5lA7bxFI+gTaAii
9lpro9fet8aW7/Ke0z2X990mM7yIiIgoURikJP2T2o0bN9DT04P3/vVbuG/ZvXA69IcoppnScejg
EVRV34v/OnwEU+78S8y13o+cnJwY91jl/Od/hvSLX/hNN/zVXyHtW9+KQ4+S06FDh1BVVRXvbhAR
jVh3dzfy8/Pjsm3n669DevHFkO3S9uwZxbpbvjwztRJnOCAND7O3iIiIKFaSNoNLZGV1dHSgyzkF
+/5zf8j2os1A9kzMMM9Slo1XgIuIiCgRuN5/P6zg1ugWlfflmXEVOguKEh+DW0RERBQrSRvguuWW
W5TH/Pkvx7srUSGFGB5CREQULaLulvOZZxKwqLxWL4uIiIiIKDLGeHdgzBk3Tn86A1xERBQjjg0b
wioqb4prUXkiIiIiovAxwBVjhpkz490FIiIaw5w/+QkMjY1B20hTpsShqDwRERER0fAxwJUoeGfF
UXYFezcsxMKF2qMaDz31CmxXYrBl22t4du39uEds9577sXbbXjT3jf52Q/M5JtUP4alXbIjBIRmB
BuyQ+7qjId79IEpOrrfegvSv/xq0jXLHxB/9CIbx42PUKyIiIiKikWOAi8aUys37cPz4cfmxF88W
78W3//4g7KO4vb6GHfj2hnpYN/0a74jtvr0bG/LewCOPvIIzo7jdSAwek73bcI9tA779SqL0jIii
SWpshDOcOyb+j/8Rw6LyRERERETRkdBF5sWt01ON8fp1ZAeYd+3MGWVYCMVCHqwr7wGebUar/G42
+tD8+x34wd+/iZOd/cgoqMSTP/0xHpmdib53tuHePRX47c9Wo1hu27DjHmy3vIbXHrLI72zYsfDn
KP/tz7C62HcbrXhzxy9h2fw2Hpqdp07KLIZ1ww/wlO0b2HPwIWyrbpaXXwfsPo6nKtQmDTsW4ufl
+7Bz9UR1Ql8z9u74AXb85iR6xs3Hn/1gG56tVnqiLvvDn6HgzWfx8/py/H8vFOF/vWXF73fcD3WL
fbBtW46ds3+NVx7y66DPIZmNB9Y8gO2/bMSVtRb0BDgeetvdtO/HqLAFb29/chP6D+7E/pP9KH9g
Mzav6ccb23fgN8r7bfjxD6ox2MMA+9ywYx1+KeavW6g8i+CccpwiOEab9u2E1SbPV/oKFMyvxhOb
NsufUeZwTyaihCeKyjt++MOQdbcM3/xmjIvKExERERFFR0IHuPLz8+PdhaiTysrgDDBvnHzhYUzB
fU5Ifa04uPcgZjz0Y8xWJtjR2lmBTb9+FiIW1bp3A76x7iVUvPMUKiruwUrbO2juW43izDOwNRTA
3tyAKw9ZMLG5GbaiSjygFzu60oCDJyux0prnM8MC6+pybLc1Y1t1yI7inR2P4JXMndh73Iq81r3Y
8I1n8cavX4EWr3qnvhXbtv0ea5XNnEH3P2zH/tb71fn2g3jtN5VY83aI4JZbf7+4+M0Ifjygt90r
eCdE+4bWIuz82UFswzvYtvxv8G37Jvxs50E8K97f/7d446F3sKEixD4/tRtrfukdEIz4GLW+gbXf
7cfat99BtfzefmYv9rbZAQa4KIU5t20LWXcLd92FtP/+32PTISIiIiKiKOMQxRgzFIcXaKDRUb9l
lVpv6t512Dv7x3hl7Wz3nIm455HV0BKtiitXwtrfjGZRkCrPAmt5PRqb5ddn6nGw+kk8gf2ovyLi
ZGfQWFkOi+7W+iGCWZaJ/nPGZRTIC9sRshSXvR5v/qYaG56wqhlZxaux9qGTOOhRPOyeh4b6LXLR
Vq4FXtmvDjO0vyP3888eUQI5Idlt+PnOg6h8wCofjSDHQ3e7YbRffQ+KRQwpsxwVVqBiZZXaPk+8
75eP75Ww93lEx8huR6f8X2vrFeX4581ejUeqdT4kohThfP114NChoG1E9nDa9u0x6pE3g8Hg9TxW
jNX9JiIiIhotCZ3BNdZI584BVmu8u5HStCFtzW+sxSMHG2F/aDa0uEdf8+/x0s49sJ1sRmOnCE5V
YqUyx4Lyyk78ss2O5s6DqLC+gsqCN7HdZkdFz0msvGcD9HN/RCaUGuSp8Imf9PR3Apl5AZbz0GeH
Hfvxt8v3++xH4EWKV65B+f1vwLZmLZp/2YgnNlmDbkcJ+m2RX4ihfU+9hh/fr3Y28PEI0NUI2yvx
P90VRbjPkbafvQY7N7fiB3/zIP5eDFGsfALbNq+FlTEuSkGu99+HFKLuFovK+zqK5w2V2ITtqJc2
Ykm8u0NEREREYWGAK5GEqI1C0WN5aBs2HfwGtu+1YqconmU/iO2PvISMbT/Dz7YVI8++FxtWDQVM
yq0P4KBtP6y2Cqx8BZhYUI3Ol/ZD3PvS+kSA9KiJFaie/115OTtW3+/Zphm2vY1YudaivM7ICBzr
UYNkf4afHnkW9/hFqdr0F8mrxiMPbMFr2/vRiLX42Wz9ZprBOlaeQhwPP5G2DyrSfY60fSYsq5/F
K/JDGaq649v49h4rjg+NeSRKCaLulvOZZxAqPyieReVF9pIkSYPPY0U091skgHmuQi8hzHcTwZYJ
ti5tnl77YNuNRvtw+x/uerR54UwP5/iMZDoRERFFB4coJhL7aN7Pj7wVY/W2bcjbvgE7GvqAvj50
9ltQUV6MvEzgyskGNHu0ziy3wvrLHdhZXg3lMrDYitXNr+CVM5UotwTexgNPrUHzlmfxxhn3Z9vX
CtvOH2Bn3mY8qYwblLdZDTQ0qFsT9aDeeMdjFRPvwUMr38SOHe9AHXDXh9aG1/DK7wMM11N7C+tD
T6DxzTdRvmYlhjUoNsTxGHH7YILucxHKK4Hm5tYw2+toeAM7ba3q8NDMPKW/IshIlGocGzYkfFF5
LbiTWMGtJdgo90caxeytaO13oNGNYrWej2DLaMEi7eEbhPFdR7jtPYNM0WofaJ8j7afnvFDTA60n
WtOJiIgoehjgiocAwxClTz+NcUfGuLxqbP7ZPXjn2Zdgk18/+f8CL31jIRZWr8XPGwCvvKyJs1Ft
6cfK6vnu4X4WWB/KQ5v8WQbLe8iseAqv/Kwatu3fwD1K7a8HsbN/A369c7U78JSHyic2o3jPI1h4
z/14tr4YlV6nRx6qN78GuUf4b/fIyy+8HxteaYNldoiiWsVFKC96Ek/cH07xLR0TQxyPkbYPKtg+
T8TKJ56EfceD8vR78JQSxIrwGBUVof+1DbhffB4LV2Nn3xN47Qlmb1Fqcf7kJywqn6QiqckVq7ig
b8ZUogqnn75tfANrvtOJiIgoeRikxPqz6ZjgePJJwGbzn2G1wvTSS7HvUBI6dOgQqqqq4t2NiJ15
ZTW2Z+zEK49YRnU7rW+sxbPYhlce4k0NiBJdd3d3VO8a7Dp8GK5nngnaRhSVN+3Zk0R1t7S6WMD2
+nqgUn2NwTpZQ/P1pvkvU42Dg+01vtN9a3AF34b3emJXuyvc4XqebcMdohjONgINOQy1nlD9jKT/
gfoZaLueGVThTvfsV7Ahn3rHKtAx52/gRERE0ZW0NbhsNhu6urqGtazZbIY1AYu5S2fOxLsLNMpm
r/kxVv7tt3HP33eif9yT2H1wLaKfO3QG+18pwJrXGNwiGmukxkY4t24NWncrOYvKi2GD9YCh0mOa
b5BpKEBVKR8AMU9bZlNlJbwDT0dx0GsdHlvSlvHafhjb0JkXrwL1IwkKjeR9JMuF289Q/Q+2/kDT
AwWk9F77Br0CDfEkIiKi+EvaANeVK1dw1113YWBgIKLl0tPT8f7774e/QFcDDtu6YLYuQ4U5wk5G
KFStFEoBmbPxyM7f45FR3chsrN27Y1S3QESJRxSVd/zwhyH/LYlnUfnRtUkJLOnzDWQNBcwqDZt0
5ievUEEgz9fRDMxEGnwazrYj7X+gNoGWi3Q6g1tERESJJWkDXGJkZX9/P77zne/A5XIp08SzpBSG
lQZfiza9vQNIS0uD2TwB//iPu3SKunah4bAN7YO3sjMiy1yKijssiN6gEQ9FRYH3S75ASa6/qhMR
USJw/vSnIetuxbuo/MioQamhTCrfgFSkQSq1mPxGd3ZWvLOuoiWcoM5oBGZGMmwwHJH2P1r7GE62
FxERESWGpA1wiQCW0+lUnufOnas8OxwO9C6cCanupJLZ1d1tx7VrN5CVZYLJlIEbN64NLqMnY7IV
yyrMcF5vxUnbKdg+MKHKWoFlNdHtu6GoCIF+JxKF5g0JOHySiIgSl/P114G33greKGWLyvtmYwm+
9bQ2+QSw9Gpn+U73XMZzG9r6fWtwbcLBo/Xu9fhuL3yiyHy45VF979An6N2pMNgyodr7CtQ+2Hr0
6m0NZz16/Q8mGtvVq8s1GvtFREREI5e0AS4RzBLBKvFLoAhmiffi4ZpagL7eXnR39+DmzX6kp2fJ
jwwlwDUw0KssI9oFk5ZbjDmTm1HX3oVrXV1oGByi2IxjtWfhKiwCutrR43DBmFWE2yvnYWKae+Gb
F3DivUZ09rvkoytv19UPY6EaOKP4EUXpiYhGU7xufCHqbkkvvhi8jSgqv317jHo0mrSsq/CmL9Ft
G2w9kS6jMy3g8uGJ5N4/kQ6pCzQvWu2jse5oLRPN7cZiv4iIiGjkkjbApQWqRDaWGIYoglzikV5S
iGvXrqOvz4mMjOzB4JbJlC5PyxgMjIXSr2R5GeWHf7bXjZsm3F5ZhYnGdpw4cgqnG0tw39w8eY4d
n9hOoyurDJX3WpDluICP6k/LU8MnnTun3E2Roi8Z77pIRMkhXkF0pe7Wd76TQkXlA2VWCclUJytV
9oOIiIgoeRjj3YHh0gJc4rm3txfOyjnKsyDqzo+77VYUvfhXGP8ni5CZmYWMjCwlyBVOgGvA/ik+
aetFRkEx9PKuxk2ZjYmZaUC6PD8HcGkZYfYL6OzNQOEsC3Ll2WmZ8kVFpEeYheaJiChMzmefTbGi
8mpGlKT7SKagUKrsBxEREVHySPoMLsPS+XAuqkDf2QvIe+5byrxxc2/F+P9nJa5u+hfkPv4lzPzR
t2A1l2LPo38TNMDV325Dbbt4ZcK4ybdh0Twz0HUh/E6JjDJkIS/EaETDggUBa3DBHkm+FxERjVXO
n/wEsNmCtknuovJEREREROFL2gCXVnPr5h+Oo9vWpAStut+qR+7cWTCv/yp6fvEH5OZOgPTaezjn
rEeTQS3cqi2nRysyPzL9uCliVHnDW1oUmSciIgrGdfgwpH/91+CNUraoPBERERGRv6QdouiZiSVq
b4k6XOnpOchs78P1l/+I7MsOpfaWqMOVnZ2HrCwRcTKEVWR+2MyTkW/qxeXmDgzAieutF9A9Spsi
IqKxSRSVd27dGrzNlClIS4mi8kRERERE4UnqDC4RrMrNzYV9cFhfOiSpE2mnr6LXaFQytgzKPZnV
8ruZmWmjG+DCJMyZMxnvnfoIh2rlgzvOjCz5CLsycsJeg9TaOkp9IyKiZKcUlf/hD4PW3UquovJE
RERERNGRtAGua/Iv+UajEd/97ncjWk4sI5b1ZkbFshr9BcwVGJplweIai9dsy+IaeE7JnFKB++SH
MND1Md61ZcFcnOm1jKGoKGD/DG1toXaBRuwT1P6qAaj4c9TMjXdfoqSjHr89eBmF1Q+iclI0Vshj
RJSInD/9KQyNjUHbJFdReSIiIiKi6EjaAFdeXh7eeuutYS07bdq0KPdmSNcn/wXbRfVujjBmwVxW
gTk+9bgMxcWjtn2Ks/4uNB45iA+cc/Dn8Y4MBemLs+04/ni0CVcH5DfpE1C65EtYWJQ2yh26iXPH
6vBJy1XccMlvjemYULIY1YunImOUt5zYfSEKj0v8mxfi3z0WlSciIiKisSppA1x/8Rd/gatXr0Y8
3NBkMmHChAmj1CvAPPe+EWe8uGw2GK3W6HSIYueTWvyq4Qv19S3x7UrwvnThhK0JvYX34mv3FeLi
4bfwnu0EZj6wECO9xUJwdnReS0fJvasxrygD/S3H8Iej9Tha+A0su3VUN5zgfSEKTdTdcj33XPBG
CVBUXi0LIPdXCnivYCIiIiKiUZG0Aa6MjAxMmsRxRhQF1z9B7e8+BuZ9BTVzc+X3n6H+yAc4r6Y3
YULpEnxpYRH6P9qPvS0T8OUHFrsDQTfx0f69OJdzL75+31Rgbg3+fK4YCfdbHLw+vK50HXsTf+iY
5LENJz6pfQOns8Q2bkHLsTrYWq5iQMk6ysKUO7+EZTNz/VcUtC8DcMnLp+dOQIb834SsdKA3A1kx
OEaLa4Z+ZrNLZqLwg/O4fLkDuDX8n+XoHKNJUekLUSwodbc2bnRXkwzQZsoUmBKgqLwIbGlBLiIi
IiKiWEraAFdKu3Qp3j0YO5xtqP/jabhmLseXROAG13Hi8Hu4mF6BVQ/NRdaleuw7chT1RV/HffNm
orDxI3x8ERDxLHQ1oOVqDqYumhrWppRg0/le3Xm3uGtdmStKMGFvM053QK0T5WzExS/SUXiv2EYH
OnvzcPuXqjHTDFys34cjtnp8YqlBZEmDk2BdZMHvjuzHm5flfe4fD+vy25Ed62N08xLsvUbkFQwF
lOJ2jHT6QpQonM8+G7Q+I4vKExERERExwBU3Unl5wELBUnt7jHszVrXh2O+O4HLhvfjqnQVQKlB1
fYKL9hxYvjwX48WEqYsxa8Ib+LSlQ349E+VTPkJ94zk45dfXPu3AjQklqAhzXN+kygfx55UhGmXP
wpQJp9F8Tt7epEm4+fF5fJEzFV9W4kOTcOeyoQDM1JmFyDp/GVc7I91vJzouygtNmIIJA5dwOWs6
puSqwaWjWIIHvSqwj9Yxuo5PjjTiat5MfHVmvI+Rfl+IEoHzn/4JsNmCtkn7u79jUXkiIiIiGvMY
4IoTQ15e6EY0qq5+fBRfYDzm3F6EwfLqAwNw4Qaa/vArNHm0zXJ/XFPnTUXWH87h45tZuHaxF4W3
zwuc+eQjnOwkyGubN7MQjR814iLy0HnpKnKmLBqsjXX9s2Oo//girvaqwwwRfGChvi4bbM1ZmPv1
SsxEG47vP4o//lcW5sAJoxiu6GF0jtF1nHt7PxpuTMW9q+6E5+DB2B+jwH0hijfX4cOQXn45aBvD
44/DuGxZjHpERERERJS4GOBKQNL77wPf+la8u5HyMqYuQfWEj/HHP9aj8KuVUG8iKP6Xh1mrv4I7
9SJX5gqUTNiLloMfoRdTUDkz/DsPhpWdJHpgKUHBiY/w2Wef4sbVCShZ6g7ddJ3A4fdagNJKrJw3
BePtx/Dbg5fD3v6gS9dwIy0L6UrXi7Bw5RIlyPWBPR2WL3unWkX/GKkBpRPXp+DeVZWY6nPLwtge
o+B9IYonqbUVzq1bg9bdQlUV0v7yL2PVpbBpdbhYaJ6IiIiIYskY7w4QxUvOhCKMn7scSwov48jv
jqHNKU+cNAvFOXacqzuBjn75vfMm2hoP4+1jHe6l1OyhXrsdWVPnIbzqWxFKE8P8gMsfnMPVCVMw
SwsiDQxgQBSFnzoF47Od6Gi5iv7hrH9KAfIGLuHj4x3K8k75fxnpaTAae3Hp48/gWZM+useoCx/t
/x1ODFiw/CsjDCiN+BhFsS9EUaYUld+0CYaensBtZs1C2rPPxrBX4WNwi4iIiIjiIaEzuLq7u+Pd
hVGTkZmJ9ADznBcu4HoK73tiSUNR5Zcwr/Z3OPJ2Hr5SMxcLly/CwJEPcPjfP4VyI76cW2C5fWhI
adotucgyAnOtPoWlPqnFrxq+cL9pwK9+1eAxrC4yU28tBFovoXCmx/C+SfMwb8olnKh7A78Sdy68
JQsB88eC9cV8J5Yt6sWRDw7i35uUHUThvHvx9eX9sP3uCPa/7cLK5aNxjC6h46pLbv8p/vjGp0OT
s6aj+sFKRFrefWTHKLp9IYom509/GrBGo6AUlf/e91hUnoiIiIjIg0Hin1njwvnP/wzpF78ION9U
Xx/D3iSfQ4cOoaqqatTaB3Pxv/4vjmExvn7fqORvpQQeIxprRvIdI/6Yk5+fr7x2vfUWXM89F7S9
8Uc/Sui6W3oZXMzqIiIiIqLRxiGKRJFwnkPjpXSlkDoFwGNENCxSY2PI4BaLyhMRERER6UvoIYpj
mctmg9FqjXc3yFfaTCz/xsx49yKx8RgRRUypu7VxY1IWlfckMrX0pjF7i4iIiIhGGwNcREREcebc
tg2GtraA80VReVOCFpX3pBfIYnCLiIiIiGKBQxTjxDAzRIZLkLtnERFR6jD9n/8jingFnM+i8kRE
REREoTHAFS/jxgWdLZ07F6OOEBFRvLjefx+ZIsAVRNrf/R0M5eUx6hERERERUXJKmSGKvz37Bf7H
H5v8pv/Dl0rxYNktcegRERFRYFJrK5zPPBO07haLyhMRERERhSdlAlw73z2P6SXTUVg4aXDa5csd
ypqS5ZAAACAASURBVPRkDHCJu2lRdB0KMgSIiCjWHJs2wRBsOHoSFJUnIiIiIkoUKRPgar5ix/SJ
U/HZZ58NThs/frwyfUS6GnDY1gWzdRkqzNFbjyHEEMWIa3B1fIiDp4DbqhdgUujWY06VfKFIRJQo
HM89B0OQP2QkS1F5IiIiIqJEkTIBLkNfHxwOB5xO5+A08V5MD60LDYdtaO/X3huRZS5FxR0W5I9G
Z2WG2bODzpfskQXmOtq6APNtusEt5/VWnGpoxOUeB1xiglHev3FFKFswF1Mym3Gs9ixQVoPFlnC2
FGl7IiLy5HrrLUA8AmBReSIiIiKiyKVMgMs40I+B/n4lqKUR78X0cGVMtmJZhVkJCJ20nYLtAxOq
SqPUQXMFltWE31z8ZV9qa4P0/vtKEWJcvw7T888HaN0BNb6lF97qwMn3TqHbPAeLrNOQl+5EX/dl
NJ9tQecNYErmcHaGiIiGQww/d774YtC6WywqT0REREQUudQJcPX1o39gAAPyQyPei+mRSsstxpzJ
zahr78I1rzn+2UvNx2rRkq0GxhQ3L+DEe43o7HfJRzcDJlc/jIXy/GkXcLT2HIqldBSfOYzedz5C
Voh+OP/szwZfX1j/DCyBGl5qQ5exAAv04ltd7eh2ZMBcIoJbyt4hM38KZlunuPt/Vt3Hs7UQu6YG
+XJw6eMTON3eA4dI+TJmoKB8Ee6clh2g/Th0fGzDKXd7oykHBWVWLJjG6BkRkUa6dg2OjRuD1t1K
laLyBoMawpMkKc49ISIiIqKxImkDXF/s24em731v8P1y8+04On8+MjIyvNoZe3uHtf5+lxLZkR+u
CJay4xPbaXRllaHyXguyHBfwUf1paIMNy/7vv2HCZ+qdHkMFt3x133ZXwHmX2rtgNC+AbokwcwHy
jO24/MmHaCkrRUF+DnIz0wZnWxaXocNvyGEXuvtzUbbIiml5QEdDPT463YDmosX67Ts+xKk2Fybf
XYW5cnv7hdM4e/2GPIMBLiIijXPbNhja2gI3SLGi8gxuEREREVEsJW2A6/zPf47ps8oxafp05f3p
zjRc/uVu5XWz4RKuTQJE7lbx1Kt45g//a3C5NRXP4Y4pq4Kue8D+KT5p60XG/8/e3cBFWe754//M
DIIiE41gCplxPIQ9gKaQCZ2EzjE9x+S0e6hX6e4WHkt3NznntJ5dBSv1r6L1i5NP58FWf1q7x4fX
T85rN7VNj7uBrVLJaIVaTOYhU4iECEcRBmbmf183DMzDPTDAMI+ft6/7Nfd9Xdd93deMaM636/pe
YxKhwyXPB2W8hMbWSIy+JwkjRQxJMxIR6p7qL/7qcaS/9rLn/dnMnYvJ6ePdVF7C5cYIxN3nLgN+
Iialm/DJ2Ys4/8kHkFMaqyNx05hkpN2TiBGK9+gwcUpPf7eM0yGyvgnGq3KVK5PI7dWB1uYWtEXH
QjsuDVM8f3dERCHPvGOH2MrVbT2TyhMRERERDU7QBriMFy9igjoOV/ZWyNezug7hrX+OQ+MTOnzv
e9+TrkZ1HWKmUz0OG153G+Ay1etxtF6cRSBmzN247x4d0NSPAFeHCPQMh9ZNrKlt1Cg0zZoL3ZGD
nvcp+Sjx+4hvNiMpVuNaeakezZE6pGjd36+JTcKUrCT5vP2GUXpLn+Lcl+fwcWQcpt+hfM+N2rOo
unAF10TwSp7EFqncUBh3N+5s+hgGw0m895mIn+kwYfK9yuMlIgozIo+idft2t/VMKk9ERERENHhB
G+ASmbZMra0wocO1TiqyWCxoaGhAc3Nzd3lsbCxqmy667dOWZN49dS91NibcEGsS3QScvllYgJuP
/zdU12940Jf0xWfMLRg58Racr/4KSS7bFppxqb4ZkboUd49zMWyEFrfccQfq6/Roam1RbmSsxulz
9cCtqbh/QhxGtpzDMX1TL72OQGLadCSKEbU1wKD/xM14iYjCi7W2FuZly3pNKt+6dCm0TCpPRERE
RDQonkRsApJYftja2opWmF2OdjPk3RSVjva2wTxVB+1woKWpFu3Sc67XVqHWPlewbgxiI1pxpeab
rvpLaHaKv1m0N0E97xGPn6h+8vGuZY4Kv1XmOtQ3RyJufC/hraaz+PDDKlz85gY60++3w3jpIppM
kdCNE8G8WIyIlD5LY4M04i7is0IEtKPjMDLKgqavjXZhRIX2Fz/Gh59/gxvSAzQRI9yPl4gozHQU
FvaZVN6SleXDEQ09W4J5IiIiIiJfCtoZXCJOZbpxQ3EGV5sZMJvNaDe1y6824to0qACXFhOSx6Dx
3DmUH/0MkbrbEBcNNHbX34I77xyDk+c+keqlDzdGh+HSJ2yJjHboRbMwD9f2H8Xw777r84kn1JEw
YzTuTnPNwWWuq0fz8NFI7W36VnQctJoLqDlzHIaufPnqiBiMvvs+dE5W0yF5vA4fnP8I79YDwxPS
8YN7JmBCXCMMH72Lo2K55k2RduEqhfaJ0vu7eAbHv+x8QETMGMXxEhGFE/OmTVAZDO4b2JLK2800
DgUiuTyDXERERETkayprkG5z9P8yMjD1Sgc6rrsus9v/2E248WQERo4cievXr3eXi+tPP2rGm89W
+mSM7U1n8YG+Cbr7f4B7nIJQlkOHYFm7tvcOpC8/ERs2uKk0o+bDd1Eb+yCyJobfboXl5eXSx5Pt
72EQESnq6+94Oan81q1y3i2xlF4soQ8lIsAVpP+8ICIiIqIgFbQzuK5OnozDH38MjHZNytvcLr0x
i0X+B3ZUVE/wR1y3epb6asCaPv1f6C+3dl6oh0OXnIY7FWZYqR95BJa33wZOnXLbl/onP3H/IPNX
+OZqDEZPDr/gFhFRILMaDDBv3Og27xaTyhMREREReV/QBrjmbdkCo9HosARREGWv7F+NC0fEshDX
JYD3xE8e0nHp7voBZt7lWVv1woXy7lpKrGPHQt3bDCVNEqbNTOr/AKkPVSjJWADsrMTSNH+PhYiC
jfXqVXSsW9dr3i3NK69AxaTyREREREReFbQBrujoaPlQsmbBq4rlGo0GWq2n+w0OPfXUqbDMnQsc
POhal5Pj8/EQEdHgmIuLe827pfrVr+S/+8MBlykSERERkS+F5FZ3iYmJiseYMWPcBsX8RbNggWK5
+vHHfTyS0NZ2ohgZiw+gtuu6qiQL80truq70KMlYjAO1onwB9kglexZkICMjAwUHGvwzYCIKOuZ9
+0SCQPcN5syB5oknfDcgPxKBLQa3iIiIiMiXQjLAFUxUiYnyNvEOpk6Vy8l7otKyMEtfhRp5F81q
6KviYCyrghy+qqmBPiETKdJHnrZ0J+ZJRfN2VqKyshJbcuP9Om4iCg5iubl140a39SKpvOaXv/Th
iIiIiIiIwgsDXAFAzNYSSYe7r+fM8eNoQpQ2CekpFTDUSOfVFSjLWYJFOIKKBqCtthqGzBQk+XmI
RBScRN4t87Jl7utFUvkNG5hUnoiIiIhoCDHAFQDElx7N88/L5+KLkNhhkbwtCSmZjTDUGVFzpgxp
6bOROQso0xtRV3cGs7LSwP0oiWggOgoK+k4qz1m5RERERERDigGuACGCWmLnRNVDD/l7KCErJX0u
yqqOQH8gDbPSgPj0HDSWS9d6ID0pcDYfIKLgYd60iUnliYiIiIgCQEDvotjc3OzvIfiU+p/+SWwP
CUuYvW9fiUpJR/qvV2PL3C04LAoS05FbU4BdbbNQnGRrlYCUTOBITS2QxhkXROSe5dAhWPfudd8g
jJLKExERERH5W0AHuGpqavw9BN+y5WcJt/ftK/ETkZNkQkJOatdyxCSk52mxvjodKT2NMGvREpQW
/BQZqyORve4tlMxmonkicmQ1GGDeuBEqd/V33IEIJpUnIiIiIvIZlTWA9/H++OOP/T0EClDfffcd
srOz/T0MIgpDIqm8nHfLzdJEOan8m296nHdLzFaOjY315hCJiIiIiMIOc3ARERH1g3nz5l7zbjGp
fP+oVCqHV3/3Q0RERETBiQEuIiIiD5n37QMOHXJbz6Ty3vI+NqhUUKk2SGfu6tzVExEREVE4YoCL
iIjIAyLvlnXjRvcNmFS+30SQSmRKsL16ZjqWWyuwftD9KI2n5yAiIiKi4BLQSeaJiIgCgZx367nn
mFTey2zBKNeglAhiWbF80P14TgS17G93viYiIiKiwBaSAa7W1lbU19fDaDSivb0dw4YNg1arxZgx
YzB8+HB/D4/8oLy83N9DIKIgds+//ituvnZNsa5D+u/KR3/915hu2wmXAspgZ3URERERUXAIuQBX
U1MTLtfWISYuAckTJiF+lBam1lbU/OULnP/iAm5NTIBOp/P3MMkPuOsiEQ2EedMmWL/4wm19ZEkJ
2oxGH44o1IkcW5kolM/Xo8K6HNMV6zzjaXCLs7eIiIiIgltI5eC6ceMGLn51CWMmpGHM+BSMib8Z
EWoNoqNH4q57JmFcyr346qvLcjsiIqK+WI4dg3XvXrf1TCo/FFxzbHWyBbdE0Eup3jsY3CIiIiIK
TiE1g+vy5cvyzK3IkTdDO2KYQ64UcT569Gh815Aot0tOTna5v/mzP2NP6ds4feEqOiJuwoQHHsPP
5z2AhGE+ewtERBQgRFJ585o1bvNuMal86GFwi4iIiCh4hVSASyxPTP7eZPm80dgmH85uuTUJZz9w
XWrS/sUevPLa13h4xTr8/fhoqaABn/3nNqxa1YwV6+Zg/JCPnoiIAoWcVH7dOqjc5N1iUvnQ01tw
i3m8iIiIiAJfSC1RvH79OiIie5LI3z46xuUQ9aKdowYc33sUCQsXI0cEt4Rh8bjzsZ9jXnQp3j7V
IhV8gT0LF2KPXWzsiz0L8drx5p6C9jocf3MdlkjtFi5ZhzdPNdhadt774Wd4+7XnsXjhayjXv4nF
Wz9ES8/N+OzNxVhX1gAiIvIv8+bNUBkMinXWkSMRsWEDVEwqP0Ts82wVIlO1QSoRbEsXRZlSvTIR
nPKUaGp/EBEREVHwCKkAl0ajgdXcOWtLBLOUqC3tcjsHzRdw+kIqpkyMdmqdgIkP3IaT1XUePL0d
VXtW4e1heXhlxw7sWJWDxm3bYB+vOlPViNTFr2HbjueRnZ6DRy/+GR/a6ltO42h5Gh6eFu/ReyUv
qypBRkYBDjC+SBT2zPv2AYcOua3XvPIKVImJPhxRuBGBLKs8Y6rzsE8y71znXO+qP0nmnQ+Bs7eI
iIiIgkNIBbhiY2PxzcXzUKtVMJtd/zEqSi7XGOR2jtqlYyzGOhdLoodJhe0tcotetVThePkU5D16
J+QwWfwD+EnOBZyu7pnhlZrzAMZ3x9DGY9oc4O0PL3befuZDVGXPxBTnGBsREfmMyLtl3bjRbT2T
yocfBreIiIiIgkNI5eAaO3Ysqs6cwa23T0C7ZbjDTC2NRoWmxiv4/NwnmDbtPqc7RRb5r/F1M/B9
pyBXS7tUOCwafeaZb7+BGziJ3xacdChO/bn7W+KnPYzxz5fhs4fn4Os/X8Sjf3dn38+hoZG2FJWV
/h4EEfmTnHdr+XK3SeVP3HwzZjCpPBERERFRQAqZGVyNjY2oqqpC0u3fw3/s2YnTH7wHS3srRkRF
AOY2VJ44hv17/g3Jyd/HTc55U2InYMqEMzhd3eLUax2qj3+F+yYmyFfDeg0HitBUNn71hx3YsaPn
eP4BhWlhNtFTMPOB4zj65n/ibczBNGay9w95eWKGdJSgqquo9nAx8mdnSWVZmJ1fhNLqrg0L2qqx
u2A2sqT2WbMLsEtvW9NYhRKprLj0MIrzRb10X9Fh1Prj/RDRgJiLiqCqU16S/pnFgpjly308IiIi
IiIi8lRIBLjqpC8kH330Me65ZzLee68c90+7D5dqzmNTyQas+Jfn8dr/WY/zn1cjJycHSUlJCj3E
44EnZ6JuxzaUXewKcoldFPf/X+yP/jkemyrWDSZgwhTgwoXOLz8tF4+j7IxdF7GpyL7vOPbuqULn
osR2NHzxZ7z9YTPcG4Y7cx7FxRMnMP7haWD2LT8Rs7feWYlM23VtKYpWmJC//wQqK09gf2Em2uqM
UoURZasX4Ej6qzhcWYkTO2dBX7AYu6p7utJXa5G/7TBOVO7E0zUrsLXM6Ic3RET9Zd6xQ/oDrFes
M1qt+Pc778TU7Gwfj4qIiIiIiDwV9EsU//KXv0hHDe6/fwb27/8jfvjDH2L8+PGYMGFCv/oZ9v15
WPEvZXjz31Zgz4Wr6JDKJsz8Z6x7/k50zsGKRtqjP8eHr6zCwv3RSH10MR6YCBzv7iEaUxeuwo09
/xerFm/E1Y4RGDvlAeTl9ZFUKz4e4+Py8NNpTL4VMIxGNEq/amsb0DYxHtqJuZgv/V6j4TBKj6Rj
3j+lQSvaJeYiP281VlVUI39i561ZuVlIjBJnE5GWDlQYxcwvrb/eCRF5wHLsGKzbt7ut/8eODiwt
KPDhiIiIiIiIqL+COsB19uxZNDR8ix/96KfYteu3uP/+aXJwa6Civ5+Dv1+RI59ffPtf8G/DYmG/
wHBYwgP4+9eko7tkB6bBoQEeeGqFdDj3/H3ME7MDFDR8+Gc0z1kMrk4MIBPnYcvKWqz6xU/xm0Yg
LnMRilfmIx0mqTIJiXZT7W5PyUSdweS3oRLR4Fhra2Fes8Zt3q03br0V2lGj5GXMREREREQUuIJ6
ieLly5fxk588gT/+cTvuvHMi7rrrLq/1Pf7hJZh25hUsXrgQC5e8jS+81rO9i/jw7Vg8PI2LEwNL
FJJyi7Dr8AlUHt+PwoRSLH5DZOeKlI4a1Db0tPzSUIGEuEh/DZSIBkFOKl9YCNW1a8oN5szB5OXL
sWjRIt8OjIiIiIiI+i1oZ3C1tbUhPj4eW7euhVarxc0334zz58/LOyeKIyIiwuUQ5Wq1uvu1V8PG
4+HnX8PDQ/ouxmPOK0u81lvMRx/h2r33eq2/sFVVii2mTCxKT0RUlBbaKCBSxLDis5A3azW2vKFH
1tJ0aGsPYFfp7cjbKdYnVvXVKxEFGPPmzVAZDIp11jvuwLAXXwTnbRERERERBYegDXCJIJVIGD9u
3DioVCr5EEEr26vtXLSzf7UdoUj7ySdokb6UWUaO9PdQgltCAkzrCzB78Ze4hhik/mwpdi9Jk6ty
Vu5E7a9/gdkZ8tpFLNqyrTv/FhEFD8uhQ4A4FFilv0Mjtm718YjCl/hvstVq7X4Nd976PFSrpftX
WrtfKTzw952IiMJZ0Aa4xIysUaNG+XsYAaU+Lw9jSktR95RLEjDqQ5uhCvqERHkRopiptbREOpQa
Rk3E/C2HMd+lIg1LKysdS5ZWYstQDJaIBsVqMMCydq3b+ojf/Q6qm27y4YjIO97HBlUmCuXz9aiw
Lsd0nz/b188lIiIiIpugDXCRKzFzq/XWW6H77/9G049+5O/hBI28jAx8GZOKJVuWgpOxiEKbnHdr
+XK3SeXVL7wAVUqKT8cUzrw7e2s6llsrpE5tQS5vsQ+c2fN+MGuoZ2+JaxtPyu37UnqGUvu+xqTU
h6f99Gf89mW91Xn6OfQ2psG8r/6Os6/2nL1FREThjAGuECMCW+P+8AdcmzwZ7fFMXu+JUqeZV0QU
usxFRVDV1SlXzpkD9SOP+HZAYc4WxPHP0sT+zbpaX1EBZErtH30Uj/7nf+I/HWpFcM2K5YMckbc+
D1twwzl4o3Ttrtx2rsS5zUCCOL09t69nejp++3rbGAbSz1C+L9s4+9OPu89e6fediIgonAT1Loqk
rP6xx5D4b//m72EQEQUU844dgF6vWCeSyke8+KKPR0TBoSt41R0BexJ/kK6tPl6K6I/8oZ4EXjwJ
pvgj4OL8zMGOobeZU4Ptpz8YvCIiInKPAa4QJGZuXZe+rImlikREBFiOHYN1+3bFOiaVDyRiVlXX
hjB/9Vf4q+7NYf4R/2i3UUznsUFq7Xyf0lJCuz6777FfdliITJc6pWd4MGbFPnobr6fP8N6sLsEb
S9hEH/bBGtu18zHQfp2PvmYzOZf3V1/9eCuw5C5o6Px52WaVKb1/d2MkIiIKd1yiGKIa5s7F7b/5
DW6kpKD1ttv8PRwiIr+x1tbCvGaN27xbTCofSOzzaImZUssxXT4fj6ek8vHdSwpzUCadZ0q/qbZz
+/KeIJf9MkT7e5bbPcd+iaL79u5na7nP/WVb1oiuV3fj7fsZ3uOt4JbzMrmhDAC5e7Yn5f3lj8CR
t5ZMEhERhbuADnBNnjzZ30MIatYVKzBy3ToMe+MNfw/F68rLy31yDxEFv0mbN0N77ZpineGxx3BF
5ORyl5eLglxP8CmzX5OJCvvZfiB88QxH3gqS+CvQEurBLU8x2EVERKQsoANcNDhiJzD11Kly3hnN
woX+Ho5fZWdn+3sIROQHHWvXArW1ypVz5uDupUt9OyDyMdcZWZ7tsOj9HRL984wewR4UCcXgljee
61EyfK/sUkpERBT4VFb+Fy+kWa9eRcfTTyPi5ZflgFeoELOxGLQiot5YDh2CRQS4FIik8sPefNPH
I1LW3NyM2NhYfw8jwNjnyLL5B+nX76VfNkpLC+3Z6t3VOQe83LXvra3Ss3vaw2mJYmGvz+g92DXY
IEVvSdKdcz8p3eNJuSfPHmg/7sbvrffVVxJ5d3mwPO3fW/0MJNk9A1xERBQuGOAKA5ZTp2DetCmk
lioywEVEvbEaDOh47jmoFJYmyknl//SngMm7xQCXp+xnY/l2B0OiYMXgFhERhRPuohgGxDJFVUKC
HOQiIgp18szV5csVg1sCk8oHI+ddDz3beZAo3DG4RURE4YQBrjChKSqC5cABeTYXEVEoMxcXQ+Um
abz6hRdCarl2+BDJ4q3yl/XOgzO4iIiIiMgRA1xhQsxW0Dz/PMxr18qzG4iIQpHYVAPudkydMwfq
Rx7x7YCIiIiIiMgnGOAKI+KLnViqaNm5099DISLyOjFD1bp9u2KdSCof8eKLPh4RERERERH5StAG
uG7cuIGzZ8/i5MmT8qu4Hky7IdFUhWNHj6Gqyel8KPr3kGbFCi5VJKKQY62thXnZMuU6kVR+61Yf
j4iIiIiIiHwpwt8DGKgzZ87Iu06lp6fj/Pnz8vV99903wHZNqDqmR72pp0Q9XIcJafciKVYztG/E
YzX48Oh5IHkmpiUNvBdVYiLUzz4rfxFUlZaGTaJlk8mEU6dO4dtvv4XZbFZso9FooNPp5J+VyMhI
H4+QiAajo7CQSeWJiIiIiMJY0Aa4Ll26hDvvvBPXr19HQkKCPDtLbLXuzGg0urRTCoQJkWPSMSNN
B7Qb8fnpkzhfZUDcD+6C1hsD1qVhxkxvdDT4PjVPPAHLoUNyIuaIDRu8PKjApNfr5a2yp0/vPS2x
wWCQ22ZmZvpoZEQ0WB1r10Il/dlVwqTyREREREThIWgDXCJYceLECaSmpsqzssT1zJmd0Z533nkH
P/7xj+Xz//iP/3Bp16dhWtxxSwy+vNACETKTA1w3alH1sQH11zogPraYW1Nx313x0HTNrOqIGwN1
cz1EdUT0rUi9/y7E2/cplhPqm6BLnwERQ3PuL3p0MtInj0bT2dP4rP4aOixSsToScSn3Ycq4Eaj5
8Dzk1PDnj0JM5JKDceMuOfV5CadPGtBossj36iZMxr1Jsd1jtIxOkMYhxmiB9pF5SN/4/8Fy7BjU
M2Z467clYDU0NMhBK4vF4lJXU1OD119/HYsWLUJycjIqKir8MEIiGggRrIc4lDCpPBERERFR2Aja
HFwPPvggvvnmG+zbt09+Fdc2HR0dHrVzx9zWgE9rr0EdOwYJcskNVJ8+hyvqJGQ+NBPZk+JgunwG
Z77pucfUPhzJmQ9hZvYk6Dou44x9pQsjPtWL/m7F/dkz8dCDqYjDdbRIv5pNI5F8XzZmzszGpNFA
42dVqDEDSdOSIRbY3JQ8Uw7kyTPNXPr8DM0jkzvHmKrD9fN6fHSpZzley40IaYxS39l3I3LMMHz1
6N/BvGZNWOyq2NraKi9TdD6+++47/OY3v8Ff/vIXrF27FpcvX5bbKmo4gIKMAhxoGMgIGnCgIAMF
A7uZiBRYDQaYN25UrmNS+aBh+x9PHv0PqAB9tmq1yuG1tza+4Ml4iIiIiEJN0M7giouLw9/93d8p
1rW3t3vUzpmpXo+j9Z3nw0ffjftTEyFn4DLW4ErLcCTcn4SRouCWuzE+5l1crG+SzjvbR99yB+Kj
xNktmDB6OD64cgVuc78bL6GxNRKj77kD2mGiIB4TJ3fO99JN6Qlc3TJOh0jpGUYRf3KOZzlruogr
cp/jHcZ4ob4OGNfZJGbsxK4xJkIXfQ6Xc+Zi3Ad/DouliuJnoq2tzaVcBLfq6zt/03NycnDTTTc5
/PwEniqUZCwAdlZiaZq/x0LkPyIw37FunWLeLSaVJ39zF1hSKreutPZ6j7v2REREROQoaANcvRlo
gKIzB9dN+Prj93CmuRE3kIiRoqKjAxa04vIHR3HZvv1I5X60I0SCctelcN3k/oZDqxC0ulF7FlUX
ruCaSWojd+FpsnPReDhGdvepQezISFhudLi9wzxSC82LL8Ly3HMw79sn5+YKdS0tLfJsviek9/rW
W2+hurpaLp8yZQoeffTR3m+Oz8WWylwfjJKI+iIC8+7ybjGpfPAQM6esVmv3azA+WwSmRNDJ9irY
B6Gc6+3bObMPdrk7t+/X+T534yEiIiIKByEZ4BJLz2xEknmRNFwkoLftpqjV9pY2XoOxqam4cvwj
nDuXgAfSRJ4tsZIzGrc9mIWJUc7tXRPbNxlbAbVW+nDdBZdEf60wiile9kEuYzVOn6sHbk3F/RPi
MLLlnJxjyzOdfV7v7tOM5usmqIeJ32L3QS711KmwPvkkLNu3Q/3gg/Iui6FKBLdeffVVXLx4UQ5s
ibxcwm233YYFCxb03YFYovjjI5j1zhbkxnfOpGorXAcc+A0OnjFCO2sldhbPRvcn2FaN3b/+BbZW
NCIyNRNJjejZsKCtBgdKVqHkT2dwLSYVP1tVjKIccWfv/VaVLMAecf+CDPk1c+U72JIb7zJUIc0r
+AAAIABJREFUolAmAvIoL1esY1L54GILLPk6uOXNZysFtWyUgkzeCD45368UXGNwi4iIiMJN0Obg
6o19Di6RYF4EtHJzc+VXcd0nTTzSptwKdf0n0NfcAHTjMXp4Cy6frkaTmBxmbkPDxdPQn+0JPnXc
MEJUtRs/x+dXTIgeneR+90W5PxOufP45jO2iu69xVvQtjbsDEdCOjsPIKAuavjbahaZiISaGtRob
YO6lz/rPa3BdatD+zTlcvKZG7JiEPt+uWgR3pH/gixkRoSw6OhrjxnWu17QFt0SZCG6J14HQV2uR
v+0wTlTuxNM1K7C1zNhVY0TZ6gUoTSrG4cpKlG1bglk90S2cKJmPXVEFOCDVVe7OQ11REUpr++43
belOzJNe5+2U7pPuZXCLwo3l1ClY3eTdUj35JJPKk1d4IydXXzO1bG2IiIiIyDtCMsA1evRobN++
XT5E0vCUlBRcv35dfhXXHtHehfTkGFy78DFqbmhxV/rdGI06nC4/iqPvvodPLrYjOq4nKGK6chrv
HT2K8g8uwzL6bkyZOKK3zqX+7oTO9BU+kPp7973P0KweiWjdBEyIA6589C6OHj2OaqP9b5AOyeN1
sNR/hHel5/zvWeeZXV19tl5AxbvSOM40YWRyOu4dp+nzrYqlPJqXXgL0+s6ZESHs5z//ObKysrqv
RXBr/PjxA+4vKzcLifKsvolISxczBrvyfBn1OHIkHflPp3cGOqPioI3ruslYgYN/ykHBoq66xFzk
551Bmb6h736JwpjIu2Vetky5cupUaH75S98OiIbA+9igUskBpp5jg1SqVC/K+2qvdE/fvDGryz6I
ZZ/03XZuazPQ/m24FJGIiIioU0guUXzE7v/g79mzB+Xl5XKOpdOnT2PECKXAkw5pM2a6lI5ImoYf
JtmuEpE23f3yvejxMzAtyalQl4aebu3PRefjMOUH41z6GTdlBlxLbeNJR47DM3Sufc5QujsJ02Y6
Di5p2kzYl6hnzIAlO7tzqaL0WYXaEh+NpifQJ4JcgtiAQPxc9NZ2wNqMMEqfcJLSBCu57gh+/dAR
h+LMlYN/LFEo6ygoUE4qP3YsItav98OIyPumY7m1AlBlohDrUWHNQZl0nqlC97lj+T/gH6S71ldI
92RmSo06XzvbL5d6E8Etpb5E3dBzDjx5OxjF4BYRERFRj6APcIn/y2o2m+VliSL3lkgwL15tR3Jy
shzYOnfuHG6++WY5oNHY2CgHN8iR5he/QMdTT8k7kw174w1/D8erRo0ahfPnz8s/D4ItyOVMtBFt
B09sDtCIRrGy0GWtqqj7GTYfL0KWS063Oi88myj0mDdtUkwqL++Y+PLLTCofFnqCX5n9XtlXOIB7
vMvTYJRzO9tMsIH2R0RERBQugj7AJajVakRERMjLD8RrZGSkHPQShwhqiSVoFotFDoYNGzbMzSyu
gXKdHRWsRIJ59bPPyvltzDt2QLNwob+H5DVpaWmoqqrCyZMn5Z8FJWLmlvh5mTRp0uAfGJ+GnNQV
KD2yBDl5iTBWV6CixlaXhbxZq1FSkoOUoizEow21VaU4UjsL+bP76jgBKZnAkZpa6U2F7oYARPYs
hw7BunevYp3m+edDbsYpueM6G6vQ43vX+2zWluAut5ZSuSfLDZ13URxIcMsfO1USERER+VLQB7hs
OTdsQS4aHM0TT6Dj2DFYt2+HVeyqGCJfHMWsrIyMDIcNCJSIIFdMTIwXnpiIvOJ10C94DBklWmQu
WoKURJF6XtAiZ+VuGEtW4W+yfoFGUwxuz85FQYGY6tXXDK54zJL6Ki34KTJWRyJ73Vsomc1E8xS6
rAYDzBs3QilcwKTyocgWxBIKUfZ+RVe5mIElglQVWO8wg+v30i/IyxSVsynaz/qyhcP6DnYNNhjk
6Y6KntznjnOwjLO5iIiIKNyprPzfeeTEWlsLc14erCkpAbtUUeRVy87O9vcwiGgIiaTyct4thaWJ
Iql8xG9/6/tBDYHm5mbExsb6exg0xPoKcHm6o+JAAlmcvUVEREThgFOeyIVYqqh65hlg+3Y57w13
JiMifzAXFyvn3WJSeQoingauhL6CV/3py6FfBreIiIgoDDDARYpE/q328nJg715YHnwQ6qlT/T0k
Igoj5n37xFRNl3Imladg4+mMK0/acRkiERERkXtqfw+AApfmV7+SX81r18pLhYiIfEHk3RKbXShh
UnkiIiIiIlLCABe5JWZtiSTOqro6WHbu9PdwiCgMyHm3nntOsY5J5YmIiIiIyJ2AXqIoEu+Sn+Xl
Yfj//A80e/fCOHUqLJMm+XtERBTCzEVFUF275loh/f3DfIBEREREROROQAe4uKtUAJB+DyxLl8Ky
bBmGv/YaInbtYu4bIhoSYlML6PUu5UwqT0REREREfeESReqTesYMIDtbXqoodjUjIvI2y7FjsO7d
61LOpPJEREREROQJBrjII5qiIvmLptjVTHwRJSLyFpFU3rxmjWIdk8oTEREREZEnGOAij4jZE+KL
piC+iHJXRSLyBjmp/Lp1inm3mFQ+PKhUKofXUOOt96darXJ49RV/PZeIiIiovxjgIo/JXzTFzorS
F1EuVSQibzBv3gyVweBawaTyFHTexwaVSg5kqVQbpCsiIiIi8qWATjJPgUezYgU6nnoKKrFU8dCh
oJldYTKZcOrUKXz77bcwm82KbTQaDXQ6HdLT0xEZGenjERKFH/O+fYD094gzJpUPHyIYZLVau1+D
23Qst1ZIbyoThV0l3np/YvaUdaW1+1Wpzt09gynv7blEREREgSZoA1ynP/8cN9raMCIqCqNuugm3
3HyzfC7KvvnuO3x79ap83tbeDrPF4nCvLiYG6RMn+mnkwU2VmAj1vHmwbt8O88aNUE2ZIpcFOr1e
L3/BmD59eq/tDAaD3DYzM9NHIyMKTyLvllX6O8SlnEnlw4ot6BP8wS1l3np/tuCSUgBKibfK3T2X
iIiIKBAF7RLF3//PVUxOTkb8qFGob27Gyepq/KWuDh9Kr5ebmjBSq8Xtt92GSXfeiczJk/GDe+9F
ztSp+FF6OraVueZ6Ic9pFi6E9Y47gmqpYkNDA5KlnxeLxdLrIdqItkQ0dOS8W889p1jHpPIULryR
c8xd4Mlb5URERETBJGgDXFarRZ6xJWZjjR87FokJCfiitha3jhuHcYmJGClmAUREQPzzUQQuxP89
7fk/qZbeO/dYDT48ehQf1nipuyAS8cILnSd6fecyowDX2toqL1P05BBtPdOAAwUZKDjQV0CsCiUZ
GSipGuy7IAoN5qIiJpUnN+zzWCnls1LKc9XbPUp1/4h/lF43vN9ZZ3tVvkeU9Vz3tHU3rp7liX0J
1VlrRERERP4StEsULeaeIJX8j8Sufyhq1Gr5uuLkSail8/j4eLS3tyNr0iTFe23M12txrsqAK9c6
INdK9w6PSUDy5LswNmqo3423NaHqmB71JruiiBiMSZmMtMQRXnmCmGGheuYZeamiRTrUDz4Y0EsV
xc9AW1ubx22DSYN+N36z5Q2UnWmEKTIOqXOXYNXSXCQF3c8thQPzpk1yYNwFk8qTzD6P1XpUWHNQ
Jp1nqtB9rlTeSZQvh/JCdPs6EYz6vZvnizrnZ4jzCqwX5fLydefnuN7jaZCLiIiIiLwneANcCrOw
Ojo6us8nTJggB7hE4nBx9H7vNzhz8hyadXfivvRx0A4zo635CmrOX0RjC4IwwNUpckw6ZqTppLN2
fPNxBT4xGDA6cTLGeql/9eOPo+PgQai+/hodhYUY9sYbXuqZPNVWVYLFBTWYv3M/iidqpYJa6F8v
wvz5jdhZmg9mmqNAYjl2DNa9e13KmVSePNMT/MpUuSsXoSX7AJRynSjbYAtEOQSt3kdZr2PoLYhG
RERERP4UtAEuc4frTnj2Aa4LFy4gLi4OV69elQNcRqNRnpnzwD33uN7bVI/mjkjoxovglijQICp2
LCam24WCbtSi6mMD6q+JZ0QgenQy0id3Vlmaz+L9snpc67BAPTwBkzLvQbxG+b6YW1Nx313x0hPE
8sbz6NCNBoxX0CJVR0QnIHm8BZfOi77E9a1Ivf+urr7a8PXZ0/is/ho6RHxOHYm4lPswZZwnM7KG
4ZbY4cCVNnQuvut8tiUhGcMaL6DJFIEx6TOQNvwSTp80oNFkkfvXTZiMe5Ni0VF9Au/Va3HvjDTE
w4yaD99FTVQqciaPhWbFs7AUrIHKYIB5x+tonD4J57rGqI6IRlxyOiaPi+rzc3AZi86Dt+UPbdXY
/etfYGtFIyJTM5HUCGi762pwoGQVSv50BtdiUvGzVcUoyumZ1WasOoDikhL86YwJKXOL8eqqHCTK
yxcXADsrsTSts11VSQZeT3kHW3Lj3TyzAtpFot6EgyV7kLTyXeRN7BpFVCLSC1Zhqf4xvFGWh+Kc
Gg/6dzfurrGt24a4g0V4vSIF//xKAv7PoXQcLpnd9b7boC9+CFsm7seuvMCdwUf+Z62thXnNGjhn
HWJSefJcbzOlRCDLiuVdbTpndtkHuZzrcuSa9RUVcoCLM676JzR2vSQiIqJQE7Q5uCzmDpcy+6Vl
YgaXTqeTX23nCQkJyvfq4qBVm3Dl049x8Rsjrrc5B8+M+FR/DlfUt+L+7Jl46MFUxOE6WrpqW25E
IDkzGzOz74auow6fGYxdNTdQfVrcl4TMh2Yie1IcTJfP4Mw3PT23tg9HSuZDmPnAbYhske6tsWBc
ejYeyhTXl3Hhsq1lC5pNI5F8n/ScmdmYNBpo/KwKNa5xPlfm67jY2AL1TWORYFfc0mxEQrroTwSU
xHv8DM0jkzvHmqrD9fN6fHTJjKhEHYabjGgUK/zMdWhsUcPSfAVN0qV63K2oS+/8CmHdvhNf6r/C
mK4x3pesheV6i0efg+NYPHhPfmFE2eoFKE0qxuHKSpRtW4JZPdEtnCiZj11RBTgg1VXuzkNdURFK
a3vurqlLRP62MlRW7kde469RZF85kGc2VKHsTCZy0rVO9yQhPTcFR/Q1HvTf97hPVNQis/gwTlRu
wV//MA+LDHtwxFZvLMPuP2Vi3iwGt8g9Oal8YaFi3i0mlSf3CpHZHdASwarO2Vjru8ttbTpzaqkU
c2DZ58zyJJDl/AznYJoot8+9pXSPu3aOvJFk3rb7ofMuiN4qJyIiIgomITWDyz7AZT+DS+ThEgnn
Rf2EUaMU7k3EpHQTPjl7Eec/+QAGUaSOxE1jkpF2TyJGGC+hsTUSo++5o2uGVzwmThazX2rku2PG
TkR8VGc/uuhzMNpmkhlrcKVlOBLuT8JIMQvrlrsxPuZdXKxvks7hdO8t0EZ+hQ7deIyTH9J53dQs
wkg6+Zg4pSfyc8s4HSKlfoxXu6oVmOr1OFpvu1JjeJwFrdJbj+qaXRaTmIbEkV3VTRdxRX6P4x3G
eqG+DpCepY2ow7UromE9jNoxGH29EZekoUU3X8f5R/8WYz+rgur6dXz/P/biyx/OQlt0LLTj0jBF
/hw+7ftzsB9LoDLqceRIOvLfSe+cvRQVB22cra4CB/+Ug4J3u+oSc5Gftxq79A2wTWxKm5WOxK6f
k+y5mVh/sAoNfc166u2ZEEnWkpAU73pbTKTUqM2INjgHv5z773vcWXm5mNjdzUTMygcWH6lGXv5E
GE8cQcXP5qO4j8dQeDNv3izP8nQm8vgxqTy5p7Qc0DYby9nvpF9K3LWXamwzkFzqXe+Z7qYPT57j
jjdmQPljF0XO3iIiIqJAFcQBLtcZXGIHPBtbDi4R3BJLFL83ejQi1Gq392pikzAlK0k+b79hRNOl
T3Huy3P4ODIO0+NF4vnh0PZ3ZlGHuK8Vlz84ist2xZG9BXJ62eDxRu1ZVF24gmsmqV+5XWSvj+/J
wSW957avce6DMzh9Jho5k909eDhGdr9HDWJHRsJyQ3xW46CLPoOLRiO+NhkRHXcvxkUex9la6XPq
MGHYuDRoXnoJlmXLcFNdLbS/fxnvPfRDqCN1mDD5XiRZBvA5eJlzHrYBtW0zwugmoNRZdwS/fuiI
Q3HmSuWu4hOT0Bmg6kNvz5R//2tQ0wCkOdVfMzUCUVr0mT6un+MWEmfNQ8rsUujn5aNmjwGLCtP7
fg6FLcuhQ4A4nGVnQ7Nwoe8HRAHu/Z7cWPIsKDDnVYBhcIuIiIgCVfAGuPpYoihmcNnvoigCXL3d
a2/YCC1uueMO1Nfp0dQqltiJwFgrjLbJVB4T90XjtgezMNElAtDcn44AYzVOn6sHbk3F/RPiMLLl
HI7pmzy+XRM1FuN0BtTfaHHTovM9Xu9+j2Y0XzdBPazzR2RMbDQMzRdQ3xKNW1I10DXGosMgXUt1
2mQt1HfNgEX6woryciT9z7tI+unD+NzcjPPVXyHpDi9+DgM0atQonD9/HsnJyb22E21EW2UioNSI
RrEC1WXGkqj7GTYfL0KWy3usc+mpoaZG6qMzMBQZ2Veoy80z49OQk7oCZXojcmfbV9ZAf8CAWflJ
8nnv/fdv3DJtDubPXY3d600wIB/bmMme3LAaDLCsXetaLv39GlFU5IcRUeDr/0woIiIiIiIhaHNw
9TWDK3PaNDwgHanJyZiWmtr7vU1n8eGHVbj4zQ10hsjaYbx0EU2mSOjG6QDdeIwebsKVzz+Hsb1z
NtTZ09XoM7wk39eCy6Kt6NjchoaLp6E/63lgqps05g5EQDs6DiOjLGj62ojew3SO2o2XUNNkQuSI
2F7GakL95zW4bpbaf3MOF6+pETumM2tX1C2xiLx6BVeG65AgLzMcA11HIxpN0dB15eLX5D2MjhHR
8rn15c0YdqMrOOjNz2GA0tI6M6yfPHkSH3zwgeJRWVkpt5k0aZJyJ3JA6QhKuxJQGasrUFFjq8tC
3qyDKCk5gQa5oA21Vbux63BD9+3Gxq7cbEY93tilx8/mZkKLJKTlAFVVNV19HkDpCftnpkvPLENp
mcIzkYi5S+ehZnURSqu7+ha7KG5ZhS3alViSI4JeffXf97hdRSE9bxEMBw8iZd4sMPsWKZHzbi13
DVPISeVfeIFJ5YmIiIiIyKuCdgZXe5upK2msqjtRq20Gl7hSS2ViBpftcGjX5jSfJToOWs0F1Jw5
DkPXEkF1RAxG331fV8JzLe5KvxOtegM+KP8Stl0Uk/sMMYn77kbHxwacLv9KXgSoHn4TEpJFEKif
M5d0EzAhrhGGj97FUbEL4U2RfUYnHXJwqaV7Rt+N9Lt1bp7d9R5PGlDx7vnOXRST03HvuK7lero4
xEbU4bpufNdytLEYo/sMV67HYkxXD6rk8ah9+CGMf+sQVHVfY9ifP8DdK+fKdV77HAZIzMrKyMhw
2GlTiVieGBMT46Y2EXnF66Bf8BgySrTIXLQEKYkiDbygRc7K3TCWrMLfZP0CjaYY3J6di4ICEWTq
nAlVs6cIs4sq0Ig4zFq6GyvlKVNRUj8rcWTxfGRsFX0WY246cNDumXNXFUK/WHrm6kik/iwfadIz
Y+I6Z2xFpS3Frm2lWL/+MZScaZRnaqXO24b9W9IR3zWu3vvve9zKH0UCUhKWYNFsJt8iZeaiIunv
AdefIbGcmUnliYiIiIjI21TWIE2mkLP4X7H86XsQPWIEYmNjERUdjf965x088sgjMF69iubmZtxo
bYWprQ0dZsek8r/9f39B2bZn/TTy0Nfx3HPAqVPyufq3v4V66lSvP6O8vBzZYklkuGk4jKKfHkH2
4RIoxZaqd+VifeQW7JqfNKTDqC3NRxGKsauvJPkUlsw7dsC6fbtLuUgqz7xbrsR/r8R/x4iIiIiI
aOCCdgZXSrwZm3dXIWZkBKKvfYQfPPSQPDvnWPl7+N9330VLzL24dr0D11tMaG1rl3dJspn8vUDf
ri+4aX75S5ifflo+N69dC9WuXVyONAgNZUV47NdHcE06j7k9G/lbChWDW8LEea9i1q8XI+s3jTDF
LMHOsnykeX1E1TiyKw7zdjO4Ra4sx44pBreYVJ6IiIiIiIZS0M7gam6+CsMXNWhsuoraLw2oqqrC
m2++iaeeekrOt5R4ewpuihmB6BFRiIzQdC9PjIyMRGJiAkaMGOHndxDaHGZwSF9sIzZs8Gr/YTuD
iyiAWWtr0fH001Bdu+ZYLpLKb93KQLcbnMFFRERERDR4QRvgcvbdd9+hpaUF0dHRuPnmm/09HJK0
//VfQ/X11/K5+uWXoZ4xw2t9M8BFFFjkpPIFBVAZDI7lIqn8737HvFu9YICLiIiIiGjwgnYXRWci
qJWYmMjgVgDRvPhi97l5zRr5CzARhSbz5s0uwS2BSeWpL7YZ1rbXcBGu75uIiIhoqIRMgIsCj0gu
r3rySflcLFkyFxf7eURENBQshw4B4nAiksp7c+YmkW+8jw3yzssbpDMiIiIiChYMcNGQUi9YAOvY
sZ0X5eWdX4SJKGRYDQaYN250rWBSefKAmL0kMiXYXsOFN9+38wQwce189Oee3vrqrX1vz/VG+/68
Z6U6T95vf9oPZPx9vS8iIiIaHAa4aEiJpNKa55/vvhZfhEUiaiIKfnLereXLFZPKa4qK/DQqCia2
4E5gBbemY7k0Hqt1uXQ2NLz1vt0FSkS39kdv94hr+7b29Up9eNredo8327t7z729V+d+euu/v+37
M/6+3hcRERENHgNcNOTkJUpdCeG5VJEodIg/y6q6OocyOan8Cy9wx0SiAepPTi5fxQVtwZlAZz9O
5zH3NX537YPhfRMREVEnBrjIJ8RsDvHFV6bXw7xvn38HRESDYt6xQ1527IxJ5Wlo2PJiqbDh/Z7z
njxZvZe53mN/7a7cOQdXX891d1//eGM2W29L5Jy7t80msh19Pb639krPVZr91Vf73vrv78fTn/6V
2juX9zV+IiIi8p8Ifw+AwoOYzaF+9llYu3L1WLZvh/rBB6FKTPTzyIiovyynTsEq/Rl2xqTyNHTE
ssEK6Ycs065sPSrkZYQiyJSJQvk6B2XSeaYKcp3tnsLMTLv2wvsoc+jD7km2exye78EzFOqGaolj
X5SCQu6CQ30Fkfpz3Z/7PB1nX+PvrX+lGV29jcuTGWCevl8iIiLyPc7gIp/RPPEEMHWqfC6WKnYU
FvZxBxEFGpFDz7xsmWsFk8qT3xUi0yUwZeMcyOoMmK2X7wmtHRP7CgLZ54Ty5XN7C255qr/j7+8z
+tOewSwiIqLAwwAX+ZRmxYrupYoqsfuaWOZEREFDBKaZVJ78o2sWV6ZttpTzDClRZpWX+HmWIN6W
TN4W6AqNIJcniedt1754bm8zx/pjqMfvTm/vi4iIiAILA1zkU2JJonrevO5rsczJajD4cURE5KmO
tWvlwLQ9JpUn/3OejWWfT8s2o8s5gGWfO8t+1pe7e+yfYR9gc2xf1v2AgQfM+pNkXmk2kyc5puxf
vZWDy9PcXH09t7/j99Y4/VVORERE3qOyBtbe3BQm2p96CqrPP5fPrSkpGPbGG/26v7y8HNldOzMS
0dCzHDoEy9q1LuXql19m3q1Bam5uRmxsrL+HQUREREQU1JhknvxCzPgwP/20fG5bqjiU+XvEF0gi
Ghj1F18g6rXXXKb8tv3t36Jj8mTxB8wv4wo0DFJ5g/2MKGdKyxIDVai8DyIiIqLgwRlc5DfmTZtg
3bu3+1r9299C3ZWEvi+cwUXkG9arV9GRnw9VXZ1jhfTnL2LDBv8MKsRwBhcRERER0eAxBxf5jXrB
AljHju2+Nq9dK3+ZJqLAYS4udgluMak8EREREREFGga4yG9EUmrNiy/2XEtfoi07d/pxRERkz7xv
n5gu6VDGpPJERERERBSIGOAiv5KXJM6d230tlixaTp3y44iISBB/Dq0bN7qUa156CaqUFD+MiIiI
iIiIyD0GuMjvNAUF8qwQGy5VJPIv8efPvGyZS7nqmWe4YyIREREREQUkBrjI7+Slii+91HNdVyfn
/SEi/+goKIDq2jXHwjlzhnSnUyIiIiIiosFggIsCgjwrxH4HxfJyWI4d89+AiMKU2N1UZTA4lMlJ
5X/5Sz+NiIiIiIiIqG8McFHA0KxY4bhUcc0aLlUk8iHLoUNyHjx7clL5DRuYVJ48olKp5IOIiIiI
yNcY4KKAoUpMhPrZZ3uur13jUkUiH7EaDDArJZV/5RX5zyaRJ6xWq7+HQERERERhigEuCiiaJ55w
Xap46JD/BkQUBsRMyY5161zybql+9avOnU6JiIiIiIgCHANcFHCcc/2IWSXW2lo/jYYo9ImZks55
t+Sk8iLgTEREREREFAQY4KKAo0pJgeqZZ3quuVSRaMiY9+2TZ0raY1J5IiIiIiIKNhH+HgCREs3C
hWg/eBCqr7/uLNDr5S/iA5lRYjKZcOrUKXz77bcwm83Kz9NooNPpkJ6ejsjIyMEMnShoWKQ/F1an
vFtMKk+DJfJwiUTzzMdFRERERL7EABcFLM2LL8Ly3HPd15bt26F+8MF+J7zW6/Xyl63p06f32s5g
MMhtMzMzBzReomAi8m6Zly2D8353TCpPg8XgFhERERH5A5coUsASya1VTz7ZfT3QpYoNDQ1ITk6G
xWLp9RBtRFuicNBRUMCk8kREREREFDIY4KKApl6wQF4y1U0sVdyxo199tLa2yssUPTlEW8804EBB
BgoONEinB1CQUYADjI1RkDBv2sSk8uRTYlYXEREREdFQYoCLAprIA6R56SWHMuv27RjZj10V29vb
0dbW5tEh2hKFMsuxY7Du3etQxqTyREREREQU7BjgooCnnjEDyM52KPv+/v1+Go2C+FxsqdyC3Hh/
D4Sod1aDAeY1axzLmFSevEhpphZzchERERGRLzDARUFBU1TksFRRW1vb76WKg9ZWjd0Fs5GVkYGc
/NUorekqd1qiWHu4GPmzs5CRkYXZ+UUorW6TSqtQIt23alcpivJz5Lr5qw6juvoAiruvy9AzL60N
Nd39ZCBrdgF2y/1IqnchL68EVW22trU4UJCHkp4CIhciqXzHunUuebeYVJ68SQSynIMwIgjXAAAg
AElEQVRZDG4RERERkS8wwEVBQcwuUT/7rEOZWKpodc4jNGSMKFu9AKVJxThcWYmybUswS6vQrLYU
RStMyN9/ApWVJ7C/MBNtdcbu6qraBCzZVobK468i9cgKLH7dhLwt0vW74roIpVU9z6ttTEOh3E8l
9i8Bti7YCrl6Yj625NegYHUZRM81pUXYlbQKS9KihvxToOBl3rzZJe8Wk8oTEREREVGoYICLgoac
ANvpy3jH8uXyzJQhZ9TjyJF05D+dDjmuFRUHbZxSOyMapV+1tQ0Q86m0E3MxP6dn7WJWbhYSRRwq
KgVp6UDarGxMFB1qxbUJhhpbpvp4ZM3P7ayTJGbOQrqpBrbqxNxCLDWuQtGqVVhaloctS9PA8Ba5
Y963Dzh0yLGQSeWJiIiIiCiEMMBFQUWzYoXDtaquDpadO3u/R6PxvH93bduMMCIJSX3l2Zo4D1tW
JuDIL36KB8QSxYJd0Pe2u6LJfVVbzWGULJ2P+WKZ4o9Xo8KhNhG5hQUwHqxAzqJccIEZuSNmOVo3
bnQsY1J5IiIiIiIKMQxwUVARuYJUzzzjUCZ2hLOcOuX2nlGjRuH8+fN99i3aiLbKIqWjEY1GN9Xd
opCUW4Rdh0+g8vh+FCaUYvEbVX3d5MpYhvXzt6It91Vse0vq652VyHRoUIsD63cj5elslK3aAqbf
IiVy3q3nnnMsY1J5IiIiIiIKQRH+HgBRf2kWLkTToUPQ1tV1l5nXroVq1y7FL+1paWmoqqrCyZMn
YbFYlPvUaHDzzTdj0qRJyg+NT0NO6gqUHlmCnLxEGKsrUFGj0K6qFFtMmViUnoioKC20UUBkZP/f
I9ra0GhKwqyURLmPhooq2D+u9sB67ElahZ0FKTBgPlZtzcFuLlMkJ+aiIiaVJyIiIiKisMAAFwWl
Lx5/HPdu3tx9LZYqiiTaES+84NJWzMoSOxF2dHT02qcIcsXExLipTURe8TroFzyGjBItMhctQUoi
4DKhKyEBpvUFmL34S1xDDFJ/thS7l6QB6OcsrvgcLPmng/jFYxlYHZmKn+WloDunffUuFOxKwqrd
nQGttIItyC8owFb9bixNZ4iLOpk3bQL0eocyJpUnIiIiIqJQpbJy/24KQuXl5fjBRx/JyxPtqV9+
GeoZM/w0KqLAYDl2DJZlyxwL58xBxIsv+mdA1Kvm5mbExsb6exhEREREREGNObgoaKkXLIB17FiH
MvOaNb7ZVZEoQImk8uLPgUMZk8qTj6lUKvkgIiIiIvIVBrgoaIl8WxqnGSki35C5uNhPIyLyLzmp
/Lp1Dnm3mFSe/IUTxImIiIjIlxjgoqAm5xPKznYsLC+Xl2gRhRuRh05lMDiUMak8ERERERGFAwa4
KOhpiorkWSr25KWKtbV+GhGR71kOHQLEYYdJ5YmIiIiIKFwwwEVBT16q+NJLjmVcqkhhROTdsqxd
61g4Zw40TzzhnwERERERERH5GANcFBLknROdZ6ro9TDv2+efARH5iJx3a/lyx7I77uCOieQ3TC5P
RERERP7AABeFDM2KFS5LFS3bt3OpIoU0c1ERVHV13ddyUvmtW/04Igp3TC5PRERERP7AABeFDJFI
W/3ss45lXKpIIcy8Y4c8U9FexO9+xx0TiYiIiIgo7DDARSFF5BwSy7MciKWKIhBAFELETqHW7dsd
ytQvvABVSoqfRkREREREROQ/DHBRyImQvuQ7E4EAkYibKBSIZbdip1AHc+ZA/cgj/hkQERERERGR
n0X4ewBE3iZmsKieecZldsu3y5bhxM9/rniPRqOBTqdDeno6IiMjfTFMogGRk8oXFsrLb7vL7rgD
w5hUngKMSDbPfFxERERE5CsMcFFIUj/+ODoOHoTq66+7y2Kl84e+/BKm+fMV7zEYDNDr9cjMzPTV
MIn6zbx5M1R2sxGZVJ4CEQNbRERERORrXKJIIUkk2dYozGgZ/sc/Ap9/DovF4nIkJyejoaHBD6Ml
8ozl0CFAHHaYVJ6IiIiIiIgBLgph6qlToXrySZfy6OJimBobYTKZXI7W1lYvPb0BBwoyUHCgQTo9
gIKMAhxg7IwGQeSQs6xd61DGpPJERERERESdGOCikKZesAAmp5xaEd98g+H79qGtrc3laG9v99NI
idyT824tX+5YyKTyRERERERE3RjgopAmlm59+PDDLuU3/dd/IfLcOd8MIj4XWyq3IDfeN4+j0GMu
Loaqrq77WiSVj2BSeSIiIiIiom4McFHIq50wAS333edSPmrbNoed6PpkrMaB4nzMzspARkYGcvKL
UFrd1lPfVo3dBbORJdetRmlNV7nTEsXaw8XIn50l9ZGF2d19VKFEum/VrlIU5efIdfNXHUZ19QEU
d1+XobbnYajp7icDWbMLsNs2lupdyMsrQVX30GpxoCAPJVV2Y6WgYd6xAygv775mUnkiIiIiIiJX
DHBRWPjub/4G5hEjHMqGXbmC2H//dw97qMau/L/B6j9psWh/JSrf3YxZhiNYv2A1yoyi3oiy1QtQ
mlSMw5WVKNu2BLO0Ct3UlqJohQn5+0+gsvIE9hdmoq3O2F1dVZuAJdvKUHn8VaQeWYHFr5uQt0W6
fldcF6G0ytbSiNrGNBTK/VRi/xJg64KtkKsn5mNLfg0KVpdB9FxTWoRdSauwJC2qn58a+Zvl1ClY
t293KGNSeSIiIiIiIlcMcFFYMN9yC5ofe8ylXHvsGIZXVvZ5f9uJUmz9UjrJnIvsRHFjCtLSpVfT
ERzRGwGjHkeOpCP/6XTIca2oOGjjFDoyGtEo/aqtbYCYT6WdmIv5OT1rF7Nys5Ao4lBRnf2nzcrG
RK3teSYYamyZ6uORNT+3s06SmDkL6aYa2KoTcwux1LgKRatWYWlZHrYsTQPDW8HFWlsL87JlDmVM
Kk9ERERERKSMAS4KeRqNRn69/pOfoPXuu13qR/3hD91LFW1tnRkbu/IfVazAjzPEEsUfY3VFV52x
DWgzwogkJPWVZ2viPGxZmYAjv/gpHhBLFAt2Qd/b7oom91VtNYdRsnQ+5otlij9ejQqH2kTkFhbA
eLACOYtykdjHsCjwdBQWOi6hZVJ5ClEqlcrh1d/9EBEREVFwYoCLQt6oUaNw/vx5+fzbRYtc6jUt
LdC9/rrcRrRVoo1L6DxJX4m3KivlZYG2Y4ucPV7s1NiIRqPi7XaikJRbhF2HT6Dy+H4UJpRi8RtV
fd3kyliG9fO3oi33VWx7S+rrnZXIdGhQiwPrdyPl6WyUrdoCpt8KLh1r10JlMHRfM6k8hZ/3sUGl
gkq1QTpzV+eunoiIiIjCEQNcFPLS0tLk15MnT+LEX/6CM/ff79JmZGUl4j79FJMmTVLsIyo9F0/f
Lp3od2HXCduUKyOqD6zCbhGfik9DTuoRlB7pTANvrK5ARY1CR1Wl2KKvlZcnIkoLbRQQGTmAN9XW
hkZTEtJSEuU+Gs5Uwf5xtQfWY0/SKiwtWIpVOWVYtbUKjHEFB8uhQ4A4ujCpPIUyEaSyWq3dr56Z
juXWCqwfdD9K4+k5iIiIiCi4MMBFIU/MyhI7DT700EP40Y9+hFtXrED7977n0i71rbdw840byp1E
paFg1x+xbl4S9EU/lvvLyMhF0UET4uRcW4nIK14H7euPISNrNooqgASldYEJCTDtLsDsrvu3tC3C
7kVp/X9T8TlY8k/A1sekfnLy8XoV0J3TvnqXNNYkFC4RebeikFawBfk1q7BVzxBXoLMaDDBv3OhQ
xqTyFMpswSjXoJQIYlml8uXS2WD68ZwIaonbbQeDXERERETBRWUdzL8GifykvLwc2dnZA75f7E5n
ee4514r0dM6WIb+wXr2Kjvx8qOrqustEUnnm3Qp9zc3NiI2N9fcwgoxYppiJQqxHRR9BsIHO6rIF
vIiIiIgoOHAGF4Ul9dSpUD35pGuFXg/zvn2+HxCFPXNxsUNwi0nlKXz1lmPLVieCW57pb3DLtkSR
wS0iIiKi4MIAF4Ut9YIFsI4d61Ju2b4d1tpaP4yIwpV5xw4xLbH7mknlKby55tjqZD9rS6neO7hE
kYiIiCg4McBFYUvkNdIoBBFU167Js2mIfEEsl7Vu3959zaTyRERERERE/ccAF4U1sVQRSrm8xFJF
MauGaAiJmYLmZcscyphUnsg/epuxpeJ0LiIiIqKAF+HvARD5m6aoCB2VlVBdv+5QLmbVWB98EKqU
FD+NjEJdR2GhPGPQRiSV588bkW0polCITBW6Esl3Ll2EVJfZHW+yr1fmaZJ552WJzMFFREREFFw4
g4vCnrxU8fnnFes61q3z8WgoXJg3bYLKYOgpYFJ5oi4ikGWVg1Kdh33wyrnOud5Vf5LM2/Jv2d8y
0F0YiYiIiMi3GOAiksiBBbFc0YkIQHCpInmb5dAhWPfu7SmQfvaYVJ4oMDG4RURERBQcGOAi6qJZ
sUJO8O1MXqpoP9OGaBDEz5J548ae67FjoVk/VPvBERERERERhQcGuIi6qBIToX72WcW6juXLYb16
1ccjolAjfobEsldb3i15x8SXX2ZSeSIiIiIiokFigIvIjuaJJ2C94w6XclVdHSw7d/phRBRKzMXF
Dnm3RO43JpUnIiIiIiIaPO6iSCHPZDLh1KlT+Pbbb2E2mxXbaDQa6HQ6pKenY9gLL8D89NMubUTO
JMuDD0KtkKuLqC/mffuA8vLua9WTTzKpPBERERERkZcwwEUhT6/Xy7tgTZ/e2z5bgMFgkNtmZmZC
9cwzcu4tZ+a1a6HatYtLyqhfLKdOwWqXd0skldf88pf+GxAREREREVGI4RJFCnkNDQ1ITk6GxWLp
9RBtRFtB/fjjcvJvZ1yqSP0l8m6Zly3ruWZSeSIiIiIiIq9jgItCXmtrq7xM0ZNDtBXEDC3Niy8q
9icvVTx2zLGw4QAKMgpwoGGo3w0Fm46CAiaVJyIiIiIiGmIMcFHIa29vR1tbm0eHaGsj59qaO1ex
T/OaNdxVkfpk3rSJSeWJ+iCWkNu/hjtvfR6q1SqHVwoP/H0nIqJwxgAXUS80BQXyrBtnYkaO2BGP
yB3LoUPybD8bJpUnGmrvY4NKJQeGVKoN0pU/nu3r5xIRERGRDZPME/VCXqr40kuw2OVQ6lZejoZj
xxA/Y4bvB0YBzWow4P9v727go6rvfI9/TyYG0ITwZAuxWraLYFdDlWQrYVeT3X0teG3Z+pJ2FXq7
QLX6sopuxV1JfEBXnnRltcBq7cIC3S5CL/SuRbrC67W9CfeuQUmi3Vi3BrTxoQFreIgJSkJmzj3/
M5lkMpyZTMhMJjP5vOl4zpz/45kIdX78/7/jf/ppdf/9OUnlAU8mGGXbdvdxYGZqmV3tdFqi8oTM
LsQEr7z6XK1qe5liP76kfxL1eZjVO/Zyu/sYfj0knuvhfXmN4VW/rzl59RFvP/2Zv9cKJq+yeD+H
WHMayH31d5591ff6uQMAMFwQ4AL6kHXttQqUXiVVvXZW2Yjlj8l+YZfYCIAQs3W1c+XKnrxbEycq
m6TygKdQEGfgwa1zEQpcxReoWl1dLZU49b/2NX3thRf0Qq9SE1yztWyAM0rU5xEKbkQGb7zeR7se
OvcSWedcgjixxu1rzHjnH14evnWvv/0k875C8+xPP9E+e6+fOwAAwwlbFIE4+O7+uk57fOEYdbpN
/oqKFMwIQ5V/3bruvFsklQcyQVfwqjsCdrN+4Ly3E7x6qy+pyFEWT+AlnmBKKgIukWMOdA6xVk4N
tJ/+IHgFAEB0BLiQ8Xw+34DrWgUX6oDf792otlb+n716LlNDhvHv2CHt2dP9nqTyQH+F5dG64Qbd
0J1T67v6bve5V56tUDuvrYReubnCtx2Wq+Sssv7k8orWfzzzjT9vV6JWdRmJ2MJm+ggP1oTeR77O
td/IV1+rmSKv91df/SQqsBQtaBj5eYVWlXndf7Q5AgAw3LFFERlv3LhxOnz4sKZMmRKznqlj6kbz
S+fLxe9Pm6GL36o7qyyw7f9qnAhkDGcm75b99NPd70kqD5yL8DxaZqXUMs10zy/RXznXL+neUlim
Sue8xFL3efj1niBX+DbE8DbLwsYJ36IYvX701VrRc3+FtjWq6xhtvn2PkTiJCm5FbpNLZgAo2tjx
XO+vVASOErVlEgCA4Y4AFzJeYWGh6uvrdfDgQQUCAc86ZuXWmDFjNH369Jh97f/GPfrmioVnXbdO
tesmX6PeTsiMkW7cvFt33klSeWDI6Qk+lfRrMVF5P+ufi8EYo7dEBUlSFWjJ9OBWvAh2AQDgjQAX
Mp5ZlVVcXKzOzs6Y9UyQKzc3N2ad5kumyrr1VtkbN55VNjWrVWd+tkP69k0Dmi/Sj8nDRlJ5YCg6
e0VWfE9YTPwTElMzRo90D4pkYnArEePGlQw/IU8pBQBg6LNs/h8PaaiqqkqlpaUpG//MX/2VrEOH
PMt8W7eSd2kY8X//+7K3b3fP3aTyzzzDzx/90tLSovz8/FRPY4gJz5EVcofz61nnV4jX1sJwofJo
ZZEBr2j1Y9X1GrunviK2KJbHHCN2sGugQYpYSdIjcz95tYnnejxjn2s/0eafqPvqK4l8tDxY8faf
qH7OJdk9AS4AwHBBgAtpKdUBrkBdnQJ33ulZZk+dqvO2bh3kGSEVAvv3K3D//d3vsx58kLxb6DcC
XPEKX401uE8wBNIVwS0AwHDCUxSBc5A1Y4abRNyL1dAg/6ZNgzwjDDaTVN7/2GPd70kqDyRT5FMP
43vyIDDcEdwCAAwnBLiAc5S1eLGbb8mLydFlAiDITG5S+ZUru/NukVQeSDaTLN52v6wHX6zgAgAA
QG8EuIBzZI0eLd/3vhe13ARATCAEmce/bp27Us8wQU4fSeUBAAAAIKUIcAEDkHXttVKUXGAmABLY
vHmQZ4Rk8+/YIe3Z4567SeUff9wNdgIAAAAAUocAFzBAvooKN9DhxTxdzySkR2Yw207tp5/ufm9W
8PHERAAAAABIPQJcwAD1tVXRv2IFWxUzgJt3a9my7vcklQcAAACAoYMAF5AAbqBjxgzPMuvIEbYq
ZgB/RYX7s3SRVB4AAAAAhhQCXECC+B54IPZWxf37B3lGSBT/pk1Sba17bl96KUnlAQAAAGCIIcAF
JIhVUKCs+fOjlvsfe4ytimnIBCbtjRvdczep/IMPklQeSCDLsnod03Fs61Gr1zHVhtp8AAAABkN2
qicAJFtHR4fq6up0/Phx+f1+zzo+n09jx45VUVGRcnJyznks3y236ExVlaxDh84qs9ra5F+1Stlr
1pxz/xhcdlOTG5gMfUX0PfwwSeUBxCWe4JK93I67bnh9AAAAnM2yHameBNBfVVVVKi0tjatudXW1
+7fzU/sITDSYJ+Q5vx1KSkoGNDfzpD3/woVRy7Mef1xZ1147oDGQfG5S+SVLZDk/T8O69VY3gAkk
WktLi/Lz81M9jZQwfzabP3dDx3Qc2wSnTOApdOyrXn/67KtOSHjdeOcDAACQadiiiIzX3NysKVOm
KBAIxHyZOqbuQJkVPuYJe9GwVTE9+Net6w5uqbSU4BaQBKHAUir+ri1RY4eCSIMZTAoFr0Ivr2AX
wS0AADDcEOBCxjt9+rS7TTGel6kbVVOlVi0qU3FxsZbsjh0Iy1q8WPbEiZ5l7lbFiooB3BGSLbBn
j2Re6koqz88LGFZSkQ+sPwheAQAAnI0AFzLemTNn1N7eHtfL1PXWqsoN9+nI3G2qqanR+rkTYo5p
kpD7HnooeoXaWvl37Ai7UK+1xcVaW9/v20OCmS2mgRUrgucklQcG2QGtsSw3wNTzWuNc9So31/uq
79Wmb6lYUWZWYYVeke+j5egKlRHwAgAAIMk8EKdG1VdKk+cXxN0ia8YMBb76VenFFz3LAxs3Kuua
a9ynL2JocPNuLVtGUnkgZWZqmV0tWSUq12pV22WqdM5LnN+UofPe1+/QHU6r1dVOG5M/sesYrL/M
6c0Et7z6MmXJ5RWUirwWHpgKTzgfGbCKFuCK1QYAAGC4IcAF9Mmsrlqs583p4mLnWKLlLz2pwtq1
euQfXtQbxzqUM75Ed617UgumjQg2aW/U7rWP6Ac/rdePzxuhPOvsLx5mq+Lbf7NcU/71n1S/Nrx/
5/vZ8pf6XCWGxDNbR60jR9xzk1SehwEAQ0lP8Kuk3zsIy8+hzcB4BakIQgEAACQPWxSBPhVqac1m
zXfO5m+uUU3Nes2d0KqmY4Uq3/myu2Vx513ShsUbFNxh2KrKRxdoy4gl2l5bq/yVfxu158nvvKG6
H+5Q4dLw/vveAonE82/a5G4ddZFUHhiCwldjVTv/7A/Txna3HtqDsHor2aKt6IrZZojnFQMAABgo
AlzAOZmgWQvmalpe8F1ByWwVdTSq0eSeb63Vvn1FWrSwSKY4689ukGbMiNrT9M1Py254b1BmDW+B
ujrZGze65ySVB1IpFMQyylXZnTDLrMCqVJkb2DLnoTrPOr+k6H+CBld9BdvEn4crVcGgeFd5hZ6c
SA4uAACAHmxRRMbz+XxJqdveuFcb1m9V7RuNajjW4Vwp0Wy3oFWtmqzJYYuwfA88oM5vLZD1Sbtn
X50rfxT3uEgsu6lJ/vvvd/NukVQeSDUTkLK1LPxSxPuZkeVh9bzqe/bZh1Qkme+v/gS1TMAuHe4J
AABgIAhwIeONGzdOhw8f1pQpU2LWM3VM3bi0Vmr1gg3KWfWcnltVoLzW3Vpy3b6uwhyZpPRmNVdh
V5DLJJLP+uafyP6nlzy7sxre05edLyCvxjc6EqizvNzNh2aQVB5AIsR66mGk0GqseNuey2otglsA
AGA4IMCFjFdYWKj6+nodPHhQgUDAs45ZuTVmzBhNnz49vk7b23WsY7JmTy1Q3gipubpejaGyCbM0
b/ajWr+1VmVLi5TX3qi9uxpV9O17pf/17xpz0vvLS0l2tv7fgf90JvxH/b5HnJvOFStkNTS45ySV
B5Ao/Q1CscUQAABg4AhwIeOZVVnFxcXq7OyMWc8EuXJzc+PrdEKZ7rr3Rd399WI9mnOFbpw3VXnd
hXkqW75ZTRUVmlv8rtpyr9DsJeUqc67n/P0a+b9THrXbb2y+V2U/yFLRqt1aO4dE88kU2LNHMi+D
pPIAAAAAkNYsm3XrSENVVVUqLS1N9TTOiXlaXyihuRfr5pvlu+eeQZzR8GM3NKjzzjvdrYkmqXz2
hg3k3ULKtLS0KD8/P9XTAAAAANIaT1EEBplZKWRPnBi13N6+3X2qH5LD/vhjdS5bFgxukVQeAAAA
ADICAS4gBXwPPRSz3L9ihRuIQeL5V62SdeSIe05SeQAAAADIDAS4gBTImjHD3YoYjQnABDZvHsQZ
DQ9me6iqqtxzksoDAAAAQOYgwAWkSNbixX1vVdy/fxBnlNnMts/u3GcklQcAAACAjEKAC0gRk/fJ
973vxazjf+wxtiomgN3UJP/99wfPL71UvoqKFM8IQIhlWb2OmSZR92c9avU6DpZUjQsAANBfBLiA
FHK3yMV4GqRJhG5yRmFgOsvLSSoPIMkOaI1luYEsy1rjvEsNE4iKFYwiUAUAADIVAS4gxcxqIhN4
iaqqiq2KA9C5YoWshgb3nKTywNBigkG2bXcf09tMLbOrtTrsSqLuzwSl7OV29zGWvspjjTGQcQEA
AFKNABeQYmY1UdZ3vhOzDlsVz01gzx7JvERSeWAoCgV90j+45S1R9xcKLiUiyOTVR7RVXYkcFwAA
INkIcAFDgO+mm6QZM6KWs1Wx/+yGBvmffjr4hqTyAIaYoZRzjAAWAADIBAS4gCHC98ADfW5V9O/Y
MXgTSmNmtVvnypXBvFsklQfSSHgeK698Vl55rmK18Sr7rr7rHNccCJaFjt5tzLWe9z11o82rROVx
3mmiVq2Fcm5F5t7yysXVV34uAACAdJad6gkAydbR0aG6ujodP35cfr/fs47P59PYsWNVVFSknJyc
QZ5hkFVQoKz582Vv3Bi1TsApy7rmGrcuojOr3UzeLTep/Jo1JJUH0kYwj5XcQNFqVdtlqnTOSyx1
n3tdDzLXlzk9eAkvM8GoZ6OMb8oixzDn1VptrpeUeIxzdpt4g1wDFZ4bKzJPltf1UD4tAACATESA
CxmvtrbW/dv2mTO9v/aENDQ0uHVL3C8wqWG20Z2pqpJ16JBneWirYvaGDYM8s/ThrnJzPkPD98QT
BAOBjNET/Cqxol03oaXwAJR3mbm2JhSI6hW0OqDKmHOIFUQbfOEBK7YZAgCA4Y4tish4zc3NmjJl
igKBQMyXqWPqplr2gw/GrlBby1bFKAJ1dbK78m5Zf/3XyoqR1wxAuglfKdX7aYXBQJYt271erpJe
2wejl62ujuwnvYRWZw12cGso5Q8DAAAIYQUXMt7p06fdbYrx1k2Z5t1act0+zX5pva6/+WbZ27dH
rXrqqfWqm3yVyq6eOogTHNpM3i3//ffL/dp1/fXBxP0A0lh510qtnlVTM89awWXqvKc79Ky8Nx0e
6FmpFZfIVWKR2w7Lu7ZFhq/i8lpZ5lWvNxMkSsTTFcO3HIa/99q+6FUWeu91HQAAIJ1YdqY+mxsZ
raqqSqWlpXHV3bZtW9zbDqurq7VgwYKBTC1O9VpbvFjaXKOlhV2XwgJcX835WJ0LF8o6ejRqDye/
MFUT/nXrIMw1PZwxn5fJu3Xppe4WTvJuIV20tLQoPz8/1dMYQsJXag2d7YBDkVegKtkBqkQE5gAA
AJKBLYrAUDFhrtbXrNfcCXKDM76HHopZfcw7DfJv2jRIkxva/N//PknlgYwQvuIqcqshIoVWZYVe
g7H6iuAWAAAYqghwAXFq2rtKi+bMUnHxLM1ZVKFdb7UruBKrWI9s261Vi8rcsgWPVKrJbdGuxu42
xZo1Z4m2uW2cVmsX63nn+PziYrdsye7m4Aqu4iXa3Rxs+95HL6m2j03E5omLdkNDMm97yAvs2dO9
nZOk8kC6C+XLCr1YwdWXUA4uthYCAIDhjgAXEI+mXap4oEOLdr6smpqXtbO8RFxJhgMAABWZSURB
VO1HWruLG48UaNFzlU7ZTs07dp8qdpkQV6uajhWq3G1To513SRsWb1C9U1K4dLPmO8f5m2vcsvVm
2VYvwbZjt+91VyXF0rlyZaLvNm2Y4J6fpPIAAAAAMOwR4ALi0dqqY86vpqZmmTVYedPmakFZT1Cq
cHaRCkaYswLNnjdbb1TWq1kTNGvBXE3LC9YpKJmtoo5GNcb1oMZg26kXjZbv4Ydj1jRb88wWveHG
JJU3wT2rrY2k8gAAAAAwzBHgQsbz+XwDrzttvtYvn6R9d/+F/shsUVyyRbVRAlV548c7/ww+tbG9
ca/WLl2gBWab4nWPqrof8w61/Z8rl6kmEIhZ12zRC9TV9aP39Odftao7qbzvnntSPR0AAAAAQAoR
4ELGGzdunA4fPtxnPVPH1PU2QpPnVmjL3pdV8587VT5pl27fWu9Zs7mxUcrL04jWSq1esEHtc5/U
cz9z2r20XPE9y9ER0fbqTXfpEzv2b1f/ihXuqqbhwL9jh3mUJknlAQAAAACuPlJYA+mvsLBQ9fX1
OnjwoAJRVkKZlVtjxozR9OnTvTup36X1HSW6rahAI0bkKW+ElJPTU9x6zOTjynNOarV1S61uXPqk
8tordaxjsmZPLXDrN1fXq7G7xSRNLZH2NTY5E/RIit7e3rtt8/va6b9It2a/H/U+rSNHFNi8OeNX
M5m8W3ZX3i2SygMAAAAADAJcyHhmVZZ5UmFnZ2fMeibIlZub6104aZI6Vi/RnNvfVZtydcWNS7Xt
rkJJwVVcjc9XaE5FtY7lXKEbl27T0lkmIVeZ7rr3Rd399WI9aq7Pm6q87g4naPZtd2nXkr9Q8aM5
Kl35M60tChtvwtlt37A/q2/83kjl/+ZQ1Htwtypec03GJlt3827deacskVQeAAAAANDDss1zuIE0
U1VVpdLS0lRPQybAtbZ4sbS5RksLkz+a+9TAhQtj18nNVfauXd3b9kxursDGjcp+5pnkTzDJOu+6
S6qtdZPKZz/0UKqnAyRES0uL8vPzUz2NlLEsS+Y/RULH4WK43jcAAECykIMLSCPW1Kmybr01dp22
NjcBuwlsdX73uwrceaf02muy33prkGaZHO6TImtrSSoPIMkOaI1lybLWOGcAAABIF2xRBAakUEtr
agZ1RN8tt+jMiy/KOno0eqWqKgWcVzi7rc3d2peOAvv3u9svSSoPZJbhuoopkfftdKHwLiyPP+gj
h4jVJlZfoTKv+rHGTUT9eOcfTz+x+g+VJaN+X/cFAAAGhhVcQBryncv2vFgBsSHM3Zb52GPuOUnl
gcwSCu4MreDWTC1z5mPby5yz5EjUfXsFiYL99n7FahMKFoVekUGYyD7irR8eZEpU/Wj33J95xuo/
vCzR9fu6LwAAMHAEuIA0ZJKrWzff3K829ocfJmk2yeMmlV+50t12SVJ5AMOB1Y/Ix2DFBSNXTA1V
A5lnZNu++ulvfQAAkHwEuIA0lbV4sbtlL26trcmbTJL4162T1dDgJpX33XRTqqcDIGVCebEsrTnQ
c96TJyv2tbPbhL+Pdj0yB1df40Zr1z+JWM1mgi+hV+T1yO5Dq4lCr76Gj1Xfa1yvVVV91Y/Vf7wf
Tzz35RVL9PrcYulvfQAAkDzk4ALSlMlD5Xv4YQXuvz+u+vahQ0meUWL5d+yQ9uxxk8pnk1QeGObM
tsFq5w++krBrq1XtbiM0QaYSlbvvy1TpnJdYcstCbcpLSsLqGwdU2auPsJFCbXqNH8cYHmXJ2uLY
F6+gUKwgT19BqHjf96ddvPPsa/79nWf49sBoWw6jzTfWmOmyyg0AgExGgAtIU+YpiYHt21M9jaQw
ebfsp58mqTyAfih3A0veIgNZPQGzEqvcozx99RUECj9PZECmP8GnvurH6idWn/GK1q6//RHQAgBg
aCHABaQZN7C1caP02mv9a1hbm5wJJZibd+vOO90nPpJUHkCPYFCqZyVVZECqv0GqYDL5ZV2rs1K9
6ipRogV+znWr30DH7e/1aBI1f1ZdAQCQuQhwAWnIPnJEmZryw19RQVJ5AP0QuRrL6NkuGLxSHhHA
Cm05jBR+PbxN+Bih/sO3RwbrVx6o7uoncrz4mTxe8ebhinxCn+H1pMJYbfqqHyla/Vj9ROaoijVu
f+c/kHlGJonvz3wSdR0AACSOZQ+tZ3MDcamqqlJpaWmqp5FSgT175H/qKVmnTsXdxrdli6xp05I4
q4Hxb9ok26xOu/56ZT/0UKqnAwyKlpYW5efnp3oaAAAAQFpjBRcyXkdHh+rq6nT8+HH5/X7POj6f
T2PHjlVRUZFycnIGeYbnJusrX5F1zTUK/OQnsjdtiquNbVZGJXle5yqwf78b3CKpPDCcRVtZZaRT
nqxMuQ8AAID0wQoupKX+rOCqrq52t3xMnTo1Zr0Gk9jc+e1QUlISs95QZLYs+s3Kp5//PGa9rAcf
dANjQ43d1KTOhQvdPRvZP/oRebcwrLCCCwAAABi4rFRPAEi25uZmTZkyRYFAIObL1DF105E1aZK7
pS/rH/9RuuqqqPXsDz8cxFnFx00qX17u5t3KfuYZglsAAAAAgH4jwIWMd/r0aXebYjwvU3dQNO/W
kuIl2t0ccR5VvdYWF2ttfexuTVJ2EyQyK7XsiRPPrtDa2u8+k82/bp2shgZ3zlYfq+wAAAAAAPBC
Di5kvDNnzqi9vT3uupnAbEM0L7NtMbB9e3cievvQoRTPrDeTKF/mdf31Q3LrJAAAAAAgPbCCC8hg
vltvVfZPf+oGkIYau6FBgRUrgknleWIiAAAAAGAACHABcWrau0qL5sxScfEszVlUoV1vmVVhwW1+
j2zbrVWLytyyBY9UqinUqL1Ru1ctUplTp7hskVZVNsUYwbtNxa63FFp/1t6w1xlnjmaZOVTsVVOM
dqGxrNGjlf2339L/+bMv6PWDB8/qs6e9cy/z5mltfXyr3QbCzbu1bJnsCy5Q9oYNSR8PAAAAAJDZ
CHAB8WjapYoHOrRo58uqqXlZO8tL1H6kJ59V45ECLXqu0inbqXnH7lPFLhNcatfLaxdoy4gl2l1T
o5pt83SkokK7Ysa4WlX5aFibvav0VR1RaKTat/Kccfbq5ZrNWtj4gDZUhkpijRXs8wdj79W0V145
q8+uG9Tu+1arfelzWlo4ImEfWzR+Z27WkSPBpPKjRyd9PAAAAABAZiPABcSjtVXHnF9NTc3uyqe8
aXO1oGxCd3Hh7CIVuHGhAs2eN1tvVNarubVaL/60TEtuK1KeWzRXi+a9ocraGNnkW2u1b1+RFi3s
ajOiQLPmlSk00qy5s7rGmabCIjOtrtVWscbqo091NGnv0sXaN/tJVcyaoGTzb9ok1daSVB7IQJZl
uS8AAABgsJFkHhnP5/MNvO60+Vq/vEmP3P0X+odj0viS27Rq+SIVecSD8saPd/7ZIbV3qFX7dN+f
7OtVXrI8xgTaW502kzW5v3Emt12Usfro8+VV92lXR6nWryro56D9F9i/X/bGjSSVBzKUbdsEuAAA
AJASBLiQ8caNG6fDhw9rypQpMeuZOqautxGaPLdCW5yX2ptUufZ23b61SDVLz67Z3Ngo5RU5Lczq
qhu17j8rNCty11/URVw5zqtRjU55Yb+CXDkxxordZ8GiJ7Vl8vO6/b7denL9XCUrzGU3Ncn/2GPS
pZfqPJLKAwAAAAASiC2KyHiFhYXu8eDBg3rllVc8XzU1NW6d6dOne3dSv0vra5uCidlH5ClvhJST
01Pceqwro1VrrbZuqdWNXy1R3oRZmjf7Ra1d+3JXPKtdTfXbtGVvjC2KbptabdlaG8yR1d6ovdsq
o8fDerWLMlYffU6eXKC8wqV6cvY+LV4akbg+Qdyk8uXlZnkHSeUBAAAAAAnHCi5kPLMqq7i4WJ2d
nTHrme2Jubm53oWTJqlj9RLNuf1dtSlXV9y4VNvuMoGzere48fkKzamo1rGcK3Tj0m1a6i6jGqGy
5dvUuvYRfXPW3TrWkavPl87VkiV5MWaR57TZrKaKCs0tdsbKvUKzl5SrzGx5jCkvxlgj4uqzYO6T
erJhgZasLdC2pYVKZKp5/7p1shoa5Nu6laTyAAAAAICEs2yTMANIM1VVVSotLU31NGQCXGuLF0ub
a7S0MNVzGboCe/a4R/JuAWdraWlRfn5+qqeRUCYPF/95AQAAgMHECi4ASUdgCxg+CG4BAAAgFQhw
AQNSqKVd+bsAAAAAAEBqkGQeAAAklVnVBQAAACQTAS4AAAAAAACkNQJcAAAgIbxWapGTCwAAAIOB
HFwAACAhvAJZBLcAAAAwGFjBBQAAAAAAgLRGgAsAAAAAAABpjS2KyHhvfGCr/rc8wWsoKrzI1hWf
42cDAAAAABgYAlzIaCa4te2A5LNa9erbLTra0q7TZwKpntawN3nCKF172VjVv3++FswkyAUAAAAA
GBgCXMho//WBlDXylJ5oeEMXTRyrMVNGaUwWO3NT7dDHbao8/IEevvxL+uX7IwhwAQAAAAAGhAAX
Mt6rR1p18YTxanP+dW86dkZ+94leJqDCMVXH8SNHqGBcvva//7EmX35h3z9EAAAAAABiIMCFjGYe
T/9eS4dOjs9SS7tftvPLcn7ZCnBM4bH5kzMal5Ojo20d7s8IAAAAAICBIMCFjGcCKC2f2mHBLY5D
4WgCjuM6CW4BmciygtuOCWADAABgsBDgQkZzv1yZ//kD5huX857jUDn6zRfggM0XYCBD8XsbAAAA
g4kAFzKf8x3Lsi33y5a7gojjkDkCAAAAAJAIBLiQ+VjBNWSPIsYFAAAAAEgAAlwYHmwTTOl6ih/H
oXMkwAUAAAAASAACXMh8XSu4rK6VQ17HwIcHZLV1bZ+zQscvyP7CBGXFaJecY4cCh1+X9fmrnd+h
A+ins1mB4x8599Um25cra/TnZI/NS8H9xDoS4QIyTSjBPAAAADCYCHAh85lgVdcKLktexzH6xd8t
VNmoyIbt2vrEb3RL1HbJOl6sN3/wJemX/60r9p5jP2da9Z3rpmv55fmaODJ4NydPHNPWHW/q3o8n
DPL9xDjafBEGMk3oLwoAAACAwUSAC5nPrOAKBNygii2vY9DJ3xzV+B3Hu67bPcczzQp8JFkFFzq1
TP0OBX73jqyxX5TO63p/4gNZJ47Jzh4v68LPSaNyutp/Kp1okn3iI1nZF8oeW6CsPEuBd16XdfHV
Xe2d960HnHLn/aiA1HrcGWecdOpVBQ47408KXo89Tvj9dOjP/3yanirK1euv/VZf2fuxTlwyVqvn
XKh7brlc2vCh7m135vXOf8m++A+VdV6wnVoPOv0670f19OM9Xkdw/pOulN3qfA5tI2RPcq63jpY+
k9c9D51w+s+e5tzvyCifOyu4AAAAAACJQYALmc88RTEQEbTqdezhVe+SOV/Wm1d1avvWN3Tr7/IV
8J2nX6y8QRMPva8rXvxEgc+M0i9uv15lY7NkAmCNv/pv/elOS++e5/T8mfP1H7f/j+6yo+99qAU/
ztEzP7xSev1NXfHz4Dib71mkr506qgnPn9Cm703RZWYysxYqMEs6+a5z/V9PxByn9/2M0/Kr8nXy
7d/qj//94+D1xhNasD1bn79tgm76SouW7vys3vjhVc4c/luX/zzYbuM9C3WDM4fxzweDfNHHu1hv
OvMf+etmnZ58pS4b6dfrR/268vyTWvzUMf3InY/047+5WTe0/04XbG2O8rnbYo0HAAAAACARslI9
ASDpQk9RDEQ/ulGu9vcUOPyK7Ldf7To2K+CUv7vvfZX/dqQW/eUl+lbzR1p10xc181SL7v3ZKae9
9NMbpmmmv1Xz17+pGf/xqcZcfpm2XW36HaE93wiWLf7hr/SFf/mdDmRdoC8FPOYV9v7bPzimXztv
f/3am/I99iuN/5fjfYwTcT9XjtFl53Xq12+39L5+4neqOuLXxPxc531XWM8OK3ff213vY49nTLxo
lPbuaZBvxVsq+kmbXh89Xrf/4afB9lMnqGxChyprPor5udsBVnABAAAAAAaOFVzIfHE91U8ac9mX
FfjnL4c1bNfWv3tb37Y7tO6FZn3ttgI9VTFOIy/4VOU/PKK9JjhzeYFmTvhUlc/+b+2oc5rUvamX
vvR1XTd1vHRqhK7M79SBvR/oR0fNWqVjmvcbs/3ws7o9NC+7Z/xghMvqebJgeHmscV491vt+fOZ4
Wo0Hzr7Po2f8Uq5PV4fGNP0HuspdXe9jjhes2XioUff+ygrO++RR7fhgjFZfcaEuqflIZX8wWhNP
fKonftlVHu1zJ08PkLF4kAQAAAAGEwEuZD7z/SoQCAZTbK9jsNrJd45o/NZjXdft3sfjv9Wf7jtP
n3xtvBqra/T94yODSZTPtzRSo3TdHYsUuKNnyJOtTrsLspyyT5368hzP5Q9dD3/vUR5rnEBE/2fM
wszzNPkq51ATPm6HPpvllHVaeiW0Yss0DnSVu59VV399jXfW/AN6ouaU7rlhrFaP+1STLx2p13/5
nqr8sT5352jx5RfIRAS2AAAAMNgIcCHzme9ZdpQVRApfMRW9nj1qhH4xe6yOftShycVT9c91h3XL
hznSGfNbqE3/tq5e85rzgvU7P5LdeaGsPx4tN9B0ZYtUl+/0c1p2W4es3IuC43Wedq6NdPpo6dkm
6Y7ftXM40FVu5hFrnJER8331lH49J0+XTe6QXZ0jKzt43c7OU9nnsnW0sc2pm9s1hw5nHOc+Olsl
f9fnEOhrvM92fV5278+rrllVpb+nspsmaaI+UfnPOqJ83mFHX6J/2AAAAACA4YgcXMh88eTgMjre
U+CdV2T/5mDXMZiDSx1tuvvGaZrZ1qI7nv5AO07m6uZ54zS7w2n/ynEdaM3Vdd+crNvktPu4SXfP
Ldabt4yVXj3hlOVo5syL9a3OV3TJ+aP183sv092BNjW2SpMnXqDC9xr1l3Mu13UTuqbqzue0jn4q
Tczt1MXvvC77kz7GOet+mvVo/WmNKSzUy3NOabpzPxePaNW2235PMzvb9PgLJjdXa9ccztf099/T
N2b/QXAOoRxcfYzX/dH2GveUljW0aeKFeTr6m2N6Ilbure7cZ6zyAAAAAAAMHCu4MAzYsuxgLhj3
6X0eR7OgaMwXr5b946vD2p3W1orDemTul7TmCwFt//EH2uf0s3fzUX1+ySV6dv67+v0dLbp+5yj9
4obP6Nm/W6xnTatPT6vy1XbZgTZ9Zef5qr35Im1Z9W0Fn6J4XI8HTuqXdeN0Zellen3LZTr50Um9
3iZdaYXm2awn3hynnxZdrUZnPkcbfquLtpyIMc7Z97Nv57tafOZiPfXlL+u10mBesdMfHtcdG5v0
3HFT72M9XtfmzuG1zWFzyLK6+ot1X6Oifq7vHvpER6/O0gv/1uI5r7M+d5scXAAAAACAgfv/lWxy
VJVlWywAAAAASUVORK5CYIINCg==

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://blog.51cto.com/qr/qr-url?url=http%3A%2F%2Fblog.51cto.com%2Fsimplelife%2F1864287

iVBORw0KGgoAAAANSUhEUgAAAIwAAACMAQMAAACUDtN9AAAABlBMVEX///8AAABVwtN+AAAA9UlE
QVRIieWVUQ6EQAhDuQH3v2Vv0KUwa9xf6pdLjI5vDIIFjPgHS5KRmQj20kIhoPvMvnNQrXWOor00
kQ4Aj6BAAHwAiYKJ/P0SK1Qa5LGbQivUVmEe1xYqn0klPWaiqrbKWFv5TXuLcgThLdQ1UpByHpTC
FqqzGqGutXPUWKPyX4mHWrQrxUBTsxWmuuE8tEUxjRB6B0/aa9SRNr2qbotKCFClQll6KLo51VBV
xOGhmbJg1zE8VO6bQ5HSQo0xszvpoR5D5JQcw0MdLbrV84yONdL818dDtsI2khadMn2kgosR10JD
J3GY6PxONIZwtdUOvd8+gwDDd8JP7xYAAAAASUVORK5CYII=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://i2.51cto.com/images/blog/201808/03/a940c66317ecbe58436a2ad3831c2d7d.png

iVBORw0KGgoAAAANSUhEUgAAAsYAAAGACAIAAAAh4zMOAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAA4ZpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMDY3IDc5LjE1
Nzc0NywgMjAxNS8wMy8zMC0yMzo0MDo0MiAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEu
MC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVz
b3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1N
Ok9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo0NjRkMTE2ZS1iN2U1LTUwNDAtYjMwNS03M2Ew
NmM0ZGQzMGQiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6RkU5NTVBN0E4RDIyMTFFODhENUVC
MEYyMDAxRjc2MkYiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6RkU5NTVBNzk4RDIyMTFFODhE
NUVCMEYyMDAxRjc2MkYiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTUg
KE1hY2ludG9zaCkiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlp
ZDowZTg3YzU1OC0yMWVjLTQ5YzEtOGJmMS0yNDVjMDU2NjM5ZTMiIHN0UmVmOmRvY3VtZW50SUQ9
ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDo2Nzk2NjExZC00ODM3LTExZTgtOTFlOC1iNDNmYzcxMjMx
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
RK5CYII=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://i2.51cto.com/images/blog/201804/27/92f96bca4a81e7c15a63e696e2a8d8e5.jpg

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABaAAD/4QONaHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzA2NyA3OS4xNTc3NDcsIDIwMTUvMDMvMzAtMjM6
NDA6NDIgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0i
aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9
InhtcC5kaWQ6NDY0ZDExNmUtYjdlNS01MDQwLWIzMDUtNzNhMDZjNGRkMzBkIiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOkY1NjIzNzMxNDgzNzExRThBRUE1RTQxOEY5MUY4QzU0IiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOkY1NjIzNzMwNDgzNzExRThBRUE1RTQxOEY5MUY4QzU0IiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAyMDE1IChXaW5kb3dzKSI+IDx4bXBNTTpE
ZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjhiYTQ0Nzk0LTNjODYtZWE0NC04
NzRjLTI5Y2JiNzA1Njk0MiIgc3RSZWY6ZG9jdW1lbnRJRD0iYWRvYmU6ZG9jaWQ6cGhvdG9zaG9w
OjY3OTY2MTFkLTQ4MzctMTFlOC05MWU4LWI0M2ZjNzEyMzE4MyIvPiA8L3JkZjpEZXNjcmlwdGlv
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
r7sMyzOK3JpZJKKc08ki7jMqgki97ajT+fLGa3PczzFiarMauoJ/jJmI434X79caqKjsgNi+pP1e
NlOlfp5ybIuk3N4ciyhh2sOWvUKkubThhu0gYNePe1ueJ3Sq2Y+rsp8rBnHQh6ds1sflNNTUXSDk
MSQTVGSxAJQ0IQ9nRyoo3WOoZVJBjGvB91tUeqt1SNv+njaHZ7aDJNl6nNdiKXaGnoM3zKlrYYGp
1V4nnAvIsgKxSBrqDxFtcbk9dr5Mrs6DIa7oR2TzXP8APqytqJc7mrc6EjspAZXZqiQXZnLEkEkk
m+MJNKatiPvHXLemi+TGr2nikqaZci2fvGr9mzfvqitrY21tf24+dfJ1t0A9NvVrzfoxXZmipc7e
PtdpsrzN1lqK0g+pWRykAlFNt21uybTmGfxXSJsj1zulboKm6Ktouj7IKfZiSko6MtlojNZuU0kT
x2dqvcuTClzu8N7QaY1tofk9On/Z6okmy3o0z96ho3hMq53RUwZGBV1O5OTuspIIvqCb8dMkly02
B8R6cqfLdgOljarZzY/amDaPZrLq54aHNqOFYhPGLEagAMVJKl19VipZdCuOuXygmSwP8ntmRpaG
I1LUuTWMcQDm9RT31GvC+OT/AEz9CfSR1d5sqh212Mg2PfNVlai3pIKl5RHuiQhkd7W31GtuOnPH
YLrN7J1nWQ+T5qqXYCaHPZ6/JcvzGiEDH99JA8UrxppffKxuoQ2O8N02w5/6WI5qfJnU9RD13+jb
tUpKcf1SvGhXfP8AU2q7tf8AQcfT/lj1DdZ/ZjWYk7H0oCxgbo/ftbrc6XxT/JP9De1O0nWUyvbS
Okjptndk4Kh62odfWeSemmgiiBH2j2hfX7KHvFy/licwy/NutHk0ME4q58v2WpaaqiilAEEpqaqQ
I/c25LG1u5178S/jM5aqjRZljMpHZxKeP0j7xPu0wl3+yk3T2hUiyfVQftw0vHThiEjQD1SIxvMP
5Rx9T6vXVn2660Ga5xQ7C0FLXz5PCk9T6dWJDuiQkKRvaHVToMNmDTa01R0z+RgAHV62z4Bv3USb
wU3F/RKbHKTppIHTR0gDe3ic/r/Z++ZMdqPk2+rptv1auiLaTZ/bulpaXM67PXr4FpKlJlMRp4UB
JXgd6NtMeA67vRJ1dehbq17Q5RtHSx5XnWc1k2a5bU0irLnFZmjFm7UEkFowZCGDERqjECzbuMb1
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

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/css/header.css?v=1.0.5.1

.disabled {
	background: rgb(153, 153, 153);
}
.del {
	text-decoration: line-through;
}
.clear {
	width: 0px; height: 0px; overflow: hidden; clear: both;
}
.clearfix {
	clear: both;
}
.clearfix::after {
	clear: both; display: block; content: "";
}
.Left {
	float: left;
}
.fl {
	float: left;
}
.Right {
	float: right;
}
.fr {
	float: right;
}
.tl {
	text-align: left;
}
.tc {
	text-align: center;
}
.tr {
	text-align: right;
}
.fb {
	font-weight: 700;
}
.bluebg {
	background: rgb(0, 186, 242);
}
.blue {
	color: rgb(0, 186, 242);
}
.redbg {
	background: rgb(255, 74, 86);
}
.red {
	color: rgb(255, 74, 86);
}
.red:hover {
	color: rgb(149, 11, 17);
}
.blue {
	color: rgb(66, 133, 244);
}
.Page {
	margin: 0px auto; width: 1200px;
}
.Page.Max {
	width: 90%; min-width: 1000px;
}
.Page.M764 {
	width: 764px;
}
.white-open {
	background: rgb(255, 255, 255); left: 0px; top: 0px; width: 100%; =
height: 100%; display: none; position: fixed; z-index: 10; opacity: 0;
}
.blue-btn {
	background: rgb(66, 133, 244); border: 1px solid rgb(66, 133, 244); =
border-image: none; color: rgb(255, 255, 255); cursor: pointer;
}
.blue-btn:hover {
	background: rgb(52, 119, 230); border: 1px solid rgb(52, 119, 230); =
border-image: none; color: rgb(255, 255, 255);
}
.gray-btn {
	background: rgb(255, 255, 255); border: 1px solid rgb(204, 204, 204); =
border-image: none; color: rgb(51, 51, 51); cursor: pointer;
}
.gray-btn:hover {
	background: rgb(230, 230, 230);
}
.Header {
	background: rgb(255, 255, 255); height: 60px; border-bottom-color: =
rgb(221, 221, 221); border-bottom-width: 1px; border-bottom-style: =
solid; position: relative; z-index: 21; min-width: 1000px;
}
.Header .Logo {
	background: url("../images/logo2.0.1.png") no-repeat center; width: =
150px; height: 60px; float: left;
}
.Header .Logo a {
	height: 100%; text-indent: -9999px; overflow: hidden; display: block;
}
.Header .Navigates {
	list-style: none; display: inline-block;
}
.Header .Navigates li {
	height: 61px; position: relative;
}
.Header .Navigates li > a {
	height: 58px; line-height: 61px; display: block;
}
.Header .Navigates li > div {
	background: rgb(255, 255, 255); border-width: 0px 1px 1px; =
border-style: none solid solid; border-color: currentColor rgb(221, 221, =
221) rgb(221, 221, 221); padding: 10px; border-image: none; left: -30px; =
top: 61px; text-align: center; right: -15px; line-height: 28px; display: =
none; position: absolute;
}
.Header .Navigates li:hover > div {
	display: block;
}
.Header .Navigates li > div a {
	font-size: 12px; display: block; position: relative;
}
.Header .Navigates li > div a:hover {
	background: rgb(237, 237, 237); color: rgb(66, 133, 244);
}
.Header .Navigates li.maps > div {
	left: -15px; right: 0px; min-width: 70px;
}
.Header .Navigates li.more {
	background: url("../images/icon/38.png") no-repeat right; =
padding-right: 15px; position: relative;
}
.Header .Navigates li.more:hover {
	background-image: url("../images/icon/38s.png");
}
.Header .Navigates li i.arrow {
	background: url("../images/icon/03.png") no-repeat; left: 50%; top: =
-8px; width: 14px; height: 8px; margin-left: -7px; position: absolute;
}
.Header .Navigates.fl li {
	font-size: 16px; margin-left: 32px; float: left;
}
.Header .Navigates.fl li.cur > a {
	color: rgb(66, 133, 244);
}
.Header .Navigates.fl li:hover > a {
	color: rgb(66, 133, 244);
}
.Header .Navigates.fr li {
	font-size: 12px; margin-right: 26px; float: right;
}
.Header .Navigates.fr li.login {
	background: url("../images/top-line.png") no-repeat right; =
padding-right: 10px; margin-right: 10px;
}
.Header .Navigates.fr li.maps {
	margin-right: 0px;
}
.Header .Navigates.fr li > div {
	left: -10px; right: -10px;
}
.Header .Navigates.fr li > a {
	color: rgb(102, 102, 102);
}
.Header .Navigates.fr li > a.cur {
	color: rgb(66, 133, 244);
}
.Header .Navigates.fr li > a:hover {
	color: rgb(66, 133, 244);
}
.Header .Navigates.fr li.user {
	padding-left: 40px;
}
.Header .Navigates.fr li.user img {
	border-radius: 100%; left: 0px; top: 16px; width: 32px; height: 32px; =
position: absolute;
}
.Header .Navigates.fr li.user > div {
	left: -10px; right: 5px; min-width: 75px;
}
.Header .Navigates.fr li.user > a {
	overflow: hidden; font-size: 14px; white-space: nowrap; =
-ms-text-overflow: ellipsis; max-width: 60px;
}
.Header .Navigates.fr i.dot {
	background: rgb(255, 54, 0); border-radius: 5px; top: 18px; width: 5px; =
height: 5px; right: 8px; position: absolute;
}
.Header .Navigates.fr li > div a i.dot {
	top: 6px; right: 0px;
}
.Header .Navigates.fr li.write a {
	background: url("../images/icon/32.png") no-repeat left; padding-left: =
22px;
}
.Header .Navigates.fr li.write a:hover {
	background-image: url("../images/icon/32s.png");
}
.Header .Navigates.fr li.search a {
	background: url("../images/icon/33.png") no-repeat left; padding-left: =
20px; font-size: 14px;
}
.Header .Navigates.fr li.search a:hover {
	color: rgb(66, 133, 244); background-image: =
url("../images/icon/33s.png");
}
.Header .Navigates.fr li.mRead a {
	background: url("../images/icon/34.png") no-repeat left; padding-left: =
20px;
}
.Header .Navigates.fr li.mRead a:hover {
	background-image: url("../images/icon/34s.png");
}
.Header .Navigates.fr li.mRead div {
	left: 50%; width: 120px; right: 0px; color: rgb(153, 153, 153); =
line-height: 1; font-size: 12px; margin-left: -71px; box-sizing: =
content-box;
}
.Header .Navigates.fr li.mRead div img {
	width: 120px; margin-bottom: 10px; display: block;
}
.msg-follow-bg {
	position: relative; z-index: -1;
}
.msg-follow-max {
	background: rgb(241, 241, 241); padding: 0px 25px 0px 10px; top: 61px; =
width: auto; right: 0px; color: rgb(153, 153, 153); line-height: 30px; =
font-size: 12px; display: block; position: absolute; z-index: -1;
}
.msg-follow {
	background: rgb(241, 241, 241); padding: 0px 30px 0px 10px; top: 61px; =
width: auto; right: 10px; color: rgb(153, 153, 153); line-height: 30px; =
font-size: 12px; display: block; position: absolute;
}
.msg-follow a {
	color: rgb(66, 133, 244); font-size: 12px; display: inline-block;
}
.msg-follow-max a {
	color: rgb(66, 133, 244); font-size: 12px; display: inline-block;
}
.msg-follow span {
	background: url("../images/icon/cls_1.png") no-repeat; top: 9px; width: =
12px; height: 12px; right: 10px; position: absolute; cursor: pointer;
}
.msg-follow-max span {
	background: url("../images/icon/cls_1.png") no-repeat; top: 9px; width: =
12px; height: 12px; right: 10px; position: absolute; cursor: pointer;
}
.Content {
	padding-top: 20px; position: relative; z-index: 10;
}
.Footer {
	background: rgb(234, 234, 235); padding: 40px 0px; color: rgb(153, 153, =
153); overflow: hidden; font-size: 12px; margin-top: 20px;
}
.Footer dl {
	font-size: 14px; margin-right: 40px;
}
.Footer dl dt {
	color: rgb(51, 51, 51); font-size: 16px; margin-bottom: 10px;
}
.Footer dl td {
	height: 28px; padding-right: 35px;
}
.Footer dl td a {
	color: rgb(153, 153, 153);
}
.Footer dl td a:hover {
	color: rgb(66, 133, 244);
}
.Footer dl img {
	margin-right: 20px;
}
.Footer .links {
	overflow: hidden; margin-top: 20px; margin-bottom: 22px;
}
.Footer .links a {
	background: url("../images/footer_icon.png") no-repeat; width: 75px; =
text-align: center; color: rgb(153, 153, 153); padding-top: 35px; float: =
right;
}
.Footer .links a.move {
	background-position: -198px 0px;
}
.Footer .links a.qq {
	background-position: -122px 0px;
}
.Footer .links a.qqq {
	background-position: -52px 0px;
}
.Footer .links a.sina {
	background-position: 21px 0px;
}
.Footer .links a:hover {
	color: rgb(51, 51, 51);
}
.Footer .links a.move:hover {
	background-position: -198px -59px;
}
.Footer .links a.qq:hover {
	background-position: -122px -59px;
}
.Footer .links a.qqq:hover {
	background-position: -52px -59px;
}
.Footer .links a.sina:hover {
	background-position: 21px -59px;
}
.Footer .copy a {
	color: rgb(153, 153, 153);
}
.Footer .copy a:hover {
	color: rgb(51, 51, 51);
}
.pagination {
	margin: 30px auto; text-align: center; font-size: 12px;
}
.pagination li {
	line-height: 1; overflow: hidden; display: inline-block;
}
.pagination li {
=09
}
.pagination li.disabled {
	padding: 0px 5px; color: rgb(51, 51, 51); font-size: 14px; cursor: =
default;
}
.pagination li.disabled:hover {
	padding: 0px 5px; color: rgb(51, 51, 51); font-size: 14px; cursor: =
default;
}
.pagination li:last-child.last.disabled {
	color: rgb(153, 153, 153); font-size: 12px;
}
.pagination li a {
	padding: 0px 5px; width: 24px; text-align: center; color: rgb(153, 153, =
153); line-height: 1; display: block;
}
.pagination li.active a {
	color: rgb(51, 51, 51); font-size: 14px;
}
.pagination li a:hover {
	color: rgb(51, 51, 51); font-size: 14px;
}
.pagination li.prev a {
	width: 50px; text-align: center;
}
.pagination li.next a {
	width: 50px; text-align: center;
}
.pagination li.first_page a {
	width: 50px; text-align: center;
}
.pagination li.last_page a {
	width: 50px; text-align: center;
}
.pagination li.last a {
	width: 50px; text-align: center;
}
.pagination li.first a {
	width: 50px; text-align: center;
}
.pagination li.prev:hover a {
	font-size: 12px;
}
.pagination li.next:hover a {
	font-size: 12px;
}
.pagination li:last-child.last.noLink {
	background: none; border-color: transparent; margin: 0px;
}
.pulldown {
	background: rgb(255, 255, 255); border: 1px solid rgb(204, 204, 204); =
border-image: none; position: relative; z-index: 2;
}
.pulldown p {
	background: url("../images/icon/08.png") no-repeat right rgb(255, 255, =
255); padding: 0px 20px 0px 10px; border-radius: 2px; height: 34px; =
color: rgb(85, 85, 85); line-height: 34px; overflow: hidden; =
margin-right: 10px; white-space: nowrap; -ms-text-overflow: ellipsis;
}
.pulldown.on .pulldown-list {
	display: block;
}
.pulldown-list {
	background: rgb(255, 255, 255); padding: 3%; border-radius: 2px; =
border: 1px solid rgb(204, 204, 204); border-image: none; left: 0px; =
top: 33px; width: 94%; margin-left: -1px; display: none; position: =
absolute; cursor: pointer;
}
.pulldown-list li {
	padding: 0px 10px; height: 30px; color: rgb(51, 51, 51); line-height: =
30px; overflow: hidden; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.pulldown li:hover {
	background: rgb(224, 224, 224); color: rgb(30, 144, 255);
}
.pulldown.on p {
	background: url("../images/icon/08s.png") no-repeat right rgb(255, 255, =
255);
}
.noList {
	margin: 100px auto; text-align: center;
}
.noList p {
	color: rgb(153, 153, 153); line-height: 3; font-size: 16px;
}
.is-vip-img {
=09
}
.is-vip-bg {
	height: 100%; position: relative;
}
.is-vip-bg-6 {
	height: 100%; position: relative;
}
.is-vip-bg-2 {
	height: 100%; position: relative;
}
.is-vip-bg-3 {
	height: 100%; position: relative;
}
.is-vip-bg-4 {
	height: 100%; position: relative;
}
.is-vip-bg-5 {
	height: 100%; position: relative;
}
.is-vip-bg-7 {
	height: 100%; position: relative;
}
.is-vip-bg-6 i {
	right: 5px;
}
.vip-icon {
	right: -5px; bottom: 0px; display: inline-block; position: absolute;
}
.vip-icon-1 {
	background: url("../images/vip/vip.png") no-repeat left 0px; width: =
32px; height: 32px; right: 8px; bottom: 6px;
}
.vip-icon-2 {
	background: url("../images/vip/vip.png") no-repeat left -64px; width: =
22px; height: 22px;
}
.vip-icon-3 {
	background: url("../images/vip/vip.png") no-repeat left -108px; width: =
20px; height: 20px;
}
.vip-icon-4 {
	background: url("../images/vip/vip.png") no-repeat left -152px; width: =
18px; height: 18px;
}
.vip-icon-5 {
	background: url("../images/vip/vip.png") no-repeat left -152px; left: =
20px; width: 18px; height: 18px; bottom: 11px; position: absolute;
}
.vip-icon-1.on {
	background: url("../images/vip/vip.png") no-repeat right 0px;
}
.vip-icon-2.on {
	background: url("../images/vip/vip.png") no-repeat right -64px;
}
.vip-icon-3.on {
	background: url("../images/vip/vip.png") no-repeat right -108px;
}
.vip-icon-4.on {
	background: url("../images/vip/vip.png") no-repeat right -152px;
}
.vip-icon-5.on {
	background: url("../images/vip/vip.png") no-repeat right -152px;
}
.is-vip-bg-7 .vip-icon-4 {
	background: url("../images/vip/vip.png") no-repeat left bottom; width: =
28px; height: 28px; right: 0px; bottom: 0px; position: absolute;
}
.is-vip-bg-7 .vip-icon-4.on {
	background: url("../images/vip/vip.png") no-repeat right bottom;
}
.is-vip-bg-3 i {
	right: 12px; bottom: 0px;
}
.is-vip-bg-4 i {
	right: 0px; bottom: 0px;
}
.is-vip-bg {
	height: 100%; position: relative;
}
.is-vip-bg-6 {
	height: 100%; position: relative;
}
.is-vip-bg-2 {
	height: 100%; position: relative;
}
.is-vip-bg-3 {
	height: 100%; position: relative;
}
.is-vip-bg-4 {
	height: 100%; position: relative;
}
.is-vip-bg-5 {
	height: 100%; position: relative;
}
.is-vip-bg-7 {
	height: 100%; position: relative;
}
.is-vip-bg-6 i {
	right: 5px;
}
.vip-icon {
	right: -5px; bottom: 0px; display: inline-block; position: absolute;
}
.vip-icon-1 {
	background: url("../images/vip/vip.png") no-repeat left 0px; width: =
32px; height: 32px; right: 8px; bottom: 6px;
}
.vip-icon-2 {
	background: url("../images/vip/vip.png") no-repeat left -64px; width: =
22px; height: 22px;
}
.vip-icon-3 {
	background: url("../images/vip/vip.png") no-repeat left -108px; width: =
20px; height: 20px;
}
.vip-icon-4 {
	background: url("../images/vip/vip.png") no-repeat left -152px; width: =
18px; height: 18px;
}
.vip-icon-5 {
	background: url("../images/vip/vip.png") no-repeat left -152px; left: =
20px; width: 18px; height: 18px; bottom: 11px; position: absolute;
}
.vip-icon-1.on {
	background: url("../images/vip/vip.png") no-repeat right 0px;
}
.vip-icon-2.on {
	background: url("../images/vip/vip.png") no-repeat right -64px;
}
.vip-icon-3.on {
	background: url("../images/vip/vip.png") no-repeat right -108px;
}
.vip-icon-4.on {
	background: url("../images/vip/vip.png") no-repeat right -152px;
}
.vip-icon-5.on {
	background: url("../images/vip/vip.png") no-repeat right -152px;
}
.is-vip-bg-6 {
	position: relative;
}
.is-vip-bg-7 .vip-icon-4 {
	background: url("../images/vip/vip.png") no-repeat left bottom; width: =
28px; height: 28px; right: 0px; bottom: 0px; position: absolute;
}
.is-vip-bg-7 .vip-icon-4.on {
	background: url("../images/vip/vip.png") no-repeat right bottom;
}
.is-vip-bg-3 i {
	right: 12px; bottom: 0px;
}
.is-vip-bg-4 i {
	right: 0px; bottom: 0px;
}
.center-bg .vip-icon {
	right: 0px; bottom: 6px;
}
.comment-creat .is-vip-bg-6 i {
	right: -2px; bottom: -2px;
}
.column-stress {
	color: rgb(255, 147, 0); position: relative;
}
.Navigates .column-stress::after {
	color: rgb(255, 147, 0);
}
.Header .Navigates.fl li.cur > a.column-stress {
	color: rgb(255, 147, 0);
}
.Header .Navigates.fl li:hover > a.column-stress {
	color: rgb(255, 147, 0);
}
.column-stress b {
	background: url("../images/new.png"); top: 8px; width: 30px; height: =
15px; right: -30px; position: absolute;
}

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/css/other.css?v=1.0.3.2

.page1100 {
	margin: 0px auto; width: 1100px;
}
.clearfix {
=09
}
.clearfix::before {
	line-height: 0; display: table; content: "";
}
.clearfix::after {
	line-height: 0; display: table; content: "";
}
.clearfix::after {
	clear: both;
}
.fl {
	float: left;
}
.fr {
	float: right;
}
.pulldown {
	background: rgb(255, 255, 255); border: 1px solid rgb(204, 204, 204); =
border-image: none; position: relative; z-index: 2;
}
.pulldown p {
	background: url("../images/icon/08.png") no-repeat right rgb(255, 255, =
255); padding: 0px 20px 0px 10px; border-radius: 2px; height: 34px; =
color: rgb(85, 85, 85); line-height: 34px; overflow: hidden; =
margin-right: 10px; white-space: nowrap; -ms-text-overflow: ellipsis;
}
.pulldown.on .pulldown-list {
	display: block;
}
.pulldown-list {
	background: rgb(255, 255, 255); padding: 3%; border-radius: 2px; =
border: 1px solid rgb(204, 204, 204); border-image: none; left: 0px; =
top: 33px; width: 94%; margin-left: -1px; display: none; position: =
absolute; cursor: pointer;
}
.pulldown-list li {
	padding: 0px 10px; height: 30px; color: rgb(51, 51, 51); line-height: =
30px; overflow: hidden; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.pulldown li:hover {
	background: rgb(224, 224, 224); color: rgb(30, 144, 255);
}
.pulldown.on p {
	background: url("../images/icon/08s.png") no-repeat right rgb(255, 255, =
255);
}
.noList {
	margin: 100px auto; text-align: center;
}
.noList p {
	color: rgb(153, 153, 153); line-height: 2; font-size: 16px;
}
.noList span {
	color: rgb(153, 153, 153); line-height: 1; font-size: 12px; display: =
block;
}
.noList a {
	color: rgb(66, 133, 244);
}
.artical-box .Left .noList {
	margin: 80px auto;
}
.blog-my .Left .noList {
	margin: 50px auto;
}
.checkFollow {
	background-position: left; font-size: 14px; cursor: pointer; =
background-repeat: no-repeat;
}
.checkFollow.on {
	color: rgb(66, 133, 244); padding-left: 14px; background-image: =
url("../images/icon/39.png");
}
.checkFollow.on:hover {
	color: rgb(52, 119, 230); background-image: =
url("../images/icon/39es.png");
}
.checkFollow.in {
	color: rgb(117, 117, 117); padding-left: 17px; background-image: =
url("../images/icon/40.png");
}
.checkFollow.off {
	color: rgb(117, 117, 117); padding-left: 14px; background-image: =
url("../images/icon/41.png");
}
.checkFollow.mutual {
	color: rgb(117, 117, 117); padding-left: 14px; background-image: =
url("../images/icon/42.png");
}
.checkFollow-btn {
	background-position: 14px; padding: 0px 20px 0px 32px; border-radius: =
4px; line-height: 24px; font-size: 14px; background-repeat: no-repeat;
}
.checkFollow-btn.on {
	border: 1px solid rgb(66, 133, 244); border-image: none; color: =
rgb(255, 255, 255); background-image: url("../images/icon/39s.png"); =
background-color: rgb(66, 133, 244);
}
.checkFollow-btn.on:hover {
	border: 1px solid rgb(52, 119, 230); border-image: none; color: =
rgb(255, 255, 255); background-color: rgb(52, 119, 230);
}
.checkFollow-btn.in {
	border: 1px solid rgb(204, 204, 204); border-image: none; color: =
rgb(117, 117, 117); background-image: url("../images/icon/40.png");
}
.checkFollow-btn.off {
	border: 1px solid rgb(204, 204, 204); border-image: none; color: =
rgb(117, 117, 117); background-image: url("../images/icon/41.png"); =
background-color: rgb(255, 255, 255);
}
.checkFollow-btn.mutual {
	border: 1px solid rgb(204, 204, 204); border-image: none; color: =
rgb(117, 117, 117); background-image: url("../images/icon/42.png"); =
background-color: rgb(255, 255, 255);
}
.checkFollow-btn.in:hover {
	background-color: rgb(230, 230, 230);
}
.checkFollow-btn.off:hover {
	background-color: rgb(230, 230, 230);
}
.checkFollow-btn.mutual:hover {
	background-color: rgb(230, 230, 230);
}
.header-top .right-msg .checkFollow-btn.on {
	border: 1px solid rgb(66, 133, 244); border-image: none; width: auto;
}
.header-top .right-msg .checkFollow-btn.on:hover {
	border: 1px solid rgb(52, 119, 230); border-image: none;
}
.header-top .right-msg .checkFollow-btn.in {
	background-color: rgba(255, 255, 255, 0.0001);
}
.header-top .right-msg .checkFollow-btn.off {
	background-color: rgba(255, 255, 255, 0.0001);
}
.header-top .right-msg .checkFollow-btn.mutual {
	background-color: rgba(255, 255, 255, 0.0001);
}
.author-box-list li .checkFollow-btn {
	margin-top: 20px; display: inline-block; background-color: rgb(255, =
255, 255);
}
.follow-index-list li .checkFollow-btn {
	margin-top: 20px; display: inline-block; background-color: rgb(255, =
255, 255);
}
.author-box-list li .checkFollow-btn.on {
	color: rgb(66, 133, 244); background-image: =
url("../images/icon/39.png");
}
.follow-index-list li .checkFollow-btn.on {
	color: rgb(66, 133, 244); background-image: =
url("../images/icon/39.png");
}
.author-box-list li .checkFollow-btn.on:hover {
	color: rgb(255, 255, 255); background-image: =
url("../images/icon/39s.png");
}
.follow-index-list li .checkFollow-btn.on:hover {
	color: rgb(255, 255, 255); background-image: =
url("../images/icon/39s.png");
}
.author-box-list li .checkFollow-btn.in {
	border: 1px solid rgb(238, 238, 238); border-image: none; color: =
rgb(102, 102, 102);
}
.author-box-list li .checkFollow-btn.off {
	border: 1px solid rgb(238, 238, 238); border-image: none; color: =
rgb(102, 102, 102);
}
.author-box-list li .checkFollow-btn.mutual {
	border: 1px solid rgb(238, 238, 238); border-image: none; color: =
rgb(102, 102, 102);
}
.follow-index-list li .checkFollow-btn.in {
	border: 1px solid rgb(238, 238, 238); border-image: none; color: =
rgb(102, 102, 102);
}
.follow-index-list li .checkFollow-btn.off {
	border: 1px solid rgb(238, 238, 238); border-image: none; color: =
rgb(102, 102, 102);
}
.follow-index-list li .checkFollow-btn.mutual {
	border: 1px solid rgb(238, 238, 238); border-image: none; color: =
rgb(102, 102, 102);
}
.search-artical-user .right-btn {
	background-position: 14px; padding: 0px 20px 0px 32px !important; =
border-radius: 4px; border: 1px solid rgb(102, 102, 102); border-image: =
none; height: 24px; color: rgb(102, 102, 102); line-height: 24px; =
background-repeat: no-repeat;
}
.search-artical-user .right-btn.on {
	background-image: url("../images/icon/39ms.png");
}
.search-artical-user .right-btn.in {
	background-image: url("../images/icon/40.png");
}
.search-artical-user .right-btn.off {
	background-image: url("../images/icon/41.png");
}
.search-artical-user .right-btn.mutual {
	background-image: url("../images/icon/42.png");
}
.search-artical-user li:hover .right-btn.in {
	border: 1px solid rgb(102, 102, 102); border-image: none; color: =
rgb(102, 102, 102);
}
.search-artical-user li:hover .right-btn.off {
	border: 1px solid rgb(102, 102, 102); border-image: none; color: =
rgb(102, 102, 102);
}
.search-artical-user li:hover .right-btn.mutual {
	border: 1px solid rgb(102, 102, 102); border-image: none; color: =
rgb(102, 102, 102);
}
.search-artical-user li:hover .right-btn {
	border: 1px solid rgb(66, 133, 244); border-image: none; color: rgb(66, =
133, 244);
}
.search-artical-user li:hover .right-btn.on {
	background-image: url("../images/icon/39.png");
}
.artical-title-list a.checkFollow-btn {
	padding: 0px 8px 0px 18px; border-radius: 10px; border: 0px =
currentColor !important; border-image: none !important; line-height: =
20px; font-size: 12px; margin-top: 8px; display: inline-block; cursor: =
text;
}
.artical-title-list a.checkFollow-btn:hover {
	background-color: rgb(60, 120, 220);
}
.artical-title-list a.checkFollow-btn.on {
	background-position: 7px; background-color: rgb(83, 134, 236);
}
.artical-title-list a.checkFollow-btn.on:hover {
	background-color: rgb(75, 120, 213);
}
.artical-title-list a.checkFollow-btn.in {
	background-position: 4px; color: rgb(102, 102, 102); background-color: =
rgb(234, 234, 234);
}
.artical-title-list a.checkFollow-btn.off {
	background-position: 8px; color: rgb(102, 102, 102); background-color: =
rgb(234, 234, 234);
}
.artical-title-list a.checkFollow-btn.mutual {
	background-position: 6px; color: rgb(102, 102, 102); background-color: =
rgb(234, 234, 234);
}
.author-checkFollow {
=09
}
.author-checkFollow a.checkFollow {
	border-radius: 15px; line-height: 28px; padding-top: 0px; =
padding-right: 15px; padding-bottom: 0px; padding-left: 26px !important; =
display: inline-block;
}
.author-checkFollow a.checkFollow:hover {
	border: 1px solid rgb(0, 111, 192); border-image: none; color: rgb(0, =
111, 192);
}
.author-checkFollow a.checkFollow.on {
	background-position: 14px; border: 1px solid rgb(66, 133, 244); =
border-image: none; color: rgb(66, 133, 244);
}
.author-checkFollow a.checkFollow.on:hover {
	border: 1px solid rgb(75, 120, 213); border-image: none; color: rgb(75, =
120, 213);
}
.author-checkFollow a.checkFollow.in {
	background-position: 11px; border: 1px solid rgb(235, 235, 235); =
border-image: none; color: rgb(102, 102, 102); background-color: =
rgb(235, 235, 235);
}
.author-checkFollow a.checkFollow.off {
	background-position: 15px; border: 1px solid rgb(235, 235, 235); =
border-image: none; color: rgb(102, 102, 102); background-color: =
rgb(235, 235, 235);
}
.author-checkFollow a.checkFollow.mutual {
	background-position: 12px; border: 1px solid rgb(235, 235, 235); =
border-image: none; color: rgb(102, 102, 102); background-color: =
rgb(235, 235, 235);
}
.msg-index-box {
	background: rgb(255, 255, 255); padding: 25px 10px; border-radius: =
10px; left: 50%; top: 30%; width: 607px; margin-left: -300px; position: =
fixed; z-index: 9999;
}
.msg-index-box .top-bg {
	background: url("../images/mbox2/01.png") no-repeat top; left: 0px; =
top: 0px; width: 626px; height: 129px; position: absolute;
}
.msg-index-box .follow-close {
	background: url("../images/mbox2/05.png") no-repeat; top: 14px; width: =
19px; height: 18px; right: 14px; position: absolute; z-index: 1; cursor: =
pointer;
}
.msg-index-box .con-box {
	left: 0px; top: 0px; width: 100%; position: absolute;
}
.msg-index-box .icon-bg {
	left: 97px; top: 48px; position: absolute;
}
.msg-index-box .icon-1 {
	background: url("../images/mbox2/02.png") no-repeat; width: 37px; =
height: 31px;
}
.msg-index-box .icon-2 {
	background: url("../images/mbox2/03.png") no-repeat; width: 38px; =
height: 38px;
}
.msg-index-box h2 {
	text-align: center; color: rgb(66, 133, 244); line-height: 1; =
font-size: 26px; margin-top: 26px; margin-bottom: 20px;
}
.msg-index-box .con {
	text-align: center; color: rgb(51, 51, 51); line-height: 24px; =
font-size: 14px;
}
.msg-index-box .con a {
	color: rgb(66, 133, 244);
}
.msg-index-box .code-bg {
	background: url("../images/mbox2/04.png") no-repeat; margin: 40px auto =
0px; width: 148px; height: 135px;
}
.msg-index-box .code-bg img {
	background: rgb(255, 85, 0);
}
.msg-index-box .btn-box {
	text-align: center; margin-top: 20px;
}
.msg-index-box .btn-box p {
	padding: 0px 16px; border-radius: 6px; height: 28px; line-height: 28px; =
font-size: 14px; display: inline-block; cursor: pointer;
}
.msg-index-box .btn-1 {
	border: 1px solid rgb(255, 255, 255); border-image: none; color: =
rgb(102, 102, 102); margin-right: 46px;
}
.msg-index-box .btn-2 {
	border: 1px solid rgb(66, 133, 244); border-image: none; color: rgb(66, =
133, 244);
}
ul.aList li .intro p.hasdot {
	color: rgb(255, 134, 78);
}
ul.aList li .intro p.hasdot i {
	background: url("../images/icon/37.png") no-repeat; width: 13px; =
height: 13px; margin-top: -20px; vertical-align: middle; display: =
inline-block;
}
.artical-list .bot span.more {
	color: rgb(255, 134, 78);
}
.artical-list .bot span.more i {
	background: url("../images/icon/37.png") no-repeat; width: 13px; =
height: 13px; margin-top: -20px; vertical-align: middle; display: =
inline-block;
}
.search-artical .last .m-3-1.on {
	color: rgb(255, 134, 78);
}
.search-artical .last .m-3-1.on i {
	background: url("../images/icon/37.png") no-repeat; width: 13px; =
height: 13px; margin-top: -20px; vertical-align: middle; display: =
inline-block;
}
.artical-list .bot p.on {
	color: rgb(255, 134, 78);
}
.artical-list .bot p.on i {
	background: url("../images/icon/37.png") no-repeat; width: 13px; =
height: 13px; margin-top: -20px; vertical-align: middle; display: =
inline-block;
}
.cloumn-tab-par {
	position: relative;
}
.cloumn-tab-new {
	border-radius: 0px 10px 10px 0px; left: 0px; top: 0px; color: rgb(255, =
255, 255); position: absolute;
}
.cloumn-tab-new-1 {
	padding: 2px 8px 0px 4px; line-height: 17px;
}
.cloumn-tab-new-2 {
	padding: 0px 9px 0px 5px; line-height: 24px;
}
.cloumn-tab1 {
	background: rgb(253, 92, 97);
}
.cloumn-tab2 {
	background: rgb(255, 149, 0);
}
.newcoupon-div {
	border-radius: 18px; left: 50%; top: 50%; width: 440px; text-align: =
center; margin-top: -274.5px; margin-left: -220px; position: fixed; =
z-index: 101; box-sizing: border-box;
}
.newcoupon-div1 {
	background: url("../images/newcoupon-bg1.png") no-repeat top / 100% =
100%; height: 475px;
}
.newcoupon-div2 {
	background: url("../images/newcoupon-bg2.png") no-repeat top / 100%; =
height: 521px;
}
.newcoupon-div span.close {
	background: url("../images/m/close.png") no-repeat 0% 0% / 100%; top: =
20px; width: 20px; height: 20px; right: 20px; position: absolute;
}
.newcoupon-div a {
	display: block;
}
.newcoupon-div {
	padding-top: 35px;
}
.newcoupon-div .tip {
	background: url("../images/coupon-tip.png") no-repeat center / 100%; =
margin: 0px auto; width: 70%; color: rgb(193, 185, 146); font-size: =
13px;
}
.newcoupon-div .number {
	color: rgb(233, 210, 101); font-size: 20px;
}
.coupon-list {
	margin-top: 20px;
}
.coupon-list li {
	background: url("../images/newcoupon-li.png") no-repeat top / 100%; =
margin: 29px auto 13px; padding: 20px 24px 20px 27px; border-radius: =
10px; width: 379px; height: 120px; box-sizing: border-box;
}
.coupon-list li:last-child {
	margin-bottom: 0px;
}
.coupon-list li .left {
	width: 90px; text-align: right; color: rgb(199, 158, 89); line-height: =
70px; overflow: hidden; padding-right: 15px; font-size: 26px; =
border-right-color: rgb(237, 240, 246); border-right-width: 1px; =
border-right-style: solid;
}
.coupon-list li .left .price {
	font-size: 55px;
}
.coupon-list li .right {
	width: 50%; text-align: left; line-height: 20px; margin-left: 15px;
}
.coupon-list li .type {
	color: rgb(34, 34, 34); font-size: 18px; margin-bottom: 3px; display: =
inline-block;
}
.coupon-list li .time {
	color: rgb(102, 102, 102); font-size: 13px; margin-bottom: 10px; =
display: inline-block;
}
.coupon-list li .name {
	color: rgb(153, 153, 153); font-size: 16px; display: inline-block;
}
.newcoupon-div .btn-wrap1 {
	padding: 0px 30px; bottom: 20px; position: absolute;
}
.newcoupon-div .btn-wrap1 > a {
	border-radius: 10px; width: 180px; height: 53px; text-align: center; =
line-height: 53px; font-size: 18px; display: inline-block; box-sizing: =
border-box;
}
.newcoupon-div .btn-wrap1 .left {
	border: 1px solid rgb(233, 210, 102); border-image: none; color: =
rgb(233, 210, 102); margin-right: 20px; background-color: inherit;
}
.newcoupon-div .btn-wrap1 .right {
	color: rgb(45, 45, 45); background-color: rgb(233, 210, 102);
}
.mask3 {
	background: rgba(0, 0, 0, 0.5); left: 0px; top: 0px; width: 100%; =
height: 100%; display: none; position: fixed; z-index: 100;
}

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/css/right.css?v=1.0.4.7

.iWantWrite {
	background: rgb(255, 255, 255); padding: 12px 15px; border: 1px solid =
rgb(238, 238, 238); border-image: none; height: 22px; margin-bottom: =
20px; position: relative;
}
.iWantWrite p {
	color: rgb(153, 153, 153); line-height: 22px; padding-left: 20px; =
font-size: 12px; border-left-color: rgb(238, 238, 238); =
border-left-width: 1px; border-left-style: solid; float: right;
}
.iWantWrite p span {
	margin: 0px 5px; color: rgb(51, 51, 51); font-size: 16px;
}
.iWantWrite a {
	width: 101px; height: 48px; line-height: 48px; font-size: 16px; =
display: inline-block;
}
.iWantWrite a:nth-of-type(1) {
	background: url("../images/03_110_1.png") no-repeat 5px; left: 0px; =
top: 0px; height: 100%; right: 0px; color: rgb(66, 133, 244); =
padding-left: 40px; margin-right: 10px; position: absolute;
}
.iWantWrite a:nth-of-type(2) {
	background: url("../images/03_110_2.png") no-repeat 14px; top: 0px; =
right: 0px; color: rgb(51, 51, 51); padding-left: 40px; =
border-left-color: rgb(238, 238, 238); border-left-width: 1px; =
border-left-style: solid; position: absolute;
}
.Index .Right h3.BoxTil {
	line-height: 1; padding-left: 10px; font-size: 16px; font-weight: =
normal; margin-bottom: 15px; border-left-color: rgb(66, 133, 244); =
border-left-width: 3px; border-left-style: solid;
}
.Index .Right h3.BoxTil a.fr {
	color: rgb(117, 117, 117); font-size: 12px; margin-top: 4px;
}
.Index .Right h3.BoxTil a:hover {
	color: rgb(66, 133, 244);
}
.Index .Right .Box {
	background: rgb(255, 255, 255); padding: 10px 20px; border: 1px solid =
rgb(238, 238, 238); border-image: none; margin-bottom: 30px;
}
.News li {
	padding: 5px 0px; overflow: hidden; word-spacing: normal; white-space: =
nowrap; -ms-word-wrap: normal; -ms-text-overflow: ellipsis;
}
.News li.f span {
	color: rgb(66, 133, 244); padding-right: 5px; font-weight: bold; =
margin-right: 5px; border-right-color: rgb(170, 170, 170); =
border-right-width: 1px; border-right-style: solid;
}
.News li a {
	color: rgb(102, 102, 102);
}
.News li a.blue {
	color: rgb(66, 133, 244);
}
.News li a:hover {
	color: rgb(52, 119, 230);
}
.BlogerList li {
	list-style: none; padding: 16px 0px; overflow: hidden;
}
.BlogerList.bd li {
	border-top-color: rgb(238, 238, 238); border-top-width: 1px; =
border-top-style: dotted;
}
.BlogerList li .pic {
	width: 48px; height: 48px; float: left;
}
.BlogerList.bd li .pic {
	padding-top: 6px;
}
.BlogerList li .pic img {
	border-radius: 50%; width: 100%; height: 100%; display: block;
}
.BlogerList li .main {
	width: 200px; overflow: hidden; float: right;
}
.BlogerList li .main h4 {
	line-height: 1; font-size: 16px; font-weight: normal; margin-bottom: =
10px;
}
.BlogerList li .main dl {
	width: 33%; line-height: 1.3; float: left;
}
.BlogerList li .main dl:last-child {
	margin-right: 0px;
}
.BlogerList li .main dt {
	width: 60px; overflow: hidden; font-size: 16px; margin-bottom: 5px;
}
.BlogerList li .main dd {
	color: rgb(117, 117, 117); font-size: 12px;
}
.BlogerList li .main p {
	color: rgb(153, 153, 153); font-size: 12px;
}
.BlogerList li .main p span {
	color: rgb(102, 102, 102); margin-right: 10px;
}
.BlogerList a.regBloger {
	margin: 10px 40px; border-radius: 15px; border: 1px solid rgb(66, 133, =
244); border-image: none; text-align: center; color: rgb(66, 133, 244); =
line-height: 30px; display: block;
}
.BlogerList a.regBloger:hover {
	border-color: rgb(54, 110, 202); color: rgb(54, 110, 202);
}
.Index .Right .articles {
	padding: 0px;
}
.articles .tab {
	background: rgb(247, 247, 248); height: 36px; border-bottom-color: =
rgb(238, 238, 238); border-bottom-width: 1px; border-bottom-style: =
solid;
}
.articles .tab p {
	padding: 0px 20px; line-height: 36px; float: left; cursor: pointer;
}
.articles .tab p.cur {
	background: rgb(255, 255, 255); height: 37px; margin-top: -1px; =
border-top-color: rgb(66, 133, 244); border-top-width: 1px; =
border-top-style: solid;
}
.articles .list {
	padding: 10px 15px;
}
.articles .list .seven-list {
	padding-top: 10px;
}
.articles .list .seven-list li {
	list-style: none;
}
.articles .list .seven-list a {
	background: url("../images/dot2.png") no-repeat left; line-height: =
16px; overflow: hidden; padding-left: 15px; margin-bottom: 15px; =
word-spacing: normal; display: block; white-space: nowrap; =
-ms-word-wrap: normal; -ms-text-overflow: ellipsis;
}
.articles .list .seven-list a:hover {
	color: rgb(66, 133, 244);
}
.articles .list .seven-list .s1 a {
	background-image: url("../images/dot4.png");
}
.articles .list .s2 a {
	background-image: url("../images/dot4.png");
}
.articles .list .s3 a {
	background-image: url("../images/dot4.png");
}
.jia1 {
	color: red; display: none; position: absolute;
}
.jia2 {
	top: 0px; right: 0px; color: red; position: absolute; z-index: 10;
}
.rightTools {
	width: 37px; right: 10px; bottom: 120px; position: fixed; z-index: 100;
}
.rightTools a {
	border-radius: 3px; border: 1px solid rgb(221, 221, 221); border-image: =
none; width: 35px; height: 35px; line-height: 35px; text-indent: 100px; =
overflow: hidden; margin-top: 5px; display: block;
}
.rightTools a.aa {
	background: url("../images/aa_02.gif") no-repeat center rgb(66, 133, =
244);
}
.rightTools a.yy {
	background: url("../images/yy.png") no-repeat center rgb(255, 255, =
255);
}
.rightTools a.qq {
	background: url("../images/qq.png") no-repeat center rgb(255, 255, =
255);
}
.rightTools a.gotop {
	background: url("../images/gotop.png") no-repeat center rgb(255, 255, =
255);
}
.rightTools a:hover {
	border-color: rgb(66, 133, 244); background-color: rgb(66, 133, 244);
}
.rightTools a.aa:hover {
	background-position: 64px; width: 100px; color: rgb(255, 255, 255); =
text-indent: 10px; margin-left: -63px; background-image: =
url("../images/aa_01s.png"); background-repeat: no-repeat;
}
.rightTools a.yy:hover {
	background-image: url("../images/yys.png");
}
.rightTools a.qq:hover {
	background-image: url("../images/qq_w.png");
}
.rightTools a.gotop:hover {
	background-image: url("../images/gotop_w.png");
}
.columnList {
	padding: 20px 15px !important;
}
.columnList ul {
	list-style: none;
}
.columnList li {
	list-style: none;
}
.columnList li {
	margin-bottom: 32px; position: relative; min-height: 83px;
}
.columnList li:last-of-type {
	margin-bottom: 0px;
}
.columnList .columnImage {
	width: 83px; height: 83px; display: inline-block; position: absolute;
}
.columnList .columnImage img {
	width: 100%; height: 100%;
}
.columnList .rightContent {
	height: 83px; margin-left: 93px; position: relative;
}
.columnList p.columnTitle {
	top: -4px; height: 40px; line-height: 20px; overflow: hidden; position: =
relative;
}
.columnList .userInfo {
	color: rgb(139, 139, 139); line-height: 12px; font-size: 12px; =
margin-top: 9px;
}
.columnList .userInfo span {
=09
}
.columnList .ft {
	width: 100%; bottom: -2px; line-height: 12px; position: absolute;
}
.columnList .price {
	line-height: 14px; text-indent: -3px; font-weight: bold;
}
.columnList .buyCount {
	color: rgb(153, 153, 153); line-height: 12px; font-size: 12px;
}
.articles .tab {
	background: rgb(247, 247, 248); height: 36px; border-bottom-color: =
rgb(238, 238, 238); border-bottom-width: 1px; border-bottom-style: =
solid;
}
.articles .tab p {
	padding: 0px 20px; line-height: 36px; float: left; cursor: pointer;
}
.articles .tab p.cur {
	background: rgb(255, 255, 255); height: 37px; margin-top: -1px; =
border-top-color: rgb(66, 133, 244); border-top-width: 1px; =
border-top-style: solid;
}
.articles .list {
	padding: 10px 15px;
}
.articles .list a {
	display: block; white-space: nowrap; -ms-text-overflow: ellipsis;
}
.articles .list .BoxTil2-right-tit {
	width: 240px; overflow: hidden;
}
.articles .list .seven-list {
	padding-top: 10px;
}
.articles .list .seven-list a {
	background: url("../images/dot2.png") no-repeat left; line-height: =
16px; overflow: hidden; padding-left: 15px; margin-bottom: 15px; =
word-spacing: normal; display: block; white-space: nowrap; =
-ms-word-wrap: normal; -ms-text-overflow: ellipsis;
}
.articles .list .s1 a {
	background-image: url("../images/dot4.png");
}
.articles .list .s2 a {
	background-image: url("../images/dot4.png");
}
.articles .list .s3 a {
	background-image: url("../images/dot4.png");
}
.articles .BoxTil2 {
	color: rgb(66, 133, 244); line-height: 1; font-size: 18px; font-weight: =
normal; margin-top: 10px;
}
.articles .BoxTil2-box {
	margin-top: 10px; position: relative; z-index: 1;
}
.articles .BoxTil2-box span {
	background: url("../images/icon/23.png") no-repeat; width: 18px; =
height: 18px; display: inline-block; cursor: pointer;
}
.articles .BoxTil2-box div {
	background: rgb(255, 255, 255); padding: 10px 14px; border: 1px solid =
rgb(204, 204, 204); border-image: none; top: 22px; text-align: center; =
right: 0px; display: none; position: absolute;
}
.articles .BoxTil2-box div img {
	width: 86px; height: 86px;
}
.articles .BoxTil2-box div p {
	color: rgb(102, 102, 102);
}
.articles .BoxTil2-box:hover div {
	display: block;
}
.articles .BoxTil3 {
	color: rgb(51, 51, 51); line-height: 1.2; font-size: 16px; font-weight: =
normal; margin-top: 10px;
}
.BoxTil3 span {
	padding: 0px 4px; border-radius: 4px; border: 1px solid rgb(66, 133, =
244); border-image: none; color: rgb(66, 133, 244); line-height: 16px; =
margin-left: 12px; position: relative;
}
.BoxTil3 i {
	background: url("../images/icon/19.png") no-repeat; left: -4px; top: =
4px; width: 4px; height: 7px; display: inline-block; position: absolute;
}
.articles .number-list {
	margin-top: 25px; margin-bottom: 10px;
}
.articles .number-list li {
	list-style: none; width: 24.5%; text-align: center; border-left-color: =
rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; =
float: left;
}
.articles .number-list li:first-child {
	border-left-color: currentColor; border-left-width: 0px; =
border-left-style: none;
}
.articles .number-list li a.num {
	color: rgb(68, 68, 68); line-height: 1; display: block; cursor: text;
}
.articles .number-list li p {
	color: rgb(153, 153, 153); line-height: 1; font-size: 12px; margin-top: =
14px;
}
.articles .num-arctic {
	color: rgb(102, 102, 102); font-size: 16px;
}
.articles .num-arctic span {
	color: rgb(102, 102, 102); font-weight: bold;
}
.articles .bottom {
	margin-top: 30px;
}
.articles .bottom .msg-title {
	color: rgb(51, 51, 51); position: relative;
}
.articles .bottom .msg-title p {
	overflow: hidden; vertical-align: text-top; display: inline-block; =
max-height: 46px; max-width: 206px;
}
.articles .bottom .msg-title .icon {
	background: url("../images/icon/61.png") no-repeat; width: 11px; =
height: 13px; margin-left: 6px; display: inline-block; cursor: pointer;
}
.articles .bottom .msg-title i {
	width: 16px; height: 12px; display: inline-block;
}
.articles .bottom .msg-title i.l {
	background: url("../images/icon/22.png") no-repeat left top; =
margin-right: 10px;
}
.articles .bottom .msg-title i.r {
	background: url("../images/icon/22s.png") no-repeat right bottom; =
bottom: 0px; margin-left: 10px; position: absolute;
}
.articles .bottom .title {
	text-align: center; margin-top: 30px; border-top-color: rgb(204, 204, =
204); border-top-width: 1px; border-top-style: solid;
}
.articles .bottom .title a {
	background: rgb(255, 255, 255); padding: 0px 20px; top: -14px; color: =
rgb(66, 133, 244); font-weight: normal; margin-top: -10px; display: =
inline; position: relative; cursor: text;
}
.articles .bottom .title a:hover {
	color: rgb(52, 119, 230);
}
.articles .bottom .my-list li {
	list-style: none; color: rgb(102, 102, 102); line-height: 30px; =
font-size: 12px;
}
.articles .bottom .my-crouse-box {
	margin: 20px 0px; text-align: center;
}
.articles .bottom .my-crouse {
	background: rgb(255, 255, 255); padding: 0px 45px; border-radius: 30px; =
border: 1px solid rgb(66, 133, 244); border-image: none; height: 30px; =
color: rgb(66, 133, 244); line-height: 30px; display: inline-block; =
cursor: pointer;
}
.articles .bottom .my-crouse:hover {
	background: rgb(66, 133, 244); color: rgb(255, 255, 255);
}
.blogger-name {
	position: relative; z-index: 1;
}
.blogger .top {
	text-align: center; margin-top: 20px; position: relative;
}
.blogger .top .is-vip-bg-4 {
	margin: 0px auto; display: inline-block;
}
.blogger .top .left {
	display: block;
}
.blogger .top .left img {
	border-radius: 50%; width: 76px; height: 76px; overflow: hidden; =
display: block;
}
.blogger .top .right {
	text-align: center;
}
.blogger .top .right a {
	display: inline-block;
}
.blogger .top .right .tit {
	color: rgb(27, 27, 27); line-height: 1; overflow: hidden; font-size: =
18px; float: left; white-space: nowrap; -ms-text-overflow: ellipsis; =
max-width: 200px;
}
.blogger .top .right .name-box {
	display: inline-block;
}
.blogger .top .right .name-box p {
	width: 16px; height: 16px; margin-left: 6px; position: relative; =
background-image: url("../images/icon/44.png"); background-repeat: =
no-repeat;
}
.blogger .top .right .name-box p:hover {
	z-index: 2;
}
.blogger .top .right .name-box p:hover .last {
	display: block;
}
.blogger .top .right .name-box .last {
	background: rgba(0, 0, 0, 0.7); padding: 0px 8px; left: 24px; top: =
-2px; color: rgb(255, 255, 255); line-height: 20px; font-size: 12px; =
display: none; position: absolute;
}
.blogger .top .right .name-box .last i {
	background: url("../images/icon/47.png") no-repeat left; left: -4px; =
top: 7px; width: 4px; height: 7px; display: inline-block; position: =
absolute;
}
.blogger .top .right .name-box .icon1 {
	background-position: top;
}
.blogger .top .right .name-box .icon2 {
	background-position: center -45px;
}
.blogger .top .right .name-box .icon3 {
	background-position: center -92px;
}
.blogger .top .right .name-box .icon4 {
	background-position: center -139px;
}
.blogger .top .right .name-box .icon5 {
	background-position: bottom;
}
.blogger .top .right .name-box .icon1 .last {
	width: 30px;
}
.blogger .top .right .name-box .icon2 .last {
	width: 50px;
}
.blogger .top .right .name-box .icon3 .last {
	width: 50px;
}
.blogger .top .right .name-box .icon4 .last {
	width: 30px;
}
.blogger .top .right .name-box .icon5 .last {
	width: 50px;
}
.blogger .top .right .name-index {
	padding: 0px 10px; border-radius: 4px; height: 30px; line-height: 30px; =
display: inline-block;
}
.blogger .top .right .name-msg {
	padding: 0px 10px; border-radius: 4px; height: 26px; line-height: 26px; =
margin-left: 6px; display: inline-block;
}
.blogger .bottom {
	margin-top: 56px;
}
.blogger .bottom .msg-title {
	text-align: center; color: rgb(51, 51, 51);
}
.blogger .bottom .msg-title i {
	width: 16px; height: 12px; display: inline-block;
}
.blogger .bottom .msg-title i.l {
	background: url("../images/icon/22.png") no-repeat left top; =
margin-right: 10px;
}
.blogger .bottom .msg-title i.r {
	background: url("../images/icon/22s.png") no-repeat right bottom; =
margin-left: 10px;
}
.blogger .bottom .title {
	text-align: center; margin-top: 30px; border-top-color: rgb(204, 204, =
204); border-top-width: 1px; border-top-style: solid;
}
.blogger .bottom .title a {
	background: rgb(255, 255, 255); top: -7px; color: rgb(66, 133, 244); =
font-weight: normal; margin-top: -10px; display: inline-block; position: =
relative;
}
.blogger .bottom .title a:hover {
	color: rgb(52, 119, 230);
}
.blogger-name-msg.on {
	left: 50%; top: 0px; margin-left: 300px; position: fixed;
}
.blogger-name-msg.on .list {
	width: 270px;
}
.blogger-name-msg.on .bottom .msg-title {
	margin-bottom: 20px;
}
.blogger-name-msg.on .bottom .title {
	margin-top: 0px; display: none;
}
.blogger-name-msg.on .bottom .seven-list {
	display: none;
}
.blogger-name-msg .bottom .seven-list {
	display: block;
}
.come-round-list {
	margin: 0px 14px; width: 240px;
}
.come-round-list li {
	list-style: none; padding: 15px 0px; width: 78px; text-align: center; =
float: left;
}
.come-round-list a {
	display: block;
}
.come-round-list img {
	margin: 0px auto; border-radius: 50%; width: 44px; height: 44px; =
display: block;
}
.come-round-list a.con {
	height: 21px; color: rgb(61, 70, 77); overflow: hidden; font-size: =
12px; margin-top: 12px; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.come-round-list a.con:hover {
	color: rgb(66, 133, 244);
}
.index-msg-follow {
	border: 1px solid rgb(238, 238, 238); border-image: none; =
margin-bottom: 15px; position: relative; z-index: 2;
}
.index-msg-follow span {
	background: url("../images/icon/43.png") no-repeat right 6px; padding: =
5px 24px 6px 0px; color: rgb(229, 104, 97); line-height: 1.5; =
margin-left: 12px; display: inline-block; cursor: pointer;
}
.index-msg-follow p {
	background: rgb(255, 255, 255); padding: 15px; border: 1px solid =
rgb(239, 239, 239); border-image: none; left: 42px; top: 32px; color: =
rgb(102, 102, 102); line-height: 20px; font-size: 12px; display: none; =
position: absolute;
}
.index-msg-follow p i {
	background: url("../images/icon/03s.png") no-repeat; left: 92px; top: =
-7px; width: 17px; height: 18px; display: inline-block; position: =
absolute;
}
.index-msg-follow:hover p {
	display: block;
}
.followUsers-list {
=09
}
.followUsers-list li {
	line-height: 48px; border-top-color: rgb(233, 233, 233); =
border-top-width: 1px; border-top-style: dashed;
}
.followUsers-list li:first-child {
	border-top-color: currentColor; border-top-width: 0px; =
border-top-style: none;
}
.BlogerList.bd .followUsers-list li .pic {
	padding-top: 0px; margin-left: 16px;
}
.followUsers-list li .num-list {
	color: rgb(51, 51, 51); line-height: 48px; margin-left: 10px; float: =
left;
}
.followUsers-list li .name {
	width: 70px; overflow: hidden; font-size: 16px; margin-left: 16px; =
float: left; white-space: nowrap; -ms-text-overflow: ellipsis;
}
.followUsers-list li .number {
	color: rgb(51, 51, 51); font-size: 14px;
}
.followUsers-list li .checkFollow {
	display: none;
}
.followUsers-list li .followUsers-right {
	float: right; cursor: pointer;
}
.followUsers-list li:hover .followUsers-right .number {
	display: none;
}
.followUsers-list li:hover .followUsers-right .checkFollow {
	display: block;
}
.followUsers-list li.num-one .num-list {
	color: rgb(236, 86, 54); font-size: 16px; font-style: italic;
}
.followUsers-list li.num-one .name {
	color: rgb(236, 86, 54);
}
.followUsers-list li.num-two .num-list {
	color: rgb(237, 141, 51); font-size: 16px; font-style: italic;
}
.followUsers-list li.num-two .name {
	color: rgb(237, 141, 51);
}
.followUsers-list li.num-three .num-list {
	color: rgb(86, 169, 233); font-size: 16px; font-style: italic;
}
.followUsers-list li.num-three .name {
	color: rgb(86, 169, 233);
}

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/css/blog_details.css?v=1.0.7.2

* {
	margin: 0px; padding: 0px; font-family: -apple-system,"Helvetica =
Neue",Helvetica,Arial,"PingFang SC","Hiragino Sans GB","WenQuanYi Micro =
Hei","Microsoft Yahei",sans-serif; -webkit-font-smoothing: antialiased;
}
a {
	color: rgb(51, 51, 51); text-decoration: none;
}
a:hover {
	color: rgb(66, 133, 244);
}
textarea {
	resize: none;
}
img {
	border: currentColor; border-image: none;
}
input {
=09
}
button {
=09
}
input[type=3D'button'] {
=09
}
button {
	padding: 0px 20px; border: currentColor; border-image: none; color: =
rgb(255, 255, 255); line-height: 30px; cursor: pointer; =
background-color: rgb(0, 186, 242);
}
input[type=3D'button'] {
	padding: 0px 20px; border: currentColor; border-image: none; color: =
rgb(255, 255, 255); line-height: 30px; cursor: pointer; =
background-color: rgb(0, 186, 242);
}
button:hover {
	opacity: 0.9;
}
input[type=3D'button']:hover {
	opacity: 0.9;
}
img {
	border: currentColor; border-image: none;
}
body {
	text-align: left; color: rgb(51, 51, 51); line-height: 1.75; font-size: =
14px;
}
.disabled {
	background: rgb(153, 153, 153);
}
.del {
	text-decoration: line-through;
}
.clear {
	width: 0px; height: 0px; overflow: hidden; clear: both;
}
.clearfix {
	clear: both;
}
.clearfix::after {
	clear: both; display: block; content: "";
}
.Left {
	float: left;
}
.fl {
	float: left;
}
.Right {
	float: right;
}
.fr {
	float: right;
}
.tl {
	text-align: left;
}
.tc {
	text-align: center;
}
.tr {
	text-align: right;
}
.fb {
	font-weight: 700;
}
.bluebg {
	background: rgb(0, 186, 242);
}
.blue {
	color: rgb(0, 186, 242);
}
.redbg {
	background: rgb(255, 74, 86);
}
.red {
	color: rgb(255, 74, 86);
}
.red:hover {
	color: rgb(149, 11, 17);
}
.mask {
	background: =
url("https://s1.51cto.com/images/201611/95dc798763e7191d096823b51600438a1=
218c0.png"); left: 0px; top: 0px; width: 100%; height: 100%; display: =
none; position: fixed; z-index: 9999;
}
.Mask {
	background: =
url("https://s1.51cto.com/images/201611/95dc798763e7191d096823b51600438a1=
218c0.png"); left: 0px; top: 0px; width: 100%; height: 100%; display: =
none; position: fixed; z-index: 9999;
}
label {
	margin-bottom: 0px !important;
}
.blue-btn {
	background: rgb(66, 133, 244); border: 1px solid rgb(66, 133, 244); =
border-image: none; color: rgb(255, 255, 255); cursor: pointer;
}
.disabled-btn {
	background: rgb(221, 221, 221); border: 1px solid rgb(221, 221, 221); =
border-image: none; color: rgb(255, 255, 255);
}
.blue-btn:hover {
	background: rgb(60, 120, 220); border: 1px solid rgb(60, 120, 220); =
border-image: none; color: rgb(255, 255, 255);
}
.gray-btn {
	background: rgb(255, 255, 255); border: 1px solid rgb(204, 204, 204); =
border-image: none; color: rgb(51, 51, 51); cursor: pointer;
}
.gray-btn:hover {
	background: rgb(230, 230, 230); color: rgb(0, 0, 0);
}
.main-content * {
	max-width: 100%;
}
.main-content img {
	max-width: 100%;
}
.editor-side-new * {
	font-size: 16px; -ms-word-break: break-all;
}
.editor-side-new * td {
	max-width: 748px;
}
.editor-side-new blockquote {
	background: rgb(242, 245, 249); margin: 1rem 0px; padding: 0.8rem =
1.2rem; color: rgb(129, 145, 152); border-left-color: rgb(66, 133, 244); =
border-left-width: 0.2rem; border-left-style: solid;
}
.editor-side-new blockquote h1:last-child {
	margin-bottom: 0px;
}
.editor-side-new blockquote h2:last-child {
	margin-bottom: 0px;
}
.editor-side-new blockquote h3:last-child {
	margin-bottom: 0px;
}
.editor-side-new blockquote h4:last-child {
	margin-bottom: 0px;
}
.editor-side-new blockquote h5:last-child {
	margin-bottom: 0px;
}
.editor-side-new blockquote h6:last-child {
	margin-bottom: 0px;
}
.editor-side-new blockquote li:last-child {
	margin-bottom: 0px;
}
.editor-side-new blockquote ol:last-child {
	margin-bottom: 0px;
}
.editor-side-new blockquote p:last-child {
	margin-bottom: 0px;
}
.editor-side-new blockquote ul:last-child {
	margin-bottom: 0px;
}
.editor-side-new blockquote p {
	line-height: 1.7; font-size: 16px; font-weight: 400;
}
.white-space {
	overflow: hidden; white-space: nowrap; -ms-text-overflow: ellipsis;
}
.mt26 {
	margin-top: 26px;
}
.Blog-Left {
	width: 764px;
}
.Blog-Right {
	left: 50%; bottom: 190px; margin-left: 422px; position: fixed;
}
.Blog-Right a {
	width: 48px; height: 48px; display: block; background-image: =
url("../images/icon/icon_4.png"); background-repeat: no-repeat;
}
.Blog-Right .catalog {
	background-position: left top; display: none; cursor: pointer;
}
.Blog-Right .catalog.on {
	background-position: right top;
}
.Blog-Right .catalog:hover {
	background-position: right top;
}
.Blog-Right .scrollTop {
	background-position: left bottom; margin-top: 12px; display: none;
}
.Blog-Right .scrollTop:hover {
	background-position: right bottom;
}
.Blog-Right .update-top {
	display: none;
}
.directoryBox {
	left: 0px; width: 170px; bottom: 138px; overflow: hidden; visibility: =
hidden; position: absolute;
}
.directory {
	margin: 9px 0px; width: 188px; position: relative; -ms-overflow-x: =
hidden; max-height: 318px;
}
.directoryBox .bot-icon {
	background: url("../images/icon/24.png") no-repeat; left: 0px; width: =
9px; height: 9px; margin-left: 6px; display: inline-block; position: =
absolute;
}
.directoryBox .top-icon {
	background: url("../images/icon/24.png") no-repeat; left: 0px; width: =
9px; height: 9px; margin-left: 6px; display: inline-block; position: =
absolute;
}
.directoryBox .top-icon {
	top: 0px; z-index: 1;
}
.directoryBox .bot-icon {
	bottom: 0px; z-index: 1;
}
.directory b {
	background: rgb(255, 85, 0); transition:height 5s; left: 10px; width: =
2px; height: 10px; position: absolute; -webkit-transition: height .75s;
}
.directory .directory-list {
	padding: 15px 0px; width: 170px; margin-left: 10px; border-left-color: =
rgb(213, 213, 213); border-left-width: 1px; border-left-style: solid; =
position: relative;
}
.directory .directory-list li {
	background: url("../images/dot2s.png") no-repeat; list-style: none; =
padding: 0px 10px; color: rgb(153, 153, 153); line-height: 1; overflow: =
hidden; font-size: 12px; margin-top: 18px; white-space: nowrap; cursor: =
pointer; -ms-text-overflow: ellipsis;
}
.directory .directory-list li:first-child {
	margin-top: 0px;
}
.directory .directory-list li.on {
	color: rgb(66, 133, 244); background-image: url("../images/dot2s.png");
}
.directory .directory-list li:hover {
	color: rgb(66, 133, 244); background-image: url("../images/dot2s.png");
}
.directory .directory-list li.lv1 {
	background: 0px 0px; font-size: 14px;
}
.directory .directory-list li:first-child.lv1 {
	margin-top: 0px;
}
.directory .directory-list li.lv2 {
	background-position: 20px; padding-left: 26px;
}
.directory .directory-list li.lv3 {
	background-position: 30px; padding-left: 36px;
}
.directory .directory-list .arrow {
	background: rgb(66, 133, 244); left: 0px; top: 0px; width: 2px; height: =
14px; position: absolute; z-index: 2;
}
.appreciate-box {
	margin: 100px auto 70px; text-align: center;
}
.appreciate-box h2 {
	color: rgb(61, 70, 77); font-size: 18px;
}
.appreciate-box .appreciate-btn {
	background: rgb(255, 95, 83); border-radius: 50%; width: 76px; height: =
76px; text-align: center; color: rgb(255, 255, 255); line-height: 76px; =
font-size: 20px; margin-top: 18px; display: inline-block; cursor: =
pointer;
}
.appreciate-box .appreciate-btn:hover {
	background: rgb(222, 79, 67);
}
.appreciate-box .appreciate-btn.on {
	background: rgb(222, 79, 67);
}
.appreciate-box .appreciate-txt {
	color: rgb(150, 150, 150); font-size: 13px; margin-top: 22px;
}
.appreciate-header-img {
	padding-bottom: 20px; margin-top: 16px; display: inline-block; =
position: relative;
}
.appreciate-header-img .a-img {
	margin-left: 8px;
}
.appreciate-header-img img {
	border-radius: 50%; width: 36px; height: 36px; display: inline-block;
}
.hd-more-list img {
	border-radius: 50%; width: 36px; height: 36px; display: inline-block;
}
.appreciate-header-img .appreciate-header-more {
	background: url("../images/icon/49.png") no-repeat left; color: =
rgb(171, 171, 171); line-height: 34px; padding-left: 14px; font-size: =
12px; margin-left: 21px; float: left; cursor: pointer;
}
.appreciate-header-img .appreciate-header-more.on {
	background: url("../images/icon/49s.png") no-repeat left; color: =
rgb(102, 102, 102);
}
.appreciate-header-img .appreciate-header-more:hover {
	background: url("../images/icon/49s.png") no-repeat left; color: =
rgb(102, 102, 102);
}
.hd-more-box {
	background: rgba(255, 255, 255, 0); left: 0px; top: 0px; width: 100%; =
height: 100%; text-align: center; visibility: hidden; position: fixed; =
z-index: 12; cursor: pointer;
}
.hd-more-list {
	background: rgb(255, 255, 255); padding: 20px 6px 20px 20px; border: =
1px solid rgb(238, 238, 238); border-image: none; left: 50%; top: 100%; =
width: 242px; text-align: left; margin-left: -135px; position: absolute; =
z-index: 1; cursor: default;
}
.hd-more-list .scrollbox .thumb {
	background: rgb(217, 217, 217); width: 2px;
}
.hd-more-list .scrollbox .scrollbar {
	width: 2px; right: 0px;
}
.hd-more-list .icon {
	background: url("../images/icon/50.png") no-repeat; left: 130px; top: =
-10px; width: 20px; height: 10px; display: inline-block; position: =
absolute; cursor: default;
}
.hd-more-list h2 {
	color: rgb(51, 51, 51); font-size: 16px; cursor: default;
}
.hd-more-list .hd-more-list-box {
	-ms-overflow-x: auto; max-height: 350px;
}
.hd-more-list a {
	color: rgb(51, 51, 51); line-height: 1; margin-top: 20px; display: =
block;
}
.hd-more-list a:hover {
	color: rgb(66, 133, 244);
}
.hd-more-list img {
	margin-right: 16px; vertical-align: middle;
}
.appreciate-nbox {
	background: rgb(255, 255, 255); padding: 60px 50px 30px; border-radius: =
4px; left: 50%; top: 50%; text-align: center; position: fixed;
}
.appreciate-nbox .close {
	background: url("../images/icon/cls_1.png") no-repeat; top: 20px; =
width: 12px; height: 12px; right: 20px; position: absolute;
}
.appreciate-nbox-1 h2 {
	color: rgb(51, 51, 51); font-size: 16px;
}
.appreciate-nbox-1 .list {
	padding-top: 40px; margin-left: -10px;
}
.appreciate-nbox-1 li {
	background: rgb(238, 238, 238); list-style: none; margin: 10px; =
border-radius: 4px; width: 110px; text-align: center; color: rgb(153, =
153, 153); line-height: 50px; float: left; cursor: pointer;
}
.appreciate-nbox-1 li.on {
	background: rgb(255, 95, 83); color: rgb(255, 255, 255);
}
.appreciate-nbox-1 span {
	font-size: 24px;
}
.appreciate-nbox-1 input {
	border-width: 0px 0px 1px; border-style: none none solid; border-color: =
currentColor currentColor rgb(204, 204, 204); border-image: none; width: =
200px; text-align: center; color: rgb(102, 102, 102); line-height: 50px; =
font-size: 18px; margin-top: 30px;
}
.appreciate-nbox-1 .msg {
	color: rgb(191, 191, 191); font-size: 16px; margin-top: 10px;
}
.appreciate-nbox-1 .error-msg {
	height: 20px; color: rgb(255, 95, 83); line-height: 20px; font-size: =
14px;
}
.appreciate-nbox-1 .appreciate-ajax {
	background: rgb(255, 95, 83); margin: 20px auto 0px; width: 280px; =
height: 47px; text-align: center; color: rgb(255, 255, 255); =
line-height: 47px; font-size: 20px; cursor: pointer;
}
.appreciate-nbox-2 {
	margin: 0px auto; width: 250px; display: none;
}
.appreciate-nbox-2 h3 {
	color: rgb(51, 51, 51); line-height: 1; font-size: 24px;
}
.appreciate-nbox-2 img {
	background: rgb(221, 221, 221); width: 180px; height: 180px; =
margin-top: 27px;
}
.appreciate-nbox-2 p {
	line-height: 16px;
}
.appreciate-nbox-2 i {
	width: 16px; height: 16px; margin-right: 8px; vertical-align: =
text-bottom; display: inline-block;
}
.appreciate-nbox-2 .error-msg {
	display: none;
}
.appreciate-nbox-2 .error-1 {
	color: rgb(51, 51, 51); margin-top: 10px;
}
.appreciate-nbox-2 .error-1 em {
	color: rgb(245, 166, 35); font-style: normal;
}
.appreciate-nbox-2 .error-2 {
	color: rgb(51, 51, 51);
}
.appreciate-nbox-2 .error-2 i {
	background: url("../images/icon/60.png") no-repeat;
}
.appreciate-nbox-2 .error-2 span {
	color: rgb(153, 153, 153); font-size: 12px;
}
.appreciate-nbox-2 .error-3 {
	color: rgb(51, 51, 51); margin-top: 10px;
}
.appreciate-nbox-2 .error-3 i {
	background: url("../images/icon/59.png") no-repeat;
}
.author-module {
	background: rgb(247, 247, 248); padding: 35px 22px; margin-top: 70px;
}
.author-module .a-img img {
	border-radius: 50%; width: 78px; height: 78px; display: block;
}
.author-module-center {
	text-align: left; margin-left: 20px;
}
.author-module-center a.h2 {
	color: rgb(61, 70, 77); font-size: 18px; font-weight: normal;
}
.author-module-center a.h2:hover {
	color: rgb(66, 133, 244);
}
.author-module-center h3 {
	color: rgb(157, 157, 157); font-size: 12px; font-weight: normal;
}
.author-module-center h4 {
	color: rgb(102, 102, 102); font-size: 14px; font-weight: normal;
}
.author-module-right {
	margin-top: 23px;
}
.author-module-right a {
	cursor: pointer;
}
.special-column {
	background: rgb(247, 247, 248); padding: 36px 0px 86px; margin-bottom: =
-50px;
}
.special-column .column-tit {
	color: rgb(51, 51, 51); line-height: 1; font-size: 16px;
}
.special-column .column-box {
	margin-top: 35px;
}
.special-column .column-1 .column-box img {
	width: 210px; height: 118px; display: block;
}
.special-column .column-1 .column-box .center {
	margin-left: 20px; max-width: 400px;
}
.special-column .column-1 .column-box .center a.h2 {
	font-weight: normal; max-width: 400px;
}
.special-column .column-1 .column-box .center h3 {
	font-weight: normal; max-width: 400px;
}
.special-column .column-1 .column-box .center h4 {
	font-weight: normal; max-width: 400px;
}
.special-column .column-1 .column-box .center a.h2 {
	color: rgb(51, 51, 51); line-height: 30px; font-size: 20px; display: =
block;
}
.special-column .column-1 .column-box .center a.h2:hover {
	color: rgb(66, 133, 244);
}
.special-column .column-1 .column-box .center h3 {
	color: rgb(112, 112, 112); line-height: 20px; font-size: 12px;
}
.special-column .column-1 .column-box .center h4 {
	color: rgb(153, 153, 153); line-height: 1; font-size: 12px; margin-top: =
10px;
}
.special-column .column-1 .column-box .center h4 a {
	color: rgb(153, 153, 153);
}
.special-column .column-1 .column-box .center h4 a:hover {
	color: rgb(66, 133, 244);
}
.special-column .column-1 .column-box .center h5 {
	margin-top: 20px;
}
.special-column .column-1 .column-box .center h5 span {
	color: rgb(157, 157, 157); font-size: 12px;
}
.special-column .column-1 .column-box .center .price {
	color: rgb(61, 70, 77); margin-right: 26px;
}
.special-column .column-1 .column-box .right {
	padding-top: 46px;
}
.special-column .column-1 .column-box .right a {
	background: rgb(44, 48, 49); padding: 0px 25px; border-radius: 2px; =
color: rgb(255, 255, 255); line-height: 34px; font-size: 16px; display: =
inline-block;
}
.special-column .column-1 .column-box .right a:hover {
	background: rgb(30, 32, 33);
}
.special-column .column-2 .column-box a {
	width: 360px; color: rgb(102, 102, 102); line-height: 32px; float: =
left;
}
.special-column .column-2 .column-box a.left-list {
	margin-left: 35px;
}
.special-column .column-2 .column-box a:hover {
	color: rgb(66, 133, 244);
}
.the-lowest-bg {
	background: url("../images/icon/bgf90.png"); padding: 20px 0px; border: =
1px solid rgb(231, 231, 231); border-image: none; left: 0px; width: =
100%; bottom: 0px; position: fixed; z-index: 1;
}
.the-lowest a {
	display: block;
}
.the-lowest p {
	color: rgb(147, 147, 147); line-height: 35px; font-size: 12px; =
margin-right: 30px; cursor: pointer;
}
.the-lowest a {
	color: rgb(147, 147, 147); line-height: 35px; font-size: 12px; =
margin-right: 30px; cursor: pointer;
}
.the-lowest .b-share {
	color: rgb(147, 147, 147); line-height: 35px; font-size: 12px; =
margin-right: 30px; cursor: pointer;
}
.the-lowest p:hover {
	color: rgb(102, 102, 102);
}
.the-lowest a:hover {
	color: rgb(102, 102, 102);
}
.the-lowest .b-share:hover {
	color: rgb(102, 102, 102);
}
.the-lowest p.on {
	color: rgb(255, 127, 0);
}
.the-lowest a.on {
	color: rgb(255, 127, 0);
}
.the-lowest .b-share.on {
	color: rgb(255, 127, 0);
}
.the-lowest p i {
	width: 22px; height: 20px; margin-right: 4px; vertical-align: middle; =
display: inline-block; background-repeat: no-repeat;
}
.the-lowest a i {
	width: 22px; height: 20px; margin-right: 4px; vertical-align: middle; =
display: inline-block; background-repeat: no-repeat;
}
.the-lowest .b-share i {
	width: 22px; height: 20px; margin-right: 4px; vertical-align: middle; =
display: inline-block; background-repeat: no-repeat;
}
.the-lowest .is-praise {
	text-align: center; line-height: 33px; margin-top: 2px; display: =
inline-block; position: relative;
}
.the-lowest .is-praise span {
	background: url("../images/icon/65.png") no-repeat; color: rgb(153, =
153, 153); padding-top: 3px; padding-bottom: 1px; padding-left: 26px;
}
.the-lowest .is-praise:hover span {
	background: url("../images/icon/65s.png") no-repeat; color: rgb(102, =
102, 102);
}
.the-lowest .is-praise.on span {
	background: url("../images/icon/65es.png") no-repeat; color: rgb(246, =
148, 0);
}
.the-lowest .b-favorites i {
	margin-top: -4px; background-image: url("../images/icon/57.png");
}
.the-lowest .b-favorites:hover i {
	background-image: url("../images/icon/57s.png");
}
.the-lowest .b-favorites.on i {
	background-image: url("../images/icon/57es.png");
}
.the-lowest .b-reply i {
	background-image: url("../images/icon/53.png");
}
.the-lowest .b-reply:hover i {
	background-image: url("../images/icon/53s.png");
}
.the-lowest .b-share {
	position: relative;
}
.the-lowest .b-share:hover {
	padding-right: 140px;
}
.the-lowest .b-share i {
	background-image: url("../images/icon/58.png");
}
.the-lowest .b-share:hover i {
	background-image: url("../images/icon/58s.png");
}
.the-lowest .b-share:hover .bdsharebuttonbox {
	display: block;
}
.the-lowest .b-share .bdsharebuttonbox {
	left: 0px; top: 0px; display: none; position: absolute;
}
.the-lowest .b-share .bds_weixin:hover .code-img {
	display: block;
}
.the-lowest .b-share .bds_weixin:hover .code-icon {
	display: block;
}
.the-lowest .b-share .code-icon {
	background: url("../images/icon/51.png") no-repeat rgb(255, 255, 255); =
left: 7px; top: -21px; width: 14px; height: 10px; display: none; =
position: absolute; z-index: 1;
}
.the-lowest .b-share .code-img {
	background: rgb(255, 255, 255); border: 1px solid rgb(231, 231, 231); =
border-image: none; left: -34px; top: -120px; width: 98px; height: 98px; =
display: none; position: absolute;
}
.the-lowest .b-share a {
	margin: 0px; padding: 0px; top: 0px; width: 32px; height: 32px; =
position: absolute; background-image: url("../images/icon/icon_5.png"); =
background-repeat: no-repeat;
}
.the-lowest .b-share a:hover {
	background-image: url("../images/icon/icon_5s.png");
}
.the-lowest .b-share .p1 {
	background-position: 0px 0px; left: 70px;
}
.the-lowest .b-share .p2 {
	background-position: 0px -59px; left: 110px;
}
.the-lowest .b-share .p3 {
	background-position: 0px bottom; left: 150px;
}
.the-lowest .b-share .p1:hover {
	background-position: 0px 0px;
}
.the-lowest .b-share .p2:hover {
	background-position: 0px -59px;
}
.the-lowest .b-share .p3:hover {
	background-position: 0px bottom;
}
.the-lowest .b-fllow {
=09
}
.the-lowest .b-fllow a {
=09
}
.the-lowest .b-name {
	color: rgb(146, 147, 147); line-height: 35px; margin-right: 20px;
}
.the-lowest .b-name:hover {
	color: rgb(66, 133, 244);
}
.the-lowest .b-img img {
	border-radius: 50%; width: 35px; height: 35px; display: block;
}
.artical-title-list .is-vip-bg-6 {
	width: 32px; height: 32px; margin-right: 12px;
}
.the-lowest .is-vip-bg-6 {
	width: 35px; height: 35px; margin-right: 12px;
}
.artical-title-list .is-vip-bg-6 i {
	right: -5px;
}
.the-lowest .is-vip-bg-6 i {
	right: -5px;
}
.artical-title-list .checkFollow-btn {
	cursor: pointer !important;
}
.artical-Left-blog {
	margin-top: 25px;
}
.tab_name {
	padding: 0px 10px; border-radius: 1px; line-height: 27px; font-size: =
14px; margin-right: 6px; display: inline-block;
}
.tab_name.original {
	background: rgb(249, 211, 204); color: rgb(255, 113, 88);
}
.tab_name.translation {
	background: rgb(252, 220, 202); color: rgb(242, 126, 74);
}
.tab_name.reprint {
	background: rgb(205, 222, 250); color: rgb(89, 153, 255);
}
.artical-Left {
	background: rgb(255, 255, 255); margin: 70px 0px 70px 30px; =
-ms-word-break: break-all;
}
.artical-content-bak {
	padding: 20px 0px !important;
}
.artical-Right {
	width: 300px;
}
.artical-title {
	line-height: 1.2; font-size: 36px; font-weight: normal; margin-top: =
20px;
}
.artical-title span {
	border-radius: 4px; border: 1px solid rgb(255, 102, 0); border-image: =
none; width: 50px; height: 26px; text-align: center; color: rgb(255, =
102, 0); line-height: 26px; font-size: 16px; margin-left: 20px; =
vertical-align: middle; display: inline-block; position: relative;
}
.artical-title span i {
	background: url("../images/icon/20.png") no-repeat; left: -5px; top: =
8px; width: 6px; height: 9px; display: inline-block; position: absolute;
}
.artical-title-list {
	padding-bottom: 20px; margin-top: 30px; border-bottom-color: rgb(238, =
238, 238); border-bottom-width: 1px; border-bottom-style: solid;
}
.artical-title-list .a-img {
	border-radius: 50%; width: 32px; height: 32px;
}
.artical-title-list .a-img img {
	border-radius: 50%; width: 32px; height: 32px;
}
.artical-title-list span {
	background: rgb(186, 186, 186); margin: 16px 2px; width: 2px; height: =
2px; vertical-align: middle;
}
.artical-title-list .name {
	color: rgb(51, 51, 51); line-height: 35px; margin-right: 8px; cursor: =
pointer;
}
.artical-title-list .name:hover {
	color: rgb(66, 133, 244);
}
.artical-title-list .time {
	color: rgb(186, 186, 186); line-height: 35px; font-size: 12px; cursor: =
default;
}
.artical-title-list .comment {
	color: rgb(186, 186, 186); line-height: 35px; font-size: 12px; cursor: =
pointer;
}
.artical-title-list .read {
	margin: 0px 4px 0px 16px; color: rgb(186, 186, 186); line-height: 35px; =
font-size: 12px; cursor: default;
}
.incoming {
	background: rgb(242, 245, 249); padding: 10px 16px; line-height: 30px; =
border-left-color: rgb(66, 133, 244); border-left-width: 2px; =
border-left-style: solid;
}
.artical-content {
	margin-top: 40px;
}
.artical-content a {
	color: rgb(66, 133, 244);
}
.artical-content .tit {
	color: rgb(61, 70, 77); font-size: 24px;
}
.artical-content .highlight {
	background: rgb(242, 245, 249); padding: 10px 16px; line-height: 30px;
}
.artical-copyright {
	color: rgb(159, 163, 167); line-height: 1; font-size: 12px;
}
.artical-copyright a {
	color: rgb(159, 163, 167);
}
.artical-copyright a:hover {
	color: rgb(83, 134, 236);
}
.for-tag a {
	background: rgb(239, 239, 239); padding: 0px 15px; border-radius: 10px; =
color: rgb(102, 102, 102); line-height: 25px; font-size: 12px; =
margin-right: 8px; float: left;
}
.for-tag a:hover {
	background: rgb(225, 225, 225);
}
.for-tag a.last {
	background: rgb(255, 255, 255); margin: 0px; padding: 0px; font-size: =
12px; float: right;
}
.for-tag a.last:hover {
	background: rgb(255, 255, 255); color: rgb(83, 134, 236);
}
.for-tag a.last i {
	background: url("../images/icon/icon_1.png") no-repeat left top; width: =
12px; height: 14px; margin-right: 6px; vertical-align: middle; display: =
inline-block;
}
.for-tag a.last:hover i {
	background: url("../images/icon/icon_1.png") no-repeat -40px top;
}
.artical-list {
	margin-top: 50px;
}
.artical-list a {
	width: 48%; color: rgb(102, 102, 102); line-height: 1; overflow: =
hidden; font-size: 12px; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.artical-list a:hover {
	color: rgb(66, 133, 244);
}
.artical-list a:first-child {
	text-align: right;
}
.more-list {
	margin-top: 30px; position: relative;
}
.more-list p {
	line-height: 1.5; cursor: pointer;
}
.more-list .is-praise {
	text-align: center; line-height: 20px; font-size: 12px; display: =
inline-block; position: relative;
}
.more-list .is-praise span {
	background: url("../images/icon/65.png") no-repeat; color: rgb(153, =
153, 153); padding-top: 3px; padding-bottom: 1px; padding-left: 26px;
}
.more-list .is-praise:hover span {
	background: url("../images/icon/65s.png") no-repeat; color: rgb(102, =
102, 102);
}
.more-list .is-praise.on span {
	background: url("../images/icon/65es.png") no-repeat; color: rgb(246, =
148, 0);
}
.more-list .ead a {
	color: rgb(102, 102, 102);
}
.more-list .ead {
	color: rgb(102, 102, 102);
}
.more-list .ead a:hover {
	color: rgb(66, 133, 244);
}
.more-list .favorites {
	color: rgb(153, 153, 153); margin-left: 20px;
}
.more-list .favorites i {
	background: url("../images/icon/63.png") no-repeat; width: 19px; =
height: 19px; margin-right: 4px; vertical-align: top; display: =
inline-block;
}
.more-list .favorites.on {
	color: rgb(66, 133, 244);
}
.more-list .favorites:hover {
	color: rgb(102, 102, 102);
}
.more-list .favorites.on i {
	background: url("../images/icon/icon_1.png") no-repeat -40px -40px; =
margin-top: 1px;
}
.more-list .favorites:hover i {
	background: url("../images/icon/icon_1.png") no-repeat left -40px; =
margin-top: 1px;
}
.more-list .share-box {
	margin-left: 20px; position: relative;
}
.more-list .share {
	color: rgb(153, 153, 153);
}
.more-list .share i {
	background: url("../images/icon/64.png") no-repeat; width: 16px; =
height: 14px; margin-top: -3px; margin-right: 4px; vertical-align: =
middle; display: inline-block;
}
.more-list .share-box:hover .share {
	color: rgb(102, 102, 102);
}
.more-list .share-box.on .share {
	color: rgb(66, 133, 244);
}
.more-list .share-box:hover .share i {
	background: url("../images/icon/icon_1.png") no-repeat left -80px;
}
.more-list .share-box.on .share i {
	background: url("../images/icon/icon_1.png") no-repeat -40px -80px;
}
.more-list .share-box:hover .bdsharebuttonbox {
	display: block;
}
.more-list .share-box.on .bdsharebuttonbox {
	display: block;
}
.more-list .bdsharebuttonbox {
	background: rgb(255, 255, 255); padding: 10px 14px; border-radius: 6px; =
border: 1px solid rgb(238, 238, 238); border-image: none; left: -30px; =
top: 30px; display: none; position: absolute; z-index: 1;
}
.more-list .bdsharebuttonbox span {
	background: url("../images/icon/50.png") no-repeat rgb(255, 255, 255); =
left: 46px; top: -10px; width: 20px; height: 10px; display: =
inline-block; position: absolute;
}
.more-list .bdsharebuttonbox a {
	margin: 0px 0px 10px 6px; height: 32px; color: rgb(51, 51, 51); =
line-height: 32px; padding-left: 42px; font-size: 14px; display: block; =
background-image: url("../images/icon/icon_5.png"); background-repeat: =
no-repeat;
}
.more-list .bdsharebuttonbox a:hover {
	background-image: url("../images/icon/icon_5s.png");
}
.more-list .bdsharebuttonbox a.bds_sqq {
	background-position: 0px bottom;
}
.more-list .bdsharebuttonbox a.bds_tsina {
	background-position: 0px -59px;
}
.more-list .bdsharebuttonbox a.bds_weixin {
	background-position: 0px 0px;
}
.more-list .bdsharebuttonbox img {
	width: 84px; height: 84px;
}
.you-like-list li {
	list-style: none; width: 45%; float: left;
}
.you-like-list li a {
	background: url("../images/dot2.png") no-repeat left; color: rgb(61, =
70, 77); line-height: 40px; overflow: hidden; padding-left: 18px; =
font-size: 16px; display: block; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.header-con {
	margin-left: -68px;
}
.head-right {
	width: 660px;
}
.comment-creat .header-img {
	display: block;
}
.comment-creat .header-img img {
	border-radius: 50%; width: 40px; height: 40px; overflow: hidden; =
display: block;
}
.textareadiv {
	padding: 10px; border: 1px solid rgb(238, 238, 238); border-image: =
none; width: 648px; height: 100px; color: rgb(153, 153, 153); overflow: =
auto; font-size: 14px;
}
:-ms-input-placeholder.textareadiv {
	color: rgb(169, 169, 169);
}
.fitst-reply .textareadiv {
	width: 584px; height: 58px;
}
.head-right .textareadiv {
	width: 648px; height: 58px;
}
.comment-push {
	margin-top: 4px;
}
.comment-push p {
	line-height: 28px; font-size: 12px;
}
.comment-push .msg {
	color: rgb(150, 150, 150);
}
.comment-push .publish-btn {
	padding: 0px 20px; border-radius: 2px; cursor: pointer;
}
.comment-push .disabled-btn {
	padding: 0px 20px; border-radius: 2px;
}
.comment-push .cancel-btn {
	padding: 0px 20px; color: rgb(153, 153, 153); cursor: pointer;
}
.comment-push .cancel-btn:hover {
	color: rgb(60, 120, 220);
}
.comment-number {
	margin-top: 50px; margin-left: -30px;
}
.comment-number p {
	line-height: 1; display: inline-block;
}
.comment-number .number {
	color: rgb(51, 51, 51); font-size: 16px; font-weight: bold;
}
.comment-number .time {
	padding: 0px 8px; color: rgb(150, 150, 150); line-height: 1; cursor: =
pointer;
}
.comment-number .time:hover {
	color: rgb(102, 102, 102);
}
.comment-number .time.on {
	color: rgb(102, 102, 102);
}
.comment-number .time-first {
	border-right-color: rgb(196, 196, 196); border-right-width: 1px; =
border-right-style: solid;
}
.commentList-box {
	left: 68px; top: 0px; width: 622px; margin-bottom: 50px; position: =
relative;
}
.commentList {
	margin-top: 36px;
}
.commentList-box .header-img {
	margin-right: 10px; display: block;
}
.commentList-box .header-img img {
	border-radius: 50%; width: 38px; height: 38px; display: block;
}
.comment-1 .top .name {
	line-height: 1.2; display: block;
}
.comment-1 .top .name a {
	color: rgb(51, 51, 51);
}
.comment-1 .top .name a:hover {
	color: rgb(66, 133, 244);
}
.comment-1 .top .name span {
	padding: 0px 6px; border-radius: 2px; border: 1px solid rgb(255, 153, =
2); border-image: none; color: rgb(255, 153, 2); line-height: 18px; =
font-size: 12px; position: relative;
}
.comment-2-list .top .author {
	padding: 0px 6px; border-radius: 2px; border: 1px solid rgb(255, 153, =
2); border-image: none; color: rgb(255, 153, 2); line-height: 18px; =
font-size: 12px; position: relative;
}
.comment-1 .top .name span {
	margin-left: 6px; display: inline-block;
}
.comment-2-list .top .author {
	margin-right: 10px;
}
.comment-1 .top .name i {
	background: url("../images/icon/19.png") no-repeat; left: -4px; top: =
4px; width: 4px; height: 7px; display: inline-block; position: absolute;
}
.comment-1 .top .time {
	color: rgb(157, 157, 157); line-height: 1.2; font-size: 12px; =
margin-top: 4px;
}
.comment-1 .top .time span {
	height: 20px; line-height: 20px; margin-left: 20px; display: =
inline-block; cursor: pointer; min-width: 22px; box-sizing: border-box;
}
.comment-1 .top .time span:first-child {
	margin-left: 0px;
}
.comment-1 .top .time .reply-btn {
	background: url("../images/icon/53.png") no-repeat; height: 17px; =
line-height: 15px; padding-left: 24px; margin-top: 3px;
}
.comment-1 .top .time .remove {
	background: url("../images/icon/54.png") no-repeat; height: 18px; =
padding-left: 22px; margin-top: 2px;
}
.comment-1 .top .time .zan {
	background: url("../images/icon/65.png") no-repeat; color: rgb(153, =
153, 153); padding-left: 22px;
}
.comment-1 .top .time .zan:hover {
	background: url("../images/icon/65s.png") no-repeat; color: rgb(102, =
102, 102);
}
.comment-1 .top .time.on .zan {
	background: url("../images/icon/65es.png") no-repeat; color: rgb(246, =
148, 0);
}
.comment-1 .top .time .reply-btn:hover {
	background: url("../images/icon/53s.png") no-repeat; color: rgb(102, =
102, 102);
}
.comment-1 .top .time .remove:hover {
	background: url("../images/icon/54s.png") no-repeat;
}
.comment-1 .con {
	color: rgb(102, 102, 102); line-height: 24px; margin-top: 10px; =
-ms-word-wrap: break-word;
}
.comment-1 .bot {
	margin-top: 14px;
}
.comment-1 .bot p {
	line-height: 18px; margin-right: 20px; float: left; cursor: pointer;
}
.comment-1 .bot .remove {
	color: rgb(157, 157, 157);
}
.comment-1 .bot .zan {
	background: url("../images/good.png") no-repeat left; color: rgb(157, =
157, 157); padding-left: 24px;
}
.comment-1 .bot.on .zan {
	background: url("../images/good_2.png") no-repeat left; color: rgb(102, =
102, 102);
}
.comment-1 .bot .answer {
	background: url("../images/icon/21.png") no-repeat left; color: =
rgb(157, 157, 157); padding-left: 24px;
}
.comment-1 .bot .answer:hover {
	background: url("../images/icon/21s.png") no-repeat left; color: =
rgb(102, 102, 102);
}
.comment-2 {
	padding-left: 16px; margin-top: 20px; border-left-color: rgb(231, 229, =
229); border-left-width: 1px; border-left-style: solid;
}
.comment-2-list li {
	list-style: none; margin: 42px 0px 0px;
}
.comment-2-list li:first-child {
	margin-top: 0px;
}
.comment-2-list .top {
	color: rgb(51, 51, 51); line-height: 30px; font-size: 14px;
}
.comment-2-list .top p {
	line-height: 30px; margin-right: 10px;
}
.comment-2-list .top .name {
	color: rgb(106, 150, 239); line-height: 20px; font-size: 12px; cursor: =
pointer;
}
.comment-2-list .con {
	color: rgb(102, 102, 102); font-size: 14px;
}
.comment-2-list .bot {
	margin-top: 14px;
}
.comment-2-list .bot p {
	color: rgb(157, 157, 157); line-height: 16px; font-size: 12px; float: =
left;
}
.comment-2-list .bot .reply {
	background: url("../images/icon/55.png") no-repeat left; color: =
rgb(157, 157, 157); padding-left: 20px; margin-left: 20px; cursor: =
pointer;
}
.comment-2-list .bot .remove {
	background: url("../images/icon/56.png") no-repeat; color: rgb(157, =
157, 157); padding-left: 20px; margin-left: 20px; cursor: pointer;
}
.comment-2-list .bot .reply:hover {
	background: url("../images/icon/55s.png") no-repeat left; color: =
rgb(102, 102, 102);
}
.comment-2-list .bot .remove:hover {
	background: url("../images/icon/56s.png") no-repeat; color: rgb(102, =
102, 102);
}
.comment-2-list .comment-creat .textarea {
	width: 710px;
}
.comment-2-list .comment-2-list-none {
	display: none;
}
.fitst-reply {
	margin-top: 20px;
}
.new-comment {
	color: rgb(106, 150, 239); font-size: 12px; margin-top: 30px; cursor: =
pointer;
}
.new-comment .top {
	margin: 10px 0px; position: relative; z-index: 0;
}
.new-comment .top p {
	float: left;
}
.new-comment .top .new {
	background: url("../images/icon/25.png") no-repeat left; color: =
rgb(153, 153, 153); padding-left: 24px; cursor: pointer;
}
.new-comment .top .new:hover {
	background: url("../images/icon/25s.png") no-repeat left;
}
.new-comment .top .pack-up {
	color: rgb(153, 153, 153); margin-left: 20px;
}
.new-comment .top .pack-up em {
	font-style: normal;
}
.new-comment .top .pack-up span {
	color: rgb(66, 133, 244); cursor: pointer;
}
.comment-push2 {
	margin-top: 0px; margin-left: 14px;
}
.new-comment .first-publish {
	display: none;
}
.Index .Right h3.BoxTil {
	line-height: 1; padding-left: 10px; font-size: 16px; font-weight: =
normal; margin-bottom: 15px; border-left-color: rgb(66, 133, 244); =
border-left-width: 3px; border-left-style: solid;
}
.Index .Right .Box {
	background: rgb(255, 255, 255); padding: 10px 20px; border: 1px solid =
rgb(238, 238, 238); border-image: none; margin-bottom: 30px;
}
.Index .Right .articles {
	padding: 0px;
}
.filedown {
	line-height: 1;
}
.filedown a {
	color: rgb(83, 134, 236); cursor: pointer;
}
.filedown a:hover {
	text-decoration: underline;
}

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/css/highlight.css

.hljs {
	background: rgb(248, 248, 248); padding: 0.5em; color: rgb(51, 51, 51); =
display: block; -ms-overflow-x: auto;
}
.hljs-comment {
	color: rgb(153, 153, 136); font-style: italic;
}
.hljs-quote {
	color: rgb(153, 153, 136); font-style: italic;
}
.hljs-keyword {
	color: rgb(51, 51, 51); font-weight: bold;
}
.hljs-selector-tag {
	color: rgb(51, 51, 51); font-weight: bold;
}
.hljs-subst {
	color: rgb(51, 51, 51); font-weight: bold;
}
.hljs-number {
	color: rgb(0, 128, 128);
}
.hljs-literal {
	color: rgb(0, 128, 128);
}
.hljs-variable {
	color: rgb(0, 128, 128);
}
.hljs-template-variable {
	color: rgb(0, 128, 128);
}
.hljs-tag .hljs-attr {
	color: rgb(0, 128, 128);
}
.hljs-string {
	color: rgb(221, 17, 68);
}
.hljs-doctag {
	color: rgb(221, 17, 68);
}
.hljs-title {
	color: rgb(153, 0, 0); font-weight: bold;
}
.hljs-section {
	color: rgb(153, 0, 0); font-weight: bold;
}
.hljs-selector-id {
	color: rgb(153, 0, 0); font-weight: bold;
}
.hljs-subst {
	font-weight: normal;
}
.hljs-type {
	color: rgb(68, 85, 136); font-weight: bold;
}
.hljs-class .hljs-title {
	color: rgb(68, 85, 136); font-weight: bold;
}
.hljs-tag {
	color: rgb(0, 0, 128); font-weight: normal;
}
.hljs-name {
	color: rgb(0, 0, 128); font-weight: normal;
}
.hljs-attribute {
	color: rgb(0, 0, 128); font-weight: normal;
}
.hljs-regexp {
	color: rgb(0, 153, 38);
}
.hljs-link {
	color: rgb(0, 153, 38);
}
.hljs-symbol {
	color: rgb(153, 0, 115);
}
.hljs-bullet {
	color: rgb(153, 0, 115);
}
.hljs-built_in {
	color: rgb(0, 134, 179);
}
.hljs-builtin-name {
	color: rgb(0, 134, 179);
}
.hljs-meta {
	color: rgb(153, 153, 153); font-weight: bold;
}
.hljs-deletion {
	background: rgb(255, 221, 221);
}
.hljs-addition {
	background: rgb(221, 255, 221);
}
.hljs-emphasis {
	font-style: italic;
}
.hljs-strong {
	font-weight: bold;
}

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/css/mdeShow.css?v=1.0.0.9

.main-content {
	margin: 0px; padding: 0px; color: rgb(51, 51, 51); line-height: 1.5; =
font-family: "Open Sans","Helvetica Neue",Helvetica,Arial,sans-serif; =
font-size: 16px;
}
.main-content img {
=09
}
.main-content pre {
	white-space: pre-line;
}
.main-content a {
	color: rgb(66, 133, 244); text-decoration: none;
}
.main-content a:hover {
	text-decoration: underline;
}
.main-content :first-child {
	margin-top: 0px;
}
.main-content img {
	margin-bottom: 15px; max-width: 100%;
}
.main-content h1 {
	color: rgb(61, 70, 77); margin-top: 2rem; margin-bottom: 1rem;
}
.main-content h2 {
	color: rgb(61, 70, 77); margin-top: 2rem; margin-bottom: 1rem;
}
.main-content h3 {
	color: rgb(61, 70, 77); margin-top: 2rem; margin-bottom: 1rem;
}
.main-content h4 {
	color: rgb(61, 70, 77); margin-top: 2rem; margin-bottom: 1rem;
}
.main-content h5 {
	color: rgb(61, 70, 77); margin-top: 2rem; margin-bottom: 1rem;
}
.main-content h6 {
	color: rgb(61, 70, 77); margin-top: 2rem; margin-bottom: 1rem;
}
.main-content p {
	color: rgb(61, 70, 77); line-height: 1.8; -ms-word-wrap: break-word;
}
.main-content code {
	padding: 2px 4px; color: rgb(51, 51, 51); line-height: 1.6; =
font-family: Consolas,"Liberation Mono",Menlo,Courier,monospace; =
font-size: 0.9rem; background-color: rgb(242, 245, 249);
}
.main-content pre {
	font: 1rem/normal Consolas, "Liberation Mono", Menlo, Courier, =
monospace; padding: 0.8rem; color: rgb(86, 116, 130); margin-top: 0px; =
margin-bottom: 1rem; -ms-word-wrap: normal; font-size-adjust: none; =
font-stretch: normal; background-color: rgb(242, 245, 249);
}
.main-content pre > code {
	background: none; margin: 0px; padding: 0px; border: 0px currentColor; =
border-image: none; color: rgb(51, 51, 51); font-size: 0.9rem; =
white-space: pre; -ms-word-break: normal;
}
.main-content .highlight {
	margin-bottom: 1rem;
}
.main-content .highlight pre {
	margin-bottom: 0px; -ms-word-break: normal;
}
.main-content .highlight pre {
	padding: 1rem 1.5rem; line-height: 1.45; overflow: auto; font-size: =
0.8rem;
}
.main-content pre {
	padding: 1rem 1.5rem; line-height: 1.45; overflow: auto; font-size: =
0.8rem;
}
.main-content pre code {
	margin: 0px; padding: 0px; border: 0px currentColor; border-image: =
none; line-height: inherit; display: inline; -ms-word-wrap: normal; =
background-color: transparent;
}
.main-content pre tt {
	margin: 0px; padding: 0px; border: 0px currentColor; border-image: =
none; line-height: inherit; display: inline; -ms-word-wrap: normal; =
background-color: transparent;
}
.main-content pre code::before {
	content: normal;
}
.main-content pre code::after {
	content: normal;
}
.main-content pre tt::before {
	content: normal;
}
.main-content pre tt::after {
	content: normal;
}
.main-content ul {
	margin-top: 0px; margin-bottom: 15px; margin-left: 1.2rem;
}
.main-content ol {
	margin-top: 0px; margin-bottom: 15px; margin-left: 1.2rem;
}
.main-content blockquote {
	background: rgb(242, 245, 249); margin: 1rem 0px; padding: 0.8rem =
1.2rem; color: rgb(129, 145, 152); border-left-color: rgb(66, 133, 244); =
border-left-width: 0.2rem; border-left-style: solid;
}
.main-content blockquote > :first-child {
	margin-top: 0px;
}
.main-content blockquote > :last-child {
	margin-bottom: 0px;
}
.main-content table {
	width: 100%; overflow: auto; margin-bottom: 15px; display: block; =
-ms-word-break: keep-all;
}
.main-content table th {
	font-weight: bold;
}
.main-content table th {
	padding: 0.5rem 1rem; border: 1px solid rgb(233, 235, 236); =
border-image: none;
}
.main-content table td {
	padding: 0.5rem 1rem; border: 1px solid rgb(233, 235, 236); =
border-image: none;
}
.main-content dl {
	padding: 0px;
}
.main-content dl dt {
	padding: 0px; font-size: 1rem; font-weight: bold; margin-top: 1rem;
}
.main-content dl dd {
	padding: 0px; margin-bottom: 1rem;
}
.main-content hr {
	margin: 1rem 0px; padding: 0px; border: 0px currentColor; border-image: =
none; height: 2px; background-color: rgb(239, 240, 241);
}
@media screen and (min-width:64em)
{
.main-content {
	margin: 0px auto; padding: 2rem 6rem; font-size: 1rem; max-width: =
64rem;
}
}
@media screen and (max-width:64em) and (min-width:42em)
{
.main-content {
	padding: 2rem 4rem; font-size: 1rem;
}
}
@media screen and (max-width:42em)
{
.main-content {
	padding: 2rem 1rem; font-size: 1rem;
}
}
.site-footer {
	padding-top: 2rem; margin-top: 2rem; border-top-color: rgb(239, 240, =
241); border-top-width: 1px; border-top-style: solid;
}
.site-footer-owner {
	font-weight: bold; display: block;
}
.site-footer-credits {
	color: rgb(129, 145, 152); font-style: italic;
}
@media screen and (min-width:64em)
{
.site-footer {
	font-size: 1rem;
}
}
@media screen and (max-width:64em) and (min-width:42em)
{
.site-footer {
	font-size: 1rem;
}
}
@media screen and (max-width:42em)
{
.site-footer {
	font-size: 0.9rem;
}
}
table {
	border-collapse: collapse; border-spacing: 0;
}
.CodeMirror {
	font: inherit; padding: 10px; border: 1px solid rgb(221, 221, 221); =
border-image: none; height: auto; z-index: 1; min-height: 300px; =
font-size-adjust: inherit; font-stretch: inherit; =
border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;
}
.CodeMirror-scroll {
	min-height: 300px;
}
.CodeMirror-fullscreen {
	background: rgb(255, 255, 255); left: 0px; top: 50px; height: auto; =
right: 0px; bottom: 0px; position: fixed !important; z-index: 9;
}
.CodeMirror-sided {
	width: 50% !important;
}
.editor-toolbar {
	padding: 0px 10px; border-top-color: rgb(187, 187, 187); =
border-right-color: rgb(187, 187, 187); border-left-color: rgb(187, 187, =
187); border-top-width: 1px; border-right-width: 1px; border-left-width: =
1px; border-top-style: solid; border-right-style: solid; =
border-left-style: solid; position: relative; opacity: 0.6; =
border-top-left-radius: 4px; border-top-right-radius: 4px; =
-ms-user-select: none; -webkit-user-select: none; -moz-user-select: =
none; -o-user-select: none; user-select: none;
}
.editor-toolbar::after {
	height: 1px; display: block; content: " ";
}
.editor-toolbar::before {
	height: 1px; display: block; content: " ";
}
.editor-toolbar::before {
	margin-bottom: 8px;
}
.editor-toolbar::after {
	margin-top: 8px;
}
.editor-toolbar:hover {
	opacity: 0.8;
}
.editor-wrapper input.title:focus {
	opacity: 0.8;
}
.editor-wrapper input.title:hover {
	opacity: 0.8;
}
.editor-toolbar.fullscreen {
	background: rgb(255, 255, 255); border: 0px currentColor; border-image: =
none; left: 0px; top: 0px; width: 100%; height: 50px; padding-top: 10px; =
padding-bottom: 10px; white-space: nowrap; position: fixed; z-index: 9; =
-ms-overflow-x: auto; -ms-overflow-y: hidden; box-sizing: border-box; =
opacity: 1;
}
.editor-toolbar.fullscreen::before {
	background: linear-gradient(to right, rgba(255, 255, 255, 1) 0%, =
rgba(255, 255, 255, 0) 100%); margin: 0px; padding: 0px; left: 0px; top: =
0px; width: 20px; height: 50px; position: fixed;
}
.editor-toolbar.fullscreen::after {
	background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, =
rgba(255, 255, 255, 1) 100%); margin: 0px; padding: 0px; top: 0px; =
width: 20px; height: 50px; right: 0px; position: fixed;
}
.editor-toolbar a {
	margin: 0px; border-radius: 3px; border: 1px solid transparent; =
border-image: none; width: 30px; height: 30px; text-align: center; =
color: rgb(44, 62, 80) !important; text-decoration: none !important; =
display: inline-block; cursor: pointer;
}
.editor-toolbar a.active {
	background: rgb(252, 252, 252); border-color: rgb(149, 165, 166);
}
.editor-toolbar a:hover {
	background: rgb(252, 252, 252); border-color: rgb(149, 165, 166);
}
.editor-toolbar a::before {
	line-height: 30px;
}
.editor-toolbar i.separator {
	margin: 0px 6px; width: 0px; color: transparent; text-indent: -10px; =
border-right-color: rgb(255, 255, 255); border-left-color: rgb(217, 217, =
217); border-right-width: 1px; border-left-width: 1px; =
border-right-style: solid; border-left-style: solid; display: =
inline-block;
}
.editor-toolbar a.fa-header-x::after {
	top: 2px; font-family: Arial, "Helvetica Neue", Helvetica, sans-serif; =
font-size: 65%; vertical-align: text-bottom; position: relative;
}
.editor-toolbar a.fa-header-1::after {
	content: "1";
}
.editor-toolbar a.fa-header-2::after {
	content: "2";
}
.editor-toolbar a.fa-header-3::after {
	content: "3";
}
.editor-toolbar a.fa-header-bigger::after {
	content: "=A1=F8";
}
.editor-toolbar a.fa-header-smaller::after {
	content: "=A8=8B";
}
.editor-toolbar.disabled-for-preview a:not(.no-disable) {
	background: rgb(255, 255, 255); border-color: transparent; =
pointer-events: none; text-shadow: inherit;
}
@media only screen and (max-width:700px)
{
.editor-toolbar a.no-mobile {
	display: none;
}
}
.editor-statusbar {
	padding: 8px 10px; text-align: right; color: rgb(149, 150, 148); =
font-size: 12px;
}
.editor-statusbar span {
	margin-left: 1em; display: inline-block; min-width: 4em;
}
.editor-statusbar .lines::before {
	content: "lines: ";
}
.editor-statusbar .words::before {
	content: "words: ";
}
.editor-statusbar .characters::before {
	content: "characters: ";
}
.editor-preview {
	background: rgb(250, 250, 250); padding: 10px; left: 0px; top: 0px; =
width: 100%; height: 100%; overflow: auto; display: none; position: =
absolute; z-index: 7; box-sizing: border-box;
}
.editor-preview-side {
=09
}
.editor-preview-active-side {
	display: block;
}
.editor-preview-active {
	display: block;
}
.editor-preview > p {
	margin-top: 0px; margin-bottom: 0.7rem;
}
.editor-preview-side > p {
	margin-top: 0px; margin-bottom: 0.7rem;
}
.editor-preview pre {
	background: rgb(242, 245, 249); margin-bottom: 10px;
}
.editor-preview-side pre {
	background: rgb(242, 245, 249); margin-bottom: 10px;
}
.editor-preview table td {
	padding: 5px; border: 1px solid rgb(221, 221, 221); border-image: none;
}
.editor-preview table th {
	padding: 5px; border: 1px solid rgb(221, 221, 221); border-image: none;
}
.editor-preview-side table td {
	padding: 5px; border: 1px solid rgb(221, 221, 221); border-image: none;
}
.editor-preview-side table th {
	padding: 5px; border: 1px solid rgb(221, 221, 221); border-image: none;
}
.CodeMirror .CodeMirror-code .cm-tag {
	color: rgb(99, 163, 92);
}
.CodeMirror .CodeMirror-code .cm-attribute {
	color: rgb(121, 93, 163);
}
.CodeMirror .CodeMirror-code .cm-string {
	color: rgb(24, 54, 145);
}
.CodeMirror .CodeMirror-selected {
	background: rgb(217, 217, 217);
}
.CodeMirror .CodeMirror-code .cm-header-1 {
	line-height: 200%; font-size: 200%;
}
.CodeMirror .CodeMirror-code .cm-header-2 {
	line-height: 160%; font-size: 160%;
}
.CodeMirror .CodeMirror-code .cm-header-3 {
	line-height: 125%; font-size: 125%;
}
.CodeMirror .CodeMirror-code .cm-header-4 {
	line-height: 110%; font-size: 110%;
}
.CodeMirror .CodeMirror-code .cm-comment {
	background: rgba(0, 0, 0, 0.05); border-radius: 2px;
}
.CodeMirror .CodeMirror-code .cm-link {
	color: rgb(127, 140, 141);
}
.CodeMirror .CodeMirror-code .cm-url {
	color: rgb(170, 178, 179);
}
.CodeMirror .CodeMirror-code .cm-strikethrough {
	text-decoration: line-through;
}
.CodeMirror .CodeMirror-placeholder {
	opacity: 0.5;
}

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://blog.51cto.com/static/js/ueditor1.4.3/prism.css?v=1.0.1

code[class*=3D'language-'] {
	background: none; text-align: left; color: black; line-height: 1.5; =
font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace; =
word-spacing: normal; white-space: pre; -ms-word-break: normal; =
-ms-word-wrap: normal; text-shadow: 0px 1px white; -ms-hyphens: none; =
-moz-tab-size: 4; -o-tab-size: 4; tab-size: 4; -webkit-hyphens: none; =
-moz-hyphens: none; hyphens: none;
}
pre[class*=3D'language-'] {
	background: none; text-align: left; color: black; line-height: 1.5; =
font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace; =
word-spacing: normal; white-space: pre; -ms-word-break: normal; =
-ms-word-wrap: normal; text-shadow: 0px 1px white; -ms-hyphens: none; =
-moz-tab-size: 4; -o-tab-size: 4; tab-size: 4; -webkit-hyphens: none; =
-moz-hyphens: none; hyphens: none;
}
pre[class*=3D'language-']::selection {
	background: rgb(179, 212, 252); text-shadow: none;
}
pre[class*=3D'language-'] ::selection {
	background: rgb(179, 212, 252); text-shadow: none;
}
code[class*=3D'language-']::selection {
	background: rgb(179, 212, 252); text-shadow: none;
}
code[class*=3D'language-'] ::selection {
	background: rgb(179, 212, 252); text-shadow: none;
}
@media print
{
code[class*=3D'language-'] {
	text-shadow: none;
}
pre[class*=3D'language-'] {
	text-shadow: none;
}
}
pre[class*=3D'language-'] {
	margin: 0.5em 0px; padding: 1em; overflow: auto;
}
:not(pre) > code[class*=3D'language-'] {
	background: rgb(245, 242, 240);
}
pre[class*=3D'language-'] {
	background: rgb(245, 242, 240);
}
:not(pre) > code[class*=3D'language-'] {
	padding: 0.1em; border-radius: 0.3em; white-space: normal;
}
.token.comment {
	color: slategray;
}
.token.prolog {
	color: slategray;
}
.token.doctype {
	color: slategray;
}
.token.cdata {
	color: slategray;
}
.token.punctuation {
	color: rgb(153, 153, 153);
}
.namespace {
	opacity: 0.7;
}
.token.property {
	color: rgb(153, 0, 85);
}
.token.tag {
	color: rgb(153, 0, 85);
}
.token.boolean {
	color: rgb(153, 0, 85);
}
.token.number {
	color: rgb(153, 0, 85);
}
.token.constant {
	color: rgb(153, 0, 85);
}
.token.symbol {
	color: rgb(153, 0, 85);
}
.token.deleted {
	color: rgb(153, 0, 85);
}
.token.selector {
	color: rgb(102, 153, 0);
}
.token.attr-name {
	color: rgb(102, 153, 0);
}
.token.string {
	color: rgb(102, 153, 0);
}
.token.char {
	color: rgb(102, 153, 0);
}
.token.builtin {
	color: rgb(102, 153, 0);
}
.token.inserted {
	color: rgb(102, 153, 0);
}
.token.operator {
	background: hsla(0, 0%, 100%, 0.5); color: rgb(154, 110, 58);
}
.token.entity {
	background: hsla(0, 0%, 100%, 0.5); color: rgb(154, 110, 58);
}
.token.url {
	background: hsla(0, 0%, 100%, 0.5); color: rgb(154, 110, 58);
}
.language-css .token.string {
	background: hsla(0, 0%, 100%, 0.5); color: rgb(154, 110, 58);
}
.style .token.string {
	background: hsla(0, 0%, 100%, 0.5); color: rgb(154, 110, 58);
}
.token.atrule {
	color: rgb(0, 119, 170);
}
.token.attr-value {
	color: rgb(0, 119, 170);
}
.token.keyword {
	color: rgb(0, 119, 170);
}
.token.function {
	color: rgb(221, 74, 104);
}
.token.class-name {
	color: rgb(221, 74, 104);
}
.token.regex {
	color: rgb(238, 153, 0);
}
.token.important {
	color: rgb(238, 153, 0);
}
.token.variable {
	color: rgb(238, 153, 0);
}
.token.important {
	font-weight: bold;
}
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}
.token.entity {
	cursor: help;
}
div.code-toolbar {
	position: relative;
}
div.code-toolbar > .toolbar {
	transition:opacity 0.3s ease-in-out; top: 0.3em; right: 0.2em; =
position: absolute; opacity: 0;
}
div.code-toolbar:hover > .toolbar {
	opacity: 1;
}
div.code-toolbar > .toolbar .toolbar-item {
	display: inline-block;
}
div.code-toolbar > .toolbar a {
	cursor: pointer;
}
div.code-toolbar > .toolbar button {
	background: none; padding: 0px; border: 0px currentColor; border-image: =
none; color: inherit; line-height: normal; overflow: visible; =
font-family: inherit; font-size: inherit; font-style: inherit; =
font-variant: inherit; font-weight: inherit; font-size-adjust: inherit; =
font-stretch: inherit; -ms-user-select: none; -webkit-user-select: none; =
-moz-user-select: none;
}
div.code-toolbar > .toolbar a {
	background: rgba(224, 224, 224, 0.2); padding: 0px 0.5em; =
border-radius: 0.5em; color: rgb(187, 187, 187); font-size: 0.8em; =
box-shadow: 0px 2px 0px 0px rgba(0,0,0,0.2);
}
div.code-toolbar > .toolbar button {
	background: rgba(224, 224, 224, 0.2); padding: 0px 0.5em; =
border-radius: 0.5em; color: rgb(187, 187, 187); font-size: 0.8em; =
box-shadow: 0px 2px 0px 0px rgba(0,0,0,0.2);
}
div.code-toolbar > .toolbar span {
	background: rgba(224, 224, 224, 0.2); padding: 0px 0.5em; =
border-radius: 0.5em; color: rgb(187, 187, 187); font-size: 0.8em; =
box-shadow: 0px 2px 0px 0px rgba(0,0,0,0.2);
}
div.code-toolbar > .toolbar a:hover {
	color: inherit; text-decoration: none;
}
div.code-toolbar > .toolbar a:focus {
	color: inherit; text-decoration: none;
}
div.code-toolbar > .toolbar button:hover {
	color: inherit; text-decoration: none;
}
div.code-toolbar > .toolbar button:focus {
	color: inherit; text-decoration: none;
}
div.code-toolbar > .toolbar span:hover {
	color: inherit; text-decoration: none;
}
div.code-toolbar > .toolbar span:focus {
	color: inherit; text-decoration: none;
}

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/css/tinyscrollbar.css

.scrollbox {
	position: relative;
}
.scrollbox .viewport {
	height: 300px; overflow: hidden; position: relative;
}
.scrollbox .overview {
	list-style: none; margin: 0px; left: 0px; top: 0px; position: absolute;
}
.scrollbox .scrollbar {
	background: rgb(255, 255, 255); top: 0px; width: 6px; right: 8px; =
position: absolute;
}
.scrollbox .track {
	background: rgb(255, 255, 255); width: 6px; height: 100%; position: =
relative;
}
.scrollbox .thumb {
	background: rgb(235, 235, 235); border-radius: 3px; left: 0px; top: =
0px; width: 6px; height: 20px; overflow: hidden; position: absolute; =
cursor: pointer;
}
.scrollbox .thumb .end {
	width: 0px; height: 0px; overflow: hidden;
}
.scrollbox .disable {
	display: none;
}
.noSelect {
	-webkit-user-select: none; -moz-user-select: none; -o-user-select: =
none; user-select: none; -khtml-user-select: none;
}

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/center/js/jquery.min.js

/*! jQuery v1.7.1 jquery.com | jquery.org/license */=0A=
(function(a,b){function cy(a){return =
f.isWindow(a)?a:a.nodeType=3D=3D=3D9?a.defaultView||a.parentWindow:!1}fun=
ction cv(a){if(!ck[a]){var =
b=3Dc.body,d=3Df("<"+a+">").appendTo(b),e=3Dd.css("display");d.remove();i=
f(e=3D=3D=3D"none"||e=3D=3D=3D""){cl||(cl=3Dc.createElement("iframe"),cl.=
frameBorder=3Dcl.width=3Dcl.height=3D0),b.appendChild(cl);if(!cm||!cl.cre=
ateElement)cm=3D(cl.contentWindow||cl.contentDocument).document,cm.write(=
(c.compatMode=3D=3D=3D"CSS1Compat"?"<!doctype =
html>":"")+"<html><body>"),cm.close();d=3Dcm.createElement(a),cm.body.app=
endChild(d),e=3Df.css(d,"display"),b.removeChild(cl)}ck[a]=3De}return =
ck[a]}function cu(a,b){var =
c=3D{};f.each(cq.concat.apply([],cq.slice(0,b)),function(){c[this]=3Da});=
return c}function ct(){cr=3Db}function cs(){setTimeout(ct,0);return =
cr=3Df.now()}function cj(){try{return new =
a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ci(){try{return =
new a.XMLHttpRequest}catch(b){}}function =
cc(a,c){a.dataFilter&&(c=3Da.dataFilter(c,a.dataType));var =
d=3Da.dataTypes,e=3D{},g,h,i=3Dd.length,j,k=3Dd[0],l,m,n,o,p;for(g=3D1;g<=
i;g++){if(g=3D=3D=3D1)for(h in a.converters)typeof =
h=3D=3D"string"&&(e[h.toLowerCase()]=3Da.converters[h]);l=3Dk,k=3Dd[g];if=
(k=3D=3D=3D"*")k=3Dl;else if(l!=3D=3D"*"&&l!=3D=3Dk){m=3Dl+" =
"+k,n=3De[m]||e["* "+k];if(!n){p=3Db;for(o in e){j=3Do.split(" =
");if(j[0]=3D=3D=3Dl||j[0]=3D=3D=3D"*"){p=3De[j[1]+" =
"+k];if(p){o=3De[o],o=3D=3D=3D!0?n=3Dp:p=3D=3D=3D!0&&(n=3Do);break}}}}!n&=
&!p&&f.error("No conversion from "+m.replace(" "," to =
")),n!=3D=3D!0&&(c=3Dn?n(c):p(o(c)))}}return c}function cb(a,c,d){var =
e=3Da.contents,f=3Da.dataTypes,g=3Da.responseFields,h,i,j,k;for(i in g)i =
in =
d&&(c[g[i]]=3Dd[i]);while(f[0]=3D=3D=3D"*")f.shift(),h=3D=3D=3Db&&(h=3Da.=
mimeType||c.getResponseHeader("content-type"));if(h)for(i in =
e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in =
d)j=3Df[0];else{for(i in d){if(!f[0]||a.converters[i+" =
"+f[0]]){j=3Di;break}k||(k=3Di)}j=3Dj||k}if(j){j!=3D=3Df[0]&&f.unshift(j)=
;return d[j]}}function =
ca(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bE.test(a)?d(a,e):c=
a(a+"["+(typeof e=3D=3D"object"||f.isArray(e)?b:"")+"]",e,c,d)});else =
if(!c&&b!=3Dnull&&typeof b=3D=3D"object")for(var e in =
b)ca(a+"["+e+"]",b[e],c,d);else d(a,b)}function b_(a,c){var =
d,e,g=3Df.ajaxSettings.flatOptions||{};for(d in =
c)c[d]!=3D=3Db&&((g[d]?a:e||(e=3D{}))[d]=3Dc[d]);e&&f.extend(!0,a,e)}func=
tion b$(a,c,d,e,f,g){f=3Df||c.dataTypes[0],g=3Dg||{},g[f]=3D!0;var =
h=3Da[f],i=3D0,j=3Dh?h.length:0,k=3Da=3D=3D=3DbT,l;for(;i<j&&(k||!l);i++)=
l=3Dh[i](c,d,e),typeof =
l=3D=3D"string"&&(!k||g[l]?l=3Db:(c.dataTypes.unshift(l),l=3Db$(a,c,d,e,l=
,g)));(k||!l)&&!g["*"]&&(l=3Db$(a,c,d,e,"*",g));return l}function =
bZ(a){return function(b,c){typeof =
b!=3D"string"&&(c=3Db,b=3D"*");if(f.isFunction(c)){var =
d=3Db.toLowerCase().split(bP),e=3D0,g=3Dd.length,h,i,j;for(;e<g;e++)h=3Dd=
[e],j=3D/^\+/.test(h),j&&(h=3Dh.substr(1)||"*"),i=3Da[h]=3Da[h]||[],i[j?"=
unshift":"push"](c)}}}function bC(a,b,c){var =
d=3Db=3D=3D=3D"width"?a.offsetWidth:a.offsetHeight,e=3Db=3D=3D=3D"width"?=
bx:by,g=3D0,h=3De.length;if(d>0){if(c!=3D=3D"border")for(;g<h;g++)c||(d-=3D=
parseFloat(f.css(a,"padding"+e[g]))||0),c=3D=3D=3D"margin"?d+=3DparseFloa=
t(f.css(a,c+e[g]))||0:d-=3DparseFloat(f.css(a,"border"+e[g]+"Width"))||0;=
return =
d+"px"}d=3Dbz(a,b,b);if(d<0||d=3D=3Dnull)d=3Da.style[b]||0;d=3DparseFloat=
(d)||0;if(c)for(;g<h;g++)d+=3DparseFloat(f.css(a,"padding"+e[g]))||0,c!=3D=
=3D"padding"&&(d+=3DparseFloat(f.css(a,"border"+e[g]+"Width"))||0),c=3D=3D=
=3D"margin"&&(d+=3DparseFloat(f.css(a,c+e[g]))||0);return =
d+"px"}function =
bp(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval=
((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentN=
ode&&b.parentNode.removeChild(b)}function bo(a){var =
b=3Dc.createElement("div");bh.appendChild(b),b.innerHTML=3Da.outerHTML;re=
turn b.firstChild}function bn(a){var =
b=3D(a.nodeName||"").toLowerCase();b=3D=3D=3D"input"?bm(a):b!=3D=3D"scrip=
t"&&typeof =
a.getElementsByTagName!=3D"undefined"&&f.grep(a.getElementsByTagName("inp=
ut"),bm)}function =
bm(a){if(a.type=3D=3D=3D"checkbox"||a.type=3D=3D=3D"radio")a.defaultCheck=
ed=3Da.checked}function bl(a){return typeof =
a.getElementsByTagName!=3D"undefined"?a.getElementsByTagName("*"):typeof =
a.querySelectorAll!=3D"undefined"?a.querySelectorAll("*"):[]}function =
bk(a,b){var =
c;if(b.nodeType=3D=3D=3D1){b.clearAttributes&&b.clearAttributes(),b.merge=
Attributes&&b.mergeAttributes(a),c=3Db.nodeName.toLowerCase();if(c=3D=3D=3D=
"object")b.outerHTML=3Da.outerHTML;else =
if(c!=3D=3D"input"||a.type!=3D=3D"checkbox"&&a.type!=3D=3D"radio"){if(c=3D=
=3D=3D"option")b.selected=3Da.defaultSelected;else =
if(c=3D=3D=3D"input"||c=3D=3D=3D"textarea")b.defaultValue=3Da.defaultValu=
e}else =
a.checked&&(b.defaultChecked=3Db.checked=3Da.checked),b.value!=3D=3Da.val=
ue&&(b.value=3Da.value);b.removeAttribute(f.expando)}}function =
bj(a,b){if(b.nodeType=3D=3D=3D1&&!!f.hasData(a)){var =
c,d,e,g=3Df._data(a),h=3Df._data(b,g),i=3Dg.events;if(i){delete =
h.handle,h.events=3D{};for(c in =
i)for(d=3D0,e=3Di[c].length;d<e;d++)f.event.add(b,c+(i[c][d].namespace?".=
":"")+i[c][d].namespace,i[c][d],i[c][d].data)}h.data&&(h.data=3Df.extend(=
{},h.data))}}function bi(a,b){return =
f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a=
.ownerDocument.createElement("tbody")):a}function U(a){var =
b=3DV.split("|"),c=3Da.createDocumentFragment();if(c.createElement)while(=
b.length)c.createElement(b.pop());return c}function =
T(a,b,c){b=3Db||0;if(f.isFunction(b))return f.grep(a,function(a,d){var =
e=3D!!b.call(a,d,a);return e=3D=3D=3Dc});if(b.nodeType)return =
f.grep(a,function(a,d){return a=3D=3D=3Db=3D=3D=3Dc});if(typeof =
b=3D=3D"string"){var d=3Df.grep(a,function(a){return =
a.nodeType=3D=3D=3D1});if(O.test(b))return =
f.filter(b,d,!c);b=3Df.filter(b,d)}return f.grep(a,function(a,d){return =
f.inArray(a,b)>=3D0=3D=3D=3Dc})}function =
S(a){return!a||!a.parentNode||a.parentNode.nodeType=3D=3D=3D11}function =
K(){return!0}function J(){return!1}function n(a,b,c){var =
d=3Db+"defer",e=3Db+"queue",g=3Db+"mark",h=3Df._data(a,d);h&&(c=3D=3D=3D"=
queue"||!f._data(a,e))&&(c=3D=3D=3D"mark"||!f._data(a,g))&&setTimeout(fun=
ction(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)=
}function m(a){for(var b in =
a){if(b=3D=3D=3D"data"&&f.isEmptyObject(a[b]))continue;if(b!=3D=3D"toJSON=
")return!1}return!0}function =
l(a,c,d){if(d=3D=3D=3Db&&a.nodeType=3D=3D=3D1){var =
e=3D"data-"+c.replace(k,"-$1").toLowerCase();d=3Da.getAttribute(e);if(typ=
eof =
d=3D=3D"string"){try{d=3Dd=3D=3D=3D"true"?!0:d=3D=3D=3D"false"?!1:d=3D=3D=
=3D"null"?null:f.isNumeric(d)?parseFloat(d):j.test(d)?f.parseJSON(d):d}ca=
tch(g){}f.data(a,c,d)}else d=3Db}return d}function h(a){var =
b=3Dg[a]=3D{},c,d;a=3Da.split(/\s+/);for(c=3D0,d=3Da.length;c<d;c++)b[a[c=
]]=3D!0;return b}var =
c=3Da.document,d=3Da.navigator,e=3Da.location,f=3Dfunction(){function =
J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTim=
eout(J,1);return}e.ready()}}var e=3Dfunction(a,b){return new =
e.fn.init(a,b,h)},f=3Da.jQuery,g=3Da.$,h,i=3D/^(?:[^#<]*(<[\w\W]+>)[^>]*$=
|#([\w\-]*)$)/,j=3D/\S/,k=3D/^\s+/,l=3D/\s+$/,m=3D/^<(\w+)\s*\/?>(?:<\/\1=
>)?$/,n=3D/^[\],:{}\s]*$/,o=3D/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=3D/=
"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=3D/(?=
:^|:|,)(?:\s*\[)+/g,r=3D/(webkit)[ =
\/]([\w.]+)/,s=3D/(opera)(?:.*version)?[ \/]([\w.]+)/,t=3D/(msie) =
([\w.]+)/,u=3D/(mozilla)(?:.*? =
rv:([\w.]+))?/,v=3D/-([a-z]|[0-9])/ig,w=3D/^-ms-/,x=3Dfunction(a,b){retur=
n(b+"").toUpperCase()},y=3Dd.userAgent,z,A,B,C=3DObject.prototype.toStrin=
g,D=3DObject.prototype.hasOwnProperty,E=3DArray.prototype.push,F=3DArray.=
prototype.slice,G=3DString.prototype.trim,H=3DArray.prototype.indexOf,I=3D=
{};e.fn=3De.prototype=3D{constructor:e,init:function(a,d,f){var =
g,h,j,k;if(!a)return =
this;if(a.nodeType){this.context=3Dthis[0]=3Da,this.length=3D1;return =
this}if(a=3D=3D=3D"body"&&!d&&c.body){this.context=3Dc,this[0]=3Dc.body,t=
his.selector=3Da,this.length=3D1;return this}if(typeof =
a=3D=3D"string"){a.charAt(0)!=3D=3D"<"||a.charAt(a.length-1)!=3D=3D">"||a=
.length<3?g=3Di.exec(a):g=3D[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=3D=
d instanceof =
e?d[0]:d,k=3Dd?d.ownerDocument||d:c,j=3Dm.exec(a),j?e.isPlainObject(d)?(a=
=3D[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=3D[k.createElement(j=
[1])]:(j=3De.buildFragment([g[1]],[k]),a=3D(j.cacheable?e.clone(j.fragmen=
t):j.fragment).childNodes);return =
e.merge(this,a)}h=3Dc.getElementById(g[2]);if(h&&h.parentNode){if(h.id!=3D=
=3Dg[2])return =
f.find(a);this.length=3D1,this[0]=3Dh}this.context=3Dc,this.selector=3Da;=
return =
this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.i=
sFunction(a))return =
f.ready(a);a.selector!=3D=3Db&&(this.selector=3Da.selector,this.context=3D=
a.context);return =
e.makeArray(a,this)},selector:"",jquery:"1.7.1",length:0,size:function(){=
return this.length},toArray:function(){return =
F.call(this,0)},get:function(a){return =
a=3D=3Dnull?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:fun=
ction(a,b,c){var =
d=3Dthis.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObjec=
t=3Dthis,d.context=3Dthis.context,b=3D=3D=3D"find"?d.selector=3Dthis.sele=
ctor+(this.selector?" =
":"")+c:b&&(d.selector=3Dthis.selector+"."+b+"("+c+")");return =
d},each:function(a,b){return =
e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return =
this},eq:function(a){a=3D+a;return =
a=3D=3D=3D-1?this.slice(a):this.slice(a,a+1)},first:function(){return =
this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return =
this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","=
))},map:function(a){return =
this.pushStack(e.map(this,function(b,c){return =
a.call(b,c,b)}))},end:function(){return =
this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].sp=
lice},e.fn.init.prototype=3De.fn,e.extend=3De.fn.extend=3Dfunction(){var =
a,c,d,f,g,h,i=3Darguments[0]||{},j=3D1,k=3Darguments.length,l=3D!1;typeof=
 i=3D=3D"boolean"&&(l=3Di,i=3Darguments[1]||{},j=3D2),typeof =
i!=3D"object"&&!e.isFunction(i)&&(i=3D{}),k=3D=3D=3Dj&&(i=3Dthis,--j);for=
(;j<k;j++)if((a=3Darguments[j])!=3Dnull)for(c in =
a){d=3Di[c],f=3Da[c];if(i=3D=3D=3Df)continue;l&&f&&(e.isPlainObject(f)||(=
g=3De.isArray(f)))?(g?(g=3D!1,h=3Dd&&e.isArray(d)?d:[]):h=3Dd&&e.isPlainO=
bject(d)?d:{},i[c]=3De.extend(l,h,f)):f!=3D=3Db&&(i[c]=3Df)}return =
i},e.extend({noConflict:function(b){a.$=3D=3D=3De&&(a.$=3Dg),b&&a.jQuery=3D=
=3D=3De&&(a.jQuery=3Df);return =
e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!=
0)},ready:function(a){if(a=3D=3D=3D!0&&!--e.readyWait||a!=3D=3D!0&&!e.isR=
eady){if(!c.body)return =
setTimeout(e.ready,1);e.isReady=3D!0;if(a!=3D=3D!0&&--e.readyWait>0)retur=
n;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bi=
ndReady:function(){if(!A){A=3De.Callbacks("once =
memory");if(c.readyState=3D=3D=3D"complete")return =
setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMConten=
tLoaded",B,!1),a.addEventListener("load",e.ready,!1);else =
if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("on=
load",e.ready);var =
b=3D!1;try{b=3Da.frameElement=3D=3Dnull}catch(d){}c.documentElement.doScr=
oll&&b&&J()}}},isFunction:function(a){return =
e.type(a)=3D=3D=3D"function"},isArray:Array.isArray||function(a){return =
e.type(a)=3D=3D=3D"array"},isWindow:function(a){return a&&typeof =
a=3D=3D"object"&&"setInterval"in =
a},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:f=
unction(a){return =
a=3D=3Dnull?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){i=
f(!a||e.type(a)!=3D=3D"object"||a.nodeType||e.isWindow(a))return!1;try{if=
(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype=
,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return =
d=3D=3D=3Db||D.call(a,d)},isEmptyObject:function(a){for(var b in =
a)return!1;return!0},error:function(a){throw new =
Error(a)},parseJSON:function(b){if(typeof b!=3D"string"||!b)return =
null;b=3De.trim(b);if(a.JSON&&a.JSON.parse)return =
a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))=
return(new Function("return "+b))();e.error("Invalid JSON: =
"+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=3Dnew =
DOMParser,d=3Df.parseFromString(c,"text/xml")):(d=3Dnew =
ActiveXObject("Microsoft.XMLDOM"),d.async=3D"false",d.loadXML(c))}catch(g=
){d=3Db}(!d||!d.documentElement||d.getElementsByTagName("parsererror").le=
ngth)&&e.error("Invalid XML: "+c);return =
d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||=
function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return =
a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return =
a.nodeName&&a.nodeName.toUpperCase()=3D=3D=3Db.toUpperCase()},each:functi=
on(a,c,d){var =
f,g=3D0,h=3Da.length,i=3Dh=3D=3D=3Db||e.isFunction(a);if(d){if(i){for(f =
in a)if(c.apply(a[f],d)=3D=3D=3D!1)break}else =
for(;g<h;)if(c.apply(a[g++],d)=3D=3D=3D!1)break}else if(i){for(f in =
a)if(c.call(a[f],f,a[f])=3D=3D=3D!1)break}else =
for(;g<h;)if(c.call(a[g],g,a[g++])=3D=3D=3D!1)break;return =
a},trim:G?function(a){return =
a=3D=3Dnull?"":G.call(a)}:function(a){return =
a=3D=3Dnull?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b=
){var c=3Db||[];if(a!=3Dnull){var =
d=3De.type(a);a.length=3D=3Dnull||d=3D=3D=3D"string"||d=3D=3D=3D"function=
"||d=3D=3D=3D"regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return =
c},inArray:function(a,b,c){var d;if(b){if(H)return =
H.call(b,a,c);d=3Db.length,c=3Dc?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(=
c in b&&b[c]=3D=3D=3Da)return c}return-1},merge:function(a,c){var =
d=3Da.length,e=3D0;if(typeof c.length=3D=3D"number")for(var =
f=3Dc.length;e<f;e++)a[d++]=3Dc[e];else =
while(c[e]!=3D=3Db)a[d++]=3Dc[e++];a.length=3Dd;return =
a},grep:function(a,b,c){var d=3D[],e;c=3D!!c;for(var =
f=3D0,g=3Da.length;f<g;f++)e=3D!!b(a[f],f),c!=3D=3De&&d.push(a[f]);return=
 d},map:function(a,c,d){var f,g,h=3D[],i=3D0,j=3Da.length,k=3Da =
instanceof e||j!=3D=3Db&&typeof =
j=3D=3D"number"&&(j>0&&a[0]&&a[j-1]||j=3D=3D=3D0||e.isArray(a));if(k)for(=
;i<j;i++)f=3Dc(a[i],i,d),f!=3Dnull&&(h[h.length]=3Df);else for(g in =
a)f=3Dc(a[g],g,d),f!=3Dnull&&(h[h.length]=3Df);return =
h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof =
c=3D=3D"string"){var d=3Da[c];c=3Da,a=3Dd}if(!e.isFunction(a))return =
b;var f=3DF.call(arguments,2),g=3Dfunction(){return =
a.apply(c,f.concat(F.call(arguments)))};g.guid=3Da.guid=3Da.guid||g.guid|=
|e.guid++;return g},access:function(a,c,d,f,g,h){var =
i=3Da.length;if(typeof c=3D=3D"object"){for(var j in =
c)e.access(a,j,c[j],f,g,d);return =
a}if(d!=3D=3Db){f=3D!h&&f&&e.isFunction(d);for(var =
k=3D0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return =
i?g(a[0],c):b},now:function(){return(new =
Date).getTime()},uaMatch:function(a){a=3Da.toLowerCase();var =
b=3Dr.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)=
||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function =
a(b,c){return new =
a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=3Dthis,a.fn=3Da.prototype=
=3Dthis(),a.fn.constructor=3Da,a.sub=3Dthis.sub,a.fn.init=3Dfunction(d,f)=
{f&&f instanceof e&&!(f instanceof a)&&(f=3Da(f));return =
e.fn.init.call(this,d,f,b)},a.fn.init.prototype=3Da.fn;var =
b=3Da(c);return a},browser:{}}),e.each("Boolean Number String Function =
Array Date RegExp Object".split(" "),function(a,b){I["[object =
"+b+"]"]=3Db.toLowerCase()}),z=3De.uaMatch(y),z.browser&&(e.browser[z.bro=
wser]=3D!0,e.browser.version=3Dz.version),e.browser.webkit&&(e.browser.sa=
fari=3D!0),j.test("=C2=A0")&&(k=3D/^[\s\xA0]+/,l=3D/[\s\xA0]+$/),h=3De(c)=
,c.addEventListener?B=3Dfunction(){c.removeEventListener("DOMContentLoade=
d",B,!1),e.ready()}:c.attachEvent&&(B=3Dfunction(){c.readyState=3D=3D=3D"=
complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return =
e}(),g=3D{};f.Callbacks=3Dfunction(a){a=3Da?g[a]||h(a):{};var =
c=3D[],d=3D[],e,i,j,k,l,m=3Dfunction(b){var =
d,e,g,h,i;for(d=3D0,e=3Db.length;d<e;d++)g=3Db[d],h=3Df.type(g),h=3D=3D=3D=
"array"?m(g):h=3D=3D=3D"function"&&(!a.unique||!o.has(g))&&c.push(g)},n=3D=
function(b,f){f=3Df||[],e=3D!a.memory||[b,f],i=3D!0,l=3Dj||0,j=3D0,k=3Dc.=
length;for(;c&&l<k;l++)if(c[l].apply(b,f)=3D=3D=3D!1&&a.stopOnFalse){e=3D=
!0;break}i=3D!1,c&&(a.once?e=3D=3D=3D!0?o.disable():c=3D[]:d&&d.length&&(=
e=3Dd.shift(),o.fireWith(e[0],e[1])))},o=3D{add:function(){if(c){var =
a=3Dc.length;m(arguments),i?k=3Dc.length:e&&e!=3D=3D!0&&(j=3Da,n(e[0],e[1=
]))}return this},remove:function(){if(c){var =
b=3Darguments,d=3D0,e=3Db.length;for(;d<e;d++)for(var =
f=3D0;f<c.length;f++)if(b[d]=3D=3D=3Dc[f]){i&&f<=3Dk&&(k--,f<=3Dl&&l--),c=
.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var =
b=3D0,d=3Dc.length;for(;b<d;b++)if(a=3D=3D=3Dc[b])return!0}return!1},empt=
y:function(){c=3D[];return this},disable:function(){c=3Dd=3De=3Db;return =
this},disabled:function(){return!c},lock:function(){d=3Db,(!e||e=3D=3D=3D=
!0)&&o.disable();return =
this},locked:function(){return!d},fireWith:function(b,c){d&&(i?a.once||d.=
push([b,c]):(!a.once||!e)&&n(b,c));return =
this},fire:function(){o.fireWith(this,arguments);return =
this},fired:function(){return!!e}};return o};var =
i=3D[].slice;f.extend({Deferred:function(a){var b=3Df.Callbacks("once =
memory"),c=3Df.Callbacks("once =
memory"),d=3Df.Callbacks("memory"),e=3D"pending",g=3D{resolve:b,reject:c,=
notify:d},h=3D{done:b.add,fail:c.add,progress:d.add,state:function(){retu=
rn =
e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).f=
ail(b).progress(c);return =
this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments)=
;return this},pipe:function(a,b,c){return =
f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progr=
ess:[c,"notify"]},function(a,b){var =
c=3Db[0],e=3Db[1],g;f.isFunction(c)?i[a](function(){g=3Dc.apply(this,argu=
ments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.n=
otify):d[e+"With"](this=3D=3D=3Di?d:this,[g])}):i[a](d[e])})}).promise()}=
,promise:function(a){if(a=3D=3Dnull)a=3Dh;else for(var b in =
h)a[b]=3Dh[b];return a}},i=3Dh.promise({}),j;for(j in =
g)i[j]=3Dg[j].fire,i[j+"With"]=3Dg[j].fireWith;i.done(function(){e=3D"res=
olved"},c.disable,d.lock).fail(function(){e=3D"rejected"},b.disable,d.loc=
k),a&&a.call(i,i);return i},when:function(a){function m(a){return =
function(b){e[a]=3Darguments.length>1?i.call(arguments,0):b,j.notifyWith(=
k,e)}}function l(a){return =
function(c){b[a]=3Darguments.length>1?i.call(arguments,0):c,--g||j.resolv=
eWith(j,b)}}var =
b=3Di.call(arguments,0),c=3D0,d=3Db.length,e=3DArray(d),g=3Dd,h=3Dd,j=3Dd=
<=3D1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=3Dj.promise();if(d>1){=
for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise(=
).then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else =
j!=3D=3Da&&j.resolveWith(j,d?[a]:[]);return =
k}}),f.support=3Dfunction(){var =
b,d,e,g,h,i,j,k,l,m,n,o,p,q=3Dc.createElement("div"),r=3Dc.documentElemen=
t;q.setAttribute("className","t"),q.innerHTML=3D"   =
<link/><table></table><a href=3D'/a' =
style=3D'top:1px;float:left;opacity:.55;'>a</a><input =
type=3D'checkbox'/>",d=3Dq.getElementsByTagName("*"),e=3Dq.getElementsByT=
agName("a")[0];if(!d||!d.length||!e)return{};g=3Dc.createElement("select"=
),h=3Dg.appendChild(c.createElement("option")),i=3Dq.getElementsByTagName=
("input")[0],b=3D{leadingWhitespace:q.firstChild.nodeType=3D=3D=3D3,tbody=
:!q.getElementsByTagName("tbody").length,htmlSerialize:!!q.getElementsByT=
agName("link").length,style:/top/.test(e.getAttribute("style")),hrefNorma=
lized:e.getAttribute("href")=3D=3D=3D"/a",opacity:/^0.55/.test(e.style.op=
acity),cssFloat:!!e.style.cssFloat,checkOn:i.value=3D=3D=3D"on",optSelect=
ed:h.selected,getSetAttribute:q.className!=3D=3D"t",enctype:!!c.createEle=
ment("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).oute=
rHTML!=3D=3D"<:nav></:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubb=
les:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkW=
rapBlocks:!1,reliableMarginRight:!0},i.checked=3D!0,b.noCloneChecked=3Di.=
cloneNode(!0).checked,g.disabled=3D!0,b.optDisabled=3D!h.disabled;try{del=
ete =
q.test}catch(s){b.deleteExpando=3D!1}!q.addEventListener&&q.attachEvent&&=
q.fireEvent&&(q.attachEvent("onclick",function(){b.noCloneEvent=3D!1}),q.=
cloneNode(!0).fireEvent("onclick")),i=3Dc.createElement("input"),i.value=3D=
"t",i.setAttribute("type","radio"),b.radioValue=3Di.value=3D=3D=3D"t",i.s=
etAttribute("checked","checked"),q.appendChild(i),k=3Dc.createDocumentFra=
gment(),k.appendChild(q.lastChild),b.checkClone=3Dk.cloneNode(!0).cloneNo=
de(!0).lastChild.checked,b.appendChecked=3Di.checked,k.removeChild(i),k.a=
ppendChild(q),q.innerHTML=3D"",a.getComputedStyle&&(j=3Dc.createElement("=
div"),j.style.width=3D"0",j.style.marginRight=3D"0",q.style.width=3D"2px"=
,q.appendChild(j),b.reliableMarginRight=3D(parseInt((a.getComputedStyle(j=
,null)||{marginRight:0}).marginRight,10)||0)=3D=3D=3D0);if(q.attachEvent)=
for(o in{submit:1,change:1,focusin:1})n=3D"on"+o,p=3Dn in =
q,p||(q.setAttribute(n,"return;"),p=3Dtypeof =
q[n]=3D=3D"function"),b[o+"Bubbles"]=3Dp;k.removeChild(q),k=3Dg=3Dh=3Dj=3D=
q=3Di=3Dnull,f(function(){var =
a,d,e,g,h,i,j,k,m,n,o,r=3Dc.getElementsByTagName("body")[0];!r||(j=3D1,k=3D=
"position:absolute;top:0;left:0;width:1px;height:1px;margin:0;",m=3D"visi=
bility:hidden;border:0;",n=3D"style=3D'"+k+"border:5px solid =
#000;padding:0;'",o=3D"<div "+n+"><div></div></div>"+"<table "+n+" =
cellpadding=3D'0' =
cellspacing=3D'0'>"+"<tr><td></td></tr></table>",a=3Dc.createElement("div=
"),a.style.cssText=3Dm+"width:0;height:0;position:static;top:0;margin-top=
:"+j+"px",r.insertBefore(a,r.firstChild),q=3Dc.createElement("div"),a.app=
endChild(q),q.innerHTML=3D"<table><tr><td =
style=3D'padding:0;border:0;display:none'></td><td>t</td></tr></table>",l=
=3Dq.getElementsByTagName("td"),p=3Dl[0].offsetHeight=3D=3D=3D0,l[0].styl=
e.display=3D"",l[1].style.display=3D"none",b.reliableHiddenOffsets=3Dp&&l=
[0].offsetHeight=3D=3D=3D0,q.innerHTML=3D"",q.style.width=3Dq.style.paddi=
ngLeft=3D"1px",f.boxModel=3Db.boxModel=3Dq.offsetWidth=3D=3D=3D2,typeof =
q.style.zoom!=3D"undefined"&&(q.style.display=3D"inline",q.style.zoom=3D1=
,b.inlineBlockNeedsLayout=3Dq.offsetWidth=3D=3D=3D2,q.style.display=3D"",=
q.innerHTML=3D"<div =
style=3D'width:4px;'></div>",b.shrinkWrapBlocks=3Dq.offsetWidth!=3D=3D2),=
q.style.cssText=3Dk+m,q.innerHTML=3Do,d=3Dq.firstChild,e=3Dd.firstChild,h=
=3Dd.nextSibling.firstChild.firstChild,i=3D{doesNotAddBorder:e.offsetTop!=
=3D=3D5,doesAddBorderForTableAndCells:h.offsetTop=3D=3D=3D5},e.style.posi=
tion=3D"fixed",e.style.top=3D"20px",i.fixedPosition=3De.offsetTop=3D=3D=3D=
20||e.offsetTop=3D=3D=3D15,e.style.position=3De.style.top=3D"",d.style.ov=
erflow=3D"hidden",d.style.position=3D"relative",i.subtractsBorderForOverf=
lowNotVisible=3De.offsetTop=3D=3D=3D-5,i.doesNotIncludeMarginInBodyOffset=
=3Dr.offsetTop!=3D=3Dj,r.removeChild(a),q=3Da=3Dnull,f.extend(b,i))});ret=
urn b}();var =
j=3D/^(?:\{.*\}|\[.*\])$/,k=3D/([A-Z])/g;f.extend({cache:{},uuid:0,expand=
o:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0=
,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:f=
unction(a){a=3Da.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!=
m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var =
g,h,i,j=3Df.expando,k=3Dtypeof =
c=3D=3D"string",l=3Da.nodeType,m=3Dl?f.cache:a,n=3Dl?a[j]:a[j]&&j,o=3Dc=3D=
=3D=3D"events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d=3D=3D=3Db)return;=
n||(l?a[j]=3Dn=3D++f.uuid:n=3Dj),m[n]||(m[n]=3D{},l||(m[n].toJSON=3Df.noo=
p));if(typeof c=3D=3D"object"||typeof =
c=3D=3D"function")e?m[n]=3Df.extend(m[n],c):m[n].data=3Df.extend(m[n].dat=
a,c);g=3Dh=3Dm[n],e||(h.data||(h.data=3D{}),h=3Dh.data),d!=3D=3Db&&(h[f.c=
amelCase(c)]=3Dd);if(o&&!h[c])return =
g.events;k?(i=3Dh[c],i=3D=3Dnull&&(i=3Dh[f.camelCase(c)])):i=3Dh;return =
i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var =
d,e,g,h=3Df.expando,i=3Da.nodeType,j=3Di?f.cache:a,k=3Di?a[h]:h;if(!j[k])=
return;if(b){d=3Dc?j[k]:j[k].data;if(d){f.isArray(b)||(b in =
d?b=3D[b]:(b=3Df.camelCase(b),b in d?b=3D[b]:b=3Db.split(" =
")));for(e=3D0,g=3Db.length;e<g;e++)delete =
d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete =
j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?dele=
te j[k]:j[k]=3Dnull,i&&(f.support.deleteExpando?delete =
a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=3Dnull)}},_data:function=
(a,b,c){return =
f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var =
b=3Df.noData[a.nodeName.toLowerCase()];if(b)return =
b!=3D=3D!0&&a.getAttribute("classid")=3D=3D=3Db}return!0}}),f.fn.extend({=
data:function(a,c){var d,e,g,h=3Dnull;if(typeof =
a=3D=3D"undefined"){if(this.length){h=3Df.data(this[0]);if(this[0].nodeTy=
pe=3D=3D=3D1&&!f._data(this[0],"parsedAttrs")){e=3Dthis[0].attributes;for=
(var =
i=3D0,j=3De.length;i<j;i++)g=3De[i].name,g.indexOf("data-")=3D=3D=3D0&&(g=
=3Df.camelCase(g.substring(5)),l(this[0],g,h[g]));f._data(this[0],"parsed=
Attrs",!0)}}return h}if(typeof a=3D=3D"object")return =
this.each(function(){f.data(this,a)});d=3Da.split("."),d[1]=3Dd[1]?"."+d[=
1]:"";if(c=3D=3D=3Db){h=3Dthis.triggerHandler("getData"+d[1]+"!",[d[0]]),=
h=3D=3D=3Db&&this.length&&(h=3Df.data(this[0],a),h=3Dl(this[0],a,h));retu=
rn h=3D=3D=3Db&&d[1]?this.data(d[0]):h}return this.each(function(){var =
b=3Df(this),e=3D[d[0],c];b.triggerHandler("setData"+d[1]+"!",e),f.data(th=
is,a,c),b.triggerHandler("changeData"+d[1]+"!",e)})},removeData:function(=
a){return =
this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a=
,b){a&&(b=3D(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:f=
unction(a,b,c){a!=3D=3D!0&&(c=3Db,b=3Da,a=3D!1);if(b){c=3Dc||"fx";var =
d=3Dc+"mark",e=3Da?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b=
,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var =
d;if(a){b=3D(b||"fx")+"queue",d=3Df._data(a,b),c&&(!d||f.isArray(c)?d=3Df=
._data(a,b,f.makeArray(c)):d.push(c));return =
d||[]}},dequeue:function(a,b){b=3Db||"fx";var =
c=3Df.queue(a,b),d=3Dc.shift(),e=3D{};d=3D=3D=3D"inprogress"&&(d=3Dc.shif=
t()),d&&(b=3D=3D=3D"fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.=
call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue =
"+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof=
 a!=3D"string"&&(c=3Da,a=3D"fx");if(c=3D=3D=3Db)return =
f.queue(this[0],a);return this.each(function(){var =
b=3Df.queue(this,a,c);a=3D=3D=3D"fx"&&b[0]!=3D=3D"inprogress"&&f.dequeue(=
this,a)})},dequeue:function(a){return =
this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=3Df.fx?f.=
fx.speeds[a]||a:a,b=3Db||"fx";return this.queue(b,function(b,c){var =
d=3DsetTimeout(b,a);c.stop=3Dfunction(){clearTimeout(d)}})},clearQueue:fu=
nction(a){return this.queue(a||"fx",[])},promise:function(a,c){function =
m(){--h||d.resolveWith(e,[e])}typeof =
a!=3D"string"&&(c=3Da,a=3Db),a=3Da||"fx";var =
d=3Df.Deferred(),e=3Dthis,g=3De.length,h=3D1,i=3Da+"defer",j=3Da+"queue",=
k=3Da+"mark",l;while(g--)if(l=3Df.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)=
||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once =
memory"),!0))h++,l.add(m);m();return d.promise()}});var =
o=3D/[\n\t\r]/g,p=3D/\s+/,q=3D/\r/g,r=3D/^(?:button|input)$/i,s=3D/^(?:bu=
tton|input|object|select|textarea)$/i,t=3D/^a(?:rea)?$/i,u=3D/^(?:autofoc=
us|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|op=
en|readonly|required|scoped|selected)$/i,v=3Df.support.getSetAttribute,w,=
x,y;f.fn.extend({attr:function(a,b){return =
f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return =
this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return =
f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=3Df.propFix[a]||a;=
return this.each(function(){try{this[a]=3Db,delete =
this[a]}catch(c){}})},addClass:function(a){var =
b,c,d,e,g,h,i;if(f.isFunction(a))return =
this.each(function(b){f(this).addClass(a.call(this,b,this.className))});i=
f(a&&typeof =
a=3D=3D"string"){b=3Da.split(p);for(c=3D0,d=3Dthis.length;c<d;c++){e=3Dth=
is[c];if(e.nodeType=3D=3D=3D1)if(!e.className&&b.length=3D=3D=3D1)e.class=
Name=3Da;else{g=3D" "+e.className+" =
";for(h=3D0,i=3Db.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=3Db[h]+" =
");e.className=3Df.trim(g)}}}return this},removeClass:function(a){var =
c,d,e,g,h,i,j;if(f.isFunction(a))return =
this.each(function(b){f(this).removeClass(a.call(this,b,this.className))}=
);if(a&&typeof =
a=3D=3D"string"||a=3D=3D=3Db){c=3D(a||"").split(p);for(d=3D0,e=3Dthis.len=
gth;d<e;d++){g=3Dthis[d];if(g.nodeType=3D=3D=3D1&&g.className)if(a){h=3D(=
" "+g.className+" ").replace(o," =
");for(i=3D0,j=3Dc.length;i<j;i++)h=3Dh.replace(" "+c[i]+" "," =
");g.className=3Df.trim(h)}else g.className=3D""}}return =
this},toggleClass:function(a,b){var c=3Dtypeof a,d=3Dtypeof =
b=3D=3D"boolean";if(f.isFunction(a))return =
this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b)=
,b)});return this.each(function(){if(c=3D=3D=3D"string"){var =
e,g=3D0,h=3Df(this),i=3Db,j=3Da.split(p);while(e=3Dj[g++])i=3Dd?i:!h.hasC=
lass(e),h[i?"addClass":"removeClass"](e)}else =
if(c=3D=3D=3D"undefined"||c=3D=3D=3D"boolean")this.className&&f._data(thi=
s,"__className__",this.className),this.className=3Dthis.className||a=3D=3D=
=3D!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var =
b=3D" "+a+" =
",c=3D0,d=3Dthis.length;for(;c<d;c++)if(this[c].nodeType=3D=3D=3D1&&(" =
"+this[c].className+" ").replace(o," =
").indexOf(b)>-1)return!0;return!1},val:function(a){var =
c,d,e,g=3Dthis[0];{if(!!arguments.length){e=3Df.isFunction(a);return =
this.each(function(d){var =
g=3Df(this),h;if(this.nodeType=3D=3D=3D1){e?h=3Da.call(this,d,g.val()):h=3D=
a,h=3D=3Dnull?h=3D"":typeof =
h=3D=3D"number"?h+=3D"":f.isArray(h)&&(h=3Df.map(h,function(a){return =
a=3D=3Dnull?"":a+""})),c=3Df.valHooks[this.nodeName.toLowerCase()]||f.val=
Hooks[this.type];if(!c||!("set"in =
c)||c.set(this,h,"value")=3D=3D=3Db)this.value=3Dh}})}if(g){c=3Df.valHook=
s[g.nodeName.toLowerCase()]||f.valHooks[g.type];if(c&&"get"in =
c&&(d=3Dc.get(g,"value"))!=3D=3Db)return d;d=3Dg.value;return typeof =
d=3D=3D"string"?d.replace(q,""):d=3D=3Dnull?"":d}}}}),f.extend({valHooks:=
{option:{get:function(a){var =
b=3Da.attributes.value;return!b||b.specified?a.value:a.text}},select:{get=
:function(a){var =
b,c,d,e,g=3Da.selectedIndex,h=3D[],i=3Da.options,j=3Da.type=3D=3D=3D"sele=
ct-one";if(g<0)return =
null;c=3Dj?g:0,d=3Dj?g+1:i.length;for(;c<d;c++){e=3Di[c];if(e.selected&&(=
f.support.optDisabled?!e.disabled:e.getAttribute("disabled")=3D=3D=3Dnull=
)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=3Df(=
e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return =
f(i[g]).val();return h},set:function(a,b){var =
c=3Df.makeArray(b);f(a).find("option").each(function(){this.selected=3Df.=
inArray(f(this).val(),c)>=3D0}),c.length||(a.selectedIndex=3D-1);return =
c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,off=
set:!0},attr:function(a,c,d,e){var =
g,h,i,j=3Da.nodeType;if(!!a&&j!=3D=3D3&&j!=3D=3D8&&j!=3D=3D2){if(e&&c in =
f.attrFn)return f(a)[c](d);if(typeof =
a.getAttribute=3D=3D"undefined")return =
f.prop(a,c,d);i=3Dj!=3D=3D1||!f.isXMLDoc(a),i&&(c=3Dc.toLowerCase(),h=3Df=
.attrHooks[c]||(u.test(c)?x:w));if(d!=3D=3Db){if(d=3D=3D=3Dnull){f.remove=
Attr(a,c);return}if(h&&"set"in h&&i&&(g=3Dh.set(a,d,c))!=3D=3Db)return =
g;a.setAttribute(c,""+d);return d}if(h&&"get"in =
h&&i&&(g=3Dh.get(a,c))!=3D=3Dnull)return g;g=3Da.getAttribute(c);return =
g=3D=3D=3Dnull?b:g}},removeAttr:function(a,b){var =
c,d,e,g,h=3D0;if(b&&a.nodeType=3D=3D=3D1){d=3Db.toLowerCase().split(p),g=3D=
d.length;for(;h<g;h++)e=3Dd[h],e&&(c=3Df.propFix[e]||e,f.attr(a,e,""),a.r=
emoveAttribute(v?e:c),u.test(e)&&c in =
a&&(a[c]=3D!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName=
)&&a.parentNode)f.error("type property can't be changed");else =
if(!f.support.radioValue&&b=3D=3D=3D"radio"&&f.nodeName(a,"input")){var =
c=3Da.value;a.setAttribute("type",b),c&&(a.value=3Dc);return =
b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return =
w.get(a,b);return b in =
a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return =
w.set(a,b,c);a.value=3Db}}},propFix:{tabindex:"tabIndex",readonly:"readOn=
ly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing=
:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSp=
an",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEdi=
table"},prop:function(a,c,d){var =
e,g,h,i=3Da.nodeType;if(!!a&&i!=3D=3D3&&i!=3D=3D8&&i!=3D=3D2){h=3Di!=3D=3D=
1||!f.isXMLDoc(a),h&&(c=3Df.propFix[c]||c,g=3Df.propHooks[c]);return =
d!=3D=3Db?g&&"set"in g&&(e=3Dg.set(a,d,c))!=3D=3Db?e:a[c]=3Dd:g&&"get"in =
g&&(e=3Dg.get(a,c))!=3D=3Dnull?e:a[c]}},propHooks:{tabIndex:{get:function=
(a){var c=3Da.getAttributeNode("tabindex");return =
c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName=
)&&a.href?0:b}}}}),f.attrHooks.tabindex=3Df.propHooks.tabIndex,x=3D{get:f=
unction(a,c){var d,e=3Df.prop(a,c);return e=3D=3D=3D!0||typeof =
e!=3D"boolean"&&(d=3Da.getAttributeNode(c))&&d.nodeValue!=3D=3D!1?c.toLow=
erCase():b},set:function(a,b,c){var =
d;b=3D=3D=3D!1?f.removeAttr(a,c):(d=3Df.propFix[c]||c,d in =
a&&(a[d]=3D!0),a.setAttribute(c,c.toLowerCase()));return =
c}},v||(y=3D{name:!0,id:!0},w=3Df.valHooks.button=3D{get:function(a,c){va=
r d;d=3Da.getAttributeNode(c);return =
d&&(y[c]?d.nodeValue!=3D=3D"":d.specified)?d.nodeValue:b},set:function(a,=
b,d){var =
e=3Da.getAttributeNode(d);e||(e=3Dc.createAttribute(d),a.setAttributeNode=
(e));return =
e.nodeValue=3Db+""}},f.attrHooks.tabindex.set=3Dw.set,f.each(["width","he=
ight"],function(a,b){f.attrHooks[b]=3Df.extend(f.attrHooks[b],{set:functi=
on(a,c){if(c=3D=3D=3D""){a.setAttribute(b,"auto");return =
c}}})}),f.attrHooks.contenteditable=3D{get:w.get,set:function(a,b,c){b=3D=
=3D=3D""&&(b=3D"false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(=
["href","src","width","height"],function(a,c){f.attrHooks[c]=3Df.extend(f=
.attrHooks[c],{get:function(a){var d=3Da.getAttribute(c,2);return =
d=3D=3D=3Dnull?b:d}})}),f.support.style||(f.attrHooks.style=3D{get:functi=
on(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return =
a.style.cssText=3D""+b}}),f.support.optSelected||(f.propHooks.selected=3D=
f.extend(f.propHooks.selected,{get:function(a){var =
b=3Da.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedI=
ndex);return =
null}})),f.support.enctype||(f.propFix.enctype=3D"encoding"),f.support.ch=
eckOn||f.each(["radio","checkbox"],function(){f.valHooks[this]=3D{get:fun=
ction(a){return =
a.getAttribute("value")=3D=3D=3Dnull?"on":a.value}}}),f.each(["radio","ch=
eckbox"],function(){f.valHooks[this]=3Df.extend(f.valHooks[this],{set:fun=
ction(a,b){if(f.isArray(b))return =
a.checked=3Df.inArray(f(a).val(),b)>=3D0}})});var =
z=3D/^(?:textarea|input|select)$/i,A=3D/^([^\.]*)?(?:\.(.+))?$/,B=3D/\bho=
ver(\.\S+)?\b/,C=3D/^key/,D=3D/^(?:mouse|contextmenu)|click/,E=3D/^(?:foc=
usinfocus|focusoutblur)$/,F=3D/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=3D=
function(a){var =
b=3DF.exec(a);b&&(b[1]=3D(b[1]||"").toLowerCase(),b[3]=3Db[3]&&new =
RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return b},H=3Dfunction(a,b){var =
c=3Da.attributes||{};return(!b[1]||a.nodeName.toLowerCase()=3D=3D=3Db[1])=
&&(!b[2]||(c.id||{}).value=3D=3D=3Db[2])&&(!b[3]||b[3].test((c["class"]||=
{}).value))},I=3Dfunction(a){return =
f.event.special.hover?a:a.replace(B,"mouseenter$1 mouseleave$1")};=0A=
f.event=3D{add:function(a,c,d,e,g){var =
h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType=3D=3D=3D3||a.nodeType=3D=3D=3D8||=
!c||!d||!(h=3Df._data(a)))){d.handler&&(p=3Dd,d=3Dp.handler),d.guid||(d.g=
uid=3Df.guid++),j=3Dh.events,j||(h.events=3Dj=3D{}),i=3Dh.handle,i||(h.ha=
ndle=3Di=3Dfunction(a){return typeof =
f!=3D"undefined"&&(!a||f.event.triggered!=3D=3Da.type)?f.event.dispatch.a=
pply(i.elem,arguments):b},i.elem=3Da),c=3Df.trim(I(c)).split(" =
");for(k=3D0;k<c.length;k++){l=3DA.exec(c[k])||[],m=3Dl[1],n=3D(l[2]||"")=
.split(".").sort(),s=3Df.event.special[m]||{},m=3D(g?s.delegateType:s.bin=
dType)||m,s=3Df.event.special[m]||{},o=3Df.extend({type:m,origType:l[1],d=
ata:e,handler:d,guid:d.guid,selector:g,quick:G(g),namespace:n.join(".")},=
p),r=3Dj[m];if(!r){r=3Dj[m]=3D[],r.delegateCount=3D0;if(!s.setup||s.setup=
.call(a,e,n,i)=3D=3D=3D!1)a.addEventListener?a.addEventListener(m,i,!1):a=
.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.g=
uid||(o.handler.guid=3Dd.guid)),g?r.splice(r.delegateCount++,0,o):r.push(=
o),f.event.global[m]=3D!0}a=3Dnull}},global:{},remove:function(a,b,c,d,e)=
{var =
g=3Df.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=3Dg.eve=
nts)){b=3Df.trim(I(b||"")).split(" =
");for(h=3D0;h<b.length;h++){i=3DA.exec(b[h])||[],j=3Dk=3Di[1],l=3Di[2];i=
f(!j){for(j in =
o)f.event.remove(a,j+b[h],c,d,!0);continue}p=3Df.event.special[j]||{},j=3D=
(d?p.delegateType:p.bindType)||j,r=3Do[j]||[],m=3Dr.length,l=3Dl?new =
RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):nul=
l;for(n=3D0;n<r.length;n++)s=3Dr[n],(e||k=3D=3D=3Ds.origType)&&(!c||c.gui=
d=3D=3D=3Ds.guid)&&(!l||l.test(s.namespace))&&(!d||d=3D=3D=3Ds.selector||=
d=3D=3D=3D"**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount=
--,p.remove&&p.remove.call(a,s));r.length=3D=3D=3D0&&m!=3D=3Dr.length&&((=
!p.teardown||p.teardown.call(a,l)=3D=3D=3D!1)&&f.removeEvent(a,j,g.handle=
),delete =
o[j])}f.isEmptyObject(o)&&(q=3Dg.handle,q&&(q.elem=3Dnull),f.removeData(a=
,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData=
:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!=3D=3D3&&e.nodeType!=3D=3D=
8){var =
h=3Dc.type||c,i=3D[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))r=
eturn;h.indexOf("!")>=3D0&&(h=3Dh.slice(0,-1),k=3D!0),h.indexOf(".")>=3D0=
&&(i=3Dh.split("."),h=3Di.shift(),i.sort());if((!e||f.event.customEvent[h=
])&&!f.event.global[h])return;c=3Dtypeof =
c=3D=3D"object"?c[f.expando]?c:new f.Event(h,c):new =
f.Event(h),c.type=3Dh,c.isTrigger=3D!0,c.exclusive=3Dk,c.namespace=3Di.jo=
in("."),c.namespace_re=3Dc.namespace?new =
RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=3Dh.indexOf(":=
")<0?"on"+h:"";if(!e){j=3Df.cache;for(l in =
j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);r=
eturn}c.result=3Db,c.target||(c.target=3De),d=3Dd!=3Dnull?f.makeArray(d):=
[],d.unshift(c),p=3Df.event.special[h]||{};if(p.trigger&&p.trigger.apply(=
e,d)=3D=3D=3D!1)return;r=3D[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isW=
indow(e)){s=3Dp.delegateType||h,m=3DE.test(s+h)?e:e.parentNode,n=3Dnull;f=
or(;m;m=3Dm.parentNode)r.push([m,s]),n=3Dm;n&&n=3D=3D=3De.ownerDocument&&=
r.push([n.defaultView||n.parentWindow||a,s])}for(l=3D0;l<r.length&&!c.isP=
ropagationStopped();l++)m=3Dr[l][0],c.type=3Dr[l][1],q=3D(f._data(m,"even=
ts")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=3Do&&m[o],q&&f.a=
cceptData(m)&&q.apply(m,d)=3D=3D=3D!1&&c.preventDefault();c.type=3Dh,!g&&=
!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d=
)=3D=3D=3D!1)&&(h!=3D=3D"click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&=
&e[h]&&(h!=3D=3D"focus"&&h!=3D=3D"blur"||c.target.offsetWidth!=3D=3D0)&&!=
f.isWindow(e)&&(n=3De[o],n&&(e[o]=3Dnull),f.event.triggered=3Dh,e[h](),f.=
event.triggered=3Db,n&&(e[o]=3Dn));return =
c.result}},dispatch:function(c){c=3Df.event.fix(c||a.event);var =
d=3D(f._data(this,"events")||{})[c.type]||[],e=3Dd.delegateCount,g=3D[].s=
lice.call(arguments,0),h=3D!c.exclusive&&!c.namespace,i=3D[],j,k,l,m,n,o,=
p,q,r,s,t;g[0]=3Dc,c.delegateTarget=3Dthis;if(e&&!c.target.disabled&&(!c.=
button||c.type!=3D=3D"click")){m=3Df(this),m.context=3Dthis.ownerDocument=
||this;for(l=3Dc.target;l!=3Dthis;l=3Dl.parentNode||this){o=3D{},q=3D[],m=
[0]=3Dl;for(j=3D0;j<e;j++)r=3Dd[j],s=3Dr.selector,o[s]=3D=3D=3Db&&(o[s]=3D=
r.quick?H(l,r.quick):m.is(s)),o[s]&&q.push(r);q.length&&i.push({elem:l,ma=
tches:q})}}d.length>e&&i.push({elem:this,matches:d.slice(e)});for(j=3D0;j=
<i.length&&!c.isPropagationStopped();j++){p=3Di[j],c.currentTarget=3Dp.el=
em;for(k=3D0;k<p.matches.length&&!c.isImmediatePropagationStopped();k++){=
r=3Dp.matches[k];if(h||!c.namespace&&!r.namespace||c.namespace_re&&c.name=
space_re.test(r.namespace))c.data=3Dr.data,c.handleObj=3Dr,n=3D((f.event.=
special[r.origType]||{}).handle||r.handler).apply(p.elem,g),n!=3D=3Db&&(c=
.result=3Dn,n=3D=3D=3D!1&&(c.preventDefault(),c.stopPropagation()))}}retu=
rn c.result},props:"attrChange attrName relatedNode srcElement altKey =
bubbles cancelable ctrlKey currentTarget eventPhase metaKey =
relatedTarget shiftKey target timeStamp view which".split(" =
"),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" =
"),filter:function(a,b){a.which=3D=3Dnull&&(a.which=3Db.charCode!=3Dnull?=
b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons =
clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY =
toElement".split(" "),filter:function(a,d){var =
e,f,g,h=3Dd.button,i=3Dd.fromElement;a.pageX=3D=3Dnull&&d.clientX!=3Dnull=
&&(e=3Da.target.ownerDocument||c,f=3De.documentElement,g=3De.body,a.pageX=
=3Dd.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g=
.clientLeft||0),a.pageY=3Dd.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(=
f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=
=3Di=3D=3D=3Da.target?d.toElement:i),!a.which&&h!=3D=3Db&&(a.which=3Dh&1?=
1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var =
d,e,g=3Da,h=3Df.event.fixHooks[a.type]||{},i=3Dh.props?this.props.concat(=
h.props):this.props;a=3Df.Event(g);for(d=3Di.length;d;)e=3Di[--d],a[e]=3D=
g[e];a.target||(a.target=3Dg.srcElement||c),a.target.nodeType=3D=3D=3D3&&=
(a.target=3Da.target.parentNode),a.metaKey=3D=3D=3Db&&(a.metaKey=3Da.ctrl=
Key);return =
h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubb=
le:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},befo=
reunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=3D=
c)},teardown:function(a,b){this.onbeforeunload=3D=3D=3Db&&(this.onbeforeu=
nload=3Dnull)}}},simulate:function(a,b,c,d){var e=3Df.extend(new =
f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,n=
ull,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefaul=
t()}},f.event.handle=3Df.event.dispatch,f.removeEvent=3Dc.removeEventList=
ener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)=
}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=3Dfunct=
ion(a,b){if(!(this instanceof f.Event))return new =
f.Event(a,b);a&&a.type?(this.originalEvent=3Da,this.type=3Da.type,this.is=
DefaultPrevented=3Da.defaultPrevented||a.returnValue=3D=3D=3D!1||a.getPre=
ventDefault&&a.getPreventDefault()?K:J):this.type=3Da,b&&f.extend(this,b)=
,this.timeStamp=3Da&&a.timeStamp||f.now(),this[f.expando]=3D!0},f.Event.p=
rototype=3D{preventDefault:function(){this.isDefaultPrevented=3DK;var =
a=3Dthis.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnV=
alue=3D!1)},stopPropagation:function(){this.isPropagationStopped=3DK;var =
a=3Dthis.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.canc=
elBubble=3D!0)},stopImmediatePropagation:function(){this.isImmediatePropa=
gationStopped=3DK,this.stopPropagation()},isDefaultPrevented:J,isPropagat=
ionStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseov=
er",mouseleave:"mouseout"},function(a,b){f.event.special[a]=3D{delegateTy=
pe:b,bindType:b,handle:function(a){var =
c=3Dthis,d=3Da.relatedTarget,e=3Da.handleObj,g=3De.selector,h;if(!d||d!=3D=
=3Dc&&!f.contains(c,d))a.type=3De.origType,h=3De.handler.apply(this,argum=
ents),a.type=3Db;return =
h}}}),f.support.submitBubbles||(f.event.special.submit=3D{setup:function(=
){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit =
keypress._submit",function(a){var =
c=3Da.target,d=3Df.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d=
&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){this.p=
arentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0)}=
),d._submit_attached=3D!0)})},teardown:function(){if(f.nodeName(this,"for=
m"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||=
(f.event.special.change=3D{setup:function(){if(z.test(this.nodeName)){if(=
this.type=3D=3D=3D"checkbox"||this.type=3D=3D=3D"radio")f.event.add(this,=
"propertychange._change",function(a){a.originalEvent.propertyName=3D=3D=3D=
"checked"&&(this._just_changed=3D!0)}),f.event.add(this,"click._change",f=
unction(a){this._just_changed&&!a.isTrigger&&(this._just_changed=3D!1,f.e=
vent.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeact=
ivate._change",function(a){var =
b=3Da.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"cha=
nge._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f=
.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=3D!0)=
})},handle:function(a){var =
b=3Da.target;if(this!=3D=3Db||a.isSimulated||a.isTrigger||b.type!=3D=3D"r=
adio"&&b.type!=3D=3D"checkbox")return =
a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.re=
move(this,"._change");return =
z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin=
",blur:"focusout"},function(a,b){var =
d=3D0,e=3Dfunction(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.e=
vent.special[b]=3D{setup:function(){d++=3D=3D=3D0&&c.addEventListener(a,e=
,!0)},teardown:function(){--d=3D=3D=3D0&&c.removeEventListener(a,e,!0)}}}=
),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof =
a=3D=3D"object"){typeof c!=3D"string"&&(d=3Dc,c=3Db);for(i in =
a)this.on(i,c,d,a[i],g);return =
this}d=3D=3Dnull&&e=3D=3Dnull?(e=3Dc,d=3Dc=3Db):e=3D=3Dnull&&(typeof =
c=3D=3D"string"?(e=3Dd,d=3Db):(e=3Dd,d=3Dc,c=3Db));if(e=3D=3D=3D!1)e=3DJ;=
else if(!e)return =
this;g=3D=3D=3D1&&(h=3De,e=3Dfunction(a){f().off(a);return =
h.apply(this,arguments)},e.guid=3Dh.guid||(h.guid=3Df.guid++));return =
this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){r=
eturn =
this.on.call(this,a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&=
&a.handleObj){var =
e=3Da.handleObj;f(a.delegateTarget).off(e.namespace?e.type+"."+e.namespac=
e:e.type,e.selector,e.handler);return this}if(typeof =
a=3D=3D"object"){for(var g in a)this.off(g,c,a[g]);return =
this}if(c=3D=3D=3D!1||typeof =
c=3D=3D"function")d=3Dc,c=3Db;d=3D=3D=3D!1&&(d=3DJ);return =
this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){r=
eturn this.on(a,null,b,c)},unbind:function(a,b){return =
this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.select=
or,b,c);return =
this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);retu=
rn this},delegate:function(a,b,c,d){return =
this.on(b,a,c,d)},undelegate:function(a,b,c){return =
arguments.length=3D=3D1?this.off(a,"**"):this.off(b,a,c)},trigger:functio=
n(a,b){return =
this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function=
(a,b){if(this[0])return =
f.event.trigger(a,b,this[0],!0)},toggle:function(a){var =
b=3Darguments,c=3Da.guid||f.guid++,d=3D0,e=3Dfunction(c){var =
e=3D(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.=
guid,e+1),c.preventDefault();return =
b[e].apply(this,arguments)||!1};e.guid=3Dc;while(d<b.length)b[d++].guid=3D=
c;return this.click(e)},hover:function(a,b){return =
this.mouseenter(a).mouseleave(b||a)}}),f.each("blur focus focusin =
focusout load resize scroll unload click dblclick mousedown mouseup =
mousemove mouseover mouseout mouseenter mouseleave change select submit =
keydown keypress keyup error contextmenu".split(" =
"),function(a,b){f.fn[b]=3Dfunction(a,c){c=3D=3Dnull&&(c=3Da,a=3Dnull);re=
turn =
arguments.length>0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attr=
Fn[b]=3D!0),C.test(b)&&(f.event.fixHooks[b]=3Df.event.keyHooks),D.test(b)=
&&(f.event.fixHooks[b]=3Df.event.mouseHooks)}),function(){function =
x(a,b,c,e,f,g){for(var h=3D0,i=3De.length;h<i;h++){var =
j=3De[h];if(j){var =
k=3D!1;j=3Dj[a];while(j){if(j[d]=3D=3D=3Dc){k=3De[j.sizset];break}if(j.no=
deType=3D=3D=3D1){g||(j[d]=3Dc,j.sizset=3Dh);if(typeof =
b!=3D"string"){if(j=3D=3D=3Db){k=3D!0;break}}else =
if(m.filter(b,[j]).length>0){k=3Dj;break}}j=3Dj[a]}e[h]=3Dk}}}function =
w(a,b,c,e,f,g){for(var h=3D0,i=3De.length;h<i;h++){var =
j=3De[h];if(j){var =
k=3D!1;j=3Dj[a];while(j){if(j[d]=3D=3D=3Dc){k=3De[j.sizset];break}j.nodeT=
ype=3D=3D=3D1&&!g&&(j[d]=3Dc,j.sizset=3Dh);if(j.nodeName.toLowerCase()=3D=
=3D=3Db){k=3Dj;break}j=3Dj[a]}e[h]=3Dk}}}var =
a=3D/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[=
\]'"]+)+\]|\\.|[^ =
>+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d=3D"sizcache"+(Math.rando=
m()+"").replace(".",""),e=3D0,g=3DObject.prototype.toString,h=3D!1,i=3D!0=
,j=3D/\\/g,k=3D/\r\n/g,l=3D/\W/;[0,0].sort(function(){i=3D!1;return =
0});var m=3Dfunction(b,d,e,f){e=3De||[],d=3Dd||c;var =
h=3Dd;if(d.nodeType!=3D=3D1&&d.nodeType!=3D=3D9)return[];if(!b||typeof =
b!=3D"string")return e;var =
i,j,k,l,n,q,r,t,u=3D!0,v=3Dm.isXML(d),w=3D[],x=3Db;do{a.exec(""),i=3Da.ex=
ec(x);if(i){x=3Di[3],w.push(i[1]);if(i[2]){l=3Di[3];break}}}while(i);if(w=
.length>1&&p.exec(b))if(w.length=3D=3D=3D2&&o.relative[w[0]])j=3Dy(w[0]+w=
[1],d,f);else{j=3Do.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=3D=
w.shift(),o.relative[b]&&(b+=3Dw.shift()),j=3Dy(b,j,f)}else{!f&&w.length>=
1&&d.nodeType=3D=3D=3D9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.=
length-1])&&(n=3Dm.find(w.shift(),d,v),d=3Dn.expr?m.filter(n.expr,n.set)[=
0]:n.set[0]);if(d){n=3Df?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length=3D=
=3D=3D1&&(w[0]=3D=3D=3D"~"||w[0]=3D=3D=3D"+")&&d.parentNode?d.parentNode:=
d,v),j=3Dn.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=3Ds(j):u=3D!1;w=
hile(w.length)q=3Dw.pop(),r=3Dq,o.relative[q]?r=3Dw.pop():q=3D"",r=3D=3Dn=
ull&&(r=3Dd),o.relative[q](k,r,v)}else =
k=3Dw=3D[]}k||(k=3Dj),k||m.error(q||b);if(g.call(k)=3D=3D=3D"[object =
Array]")if(!u)e.push.apply(e,k);else =
if(d&&d.nodeType=3D=3D=3D1)for(t=3D0;k[t]!=3Dnull;t++)k[t]&&(k[t]=3D=3D=3D=
!0||k[t].nodeType=3D=3D=3D1&&m.contains(d,k[t]))&&e.push(j[t]);else =
for(t=3D0;k[t]!=3Dnull;t++)k[t]&&k[t].nodeType=3D=3D=3D1&&e.push(j[t]);el=
se s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return =
e};m.uniqueSort=3Dfunction(a){if(u){h=3Di,a.sort(u);if(h)for(var =
b=3D1;b<a.length;b++)a[b]=3D=3D=3Da[b-1]&&a.splice(b--,1)}return =
a},m.matches=3Dfunction(a,b){return =
m(a,null,null,b)},m.matchesSelector=3Dfunction(a,b){return =
m(b,null,null,[a]).length>0},m.find=3Dfunction(a,b,c){var =
d,e,f,g,h,i;if(!a)return[];for(e=3D0,f=3Do.order.length;e<f;e++){h=3Do.or=
der[e];if(g=3Do.leftMatch[h].exec(a)){i=3Dg[1],g.splice(1,1);if(i.substr(=
i.length-1)!=3D=3D"\\"){g[1]=3D(g[1]||"").replace(j,""),d=3Do.find[h](g,b=
,c);if(d!=3Dnull){a=3Da.replace(o.match[h],"");break}}}}d||(d=3Dtypeof =
b.getElementsByTagName!=3D"undefined"?b.getElementsByTagName("*"):[]);ret=
urn{set:d,expr:a}},m.filter=3Dfunction(a,c,d,e){var =
f,g,h,i,j,k,l,n,p,q=3Da,r=3D[],s=3Dc,t=3Dc&&c[0]&&m.isXML(c[0]);while(a&&=
c.length){for(h in =
o.filter)if((f=3Do.leftMatch[h].exec(a))!=3Dnull&&f[2]){k=3Do.filter[h],l=
=3Df[1],g=3D!1,f.splice(1,1);if(l.substr(l.length-1)=3D=3D=3D"\\")continu=
e;s=3D=3D=3Dr&&(r=3D[]);if(o.preFilter[h]){f=3Do.preFilter[h](f,s,d,r,e,t=
);if(!f)g=3Di=3D!0;else =
if(f=3D=3D=3D!0)continue}if(f)for(n=3D0;(j=3Ds[n])!=3Dnull;n++)j&&(i=3Dk(=
j,f,n,s),p=3De^i,d&&i!=3Dnull?p?g=3D!0:s[n]=3D!1:p&&(r.push(j),g=3D!0));i=
f(i!=3D=3Db){d||(s=3Dr),a=3Da.replace(o.match[h],"");if(!g)return[];break=
}}if(a=3D=3D=3Dq)if(g=3D=3Dnull)m.error(a);else break;q=3Da}return =
s},m.error=3Dfunction(a){throw new Error("Syntax error, unrecognized =
expression: "+a)};var n=3Dm.getText=3Dfunction(a){var =
b,c,d=3Da.nodeType,e=3D"";if(d){if(d=3D=3D=3D1||d=3D=3D=3D9){if(typeof =
a.textContent=3D=3D"string")return a.textContent;if(typeof =
a.innerText=3D=3D"string")return =
a.innerText.replace(k,"");for(a=3Da.firstChild;a;a=3Da.nextSibling)e+=3Dn=
(a)}else if(d=3D=3D=3D3||d=3D=3D=3D4)return a.nodeValue}else =
for(b=3D0;c=3Da[b];b++)c.nodeType!=3D=3D8&&(e+=3Dn(c));return =
e},o=3Dm.selectors=3D{order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0=
-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=3D=
['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFF=
FF\-]|\\.)+)\s*(?:(\S?=3D)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\=
\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth=
|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\=
-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\)=
)?(?=3D[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\=
([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","=
for":"htmlFor"},attrHandle:{href:function(a){return =
a.getAttribute("href")},type:function(a){return =
a.getAttribute("type")}},relative:{"+":function(a,b){var c=3Dtypeof =
b=3D=3D"string",d=3Dc&&!l.test(b),e=3Dc&&!d;d&&(b=3Db.toLowerCase());for(=
var =
f=3D0,g=3Da.length,h;f<g;f++)if(h=3Da[f]){while((h=3Dh.previousSibling)&&=
h.nodeType!=3D=3D1);a[f]=3De||h&&h.nodeName.toLowerCase()=3D=3D=3Db?h||!1=
:h=3D=3D=3Db}e&&m.filter(b,a,!0)},">":function(a,b){var c,d=3Dtypeof =
b=3D=3D"string",e=3D0,f=3Da.length;if(d&&!l.test(b)){b=3Db.toLowerCase();=
for(;e<f;e++){c=3Da[e];if(c){var =
g=3Dc.parentNode;a[e]=3Dg.nodeName.toLowerCase()=3D=3D=3Db?g:!1}}}else{fo=
r(;e<f;e++)c=3Da[e],c&&(a[e]=3Dd?c.parentNode:c.parentNode=3D=3D=3Db);d&&=
m.filter(b,a,!0)}},"":function(a,b,c){var d,f=3De++,g=3Dx;typeof =
b=3D=3D"string"&&!l.test(b)&&(b=3Db.toLowerCase(),d=3Db,g=3Dw),g("parentN=
ode",b,f,a,d,c)},"~":function(a,b,c){var d,f=3De++,g=3Dx;typeof =
b=3D=3D"string"&&!l.test(b)&&(b=3Db.toLowerCase(),d=3Db,g=3Dw),g("previou=
sSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof =
b.getElementById!=3D"undefined"&&!c){var =
d=3Db.getElementById(a[1]);return =
d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof =
b.getElementsByName!=3D"undefined"){var =
c=3D[],d=3Db.getElementsByName(a[1]);for(var =
e=3D0,f=3Dd.length;e<f;e++)d[e].getAttribute("name")=3D=3D=3Da[1]&&c.push=
(d[e]);return c.length=3D=3D=3D0?null:c}},TAG:function(a,b){if(typeof =
b.getElementsByTagName!=3D"undefined")return =
b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=3D=
" "+a[1].replace(j,"")+" ";if(f)return a;for(var =
g=3D0,h;(h=3Db[g])!=3Dnull;g++)h&&(e^(h.className&&(" "+h.className+" =
").replace(/[\t\n\r]/g," =
").indexOf(a)>=3D0)?c||d.push(h):c&&(b[g]=3D!1));return!1},ID:function(a)=
{return a[1].replace(j,"")},TAG:function(a,b){return =
a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]=3D=3D=3D"nth"=
){a[2]||m.error(a[0]),a[2]=3Da[2].replace(/^\+|\s*/g,"");var =
b=3D/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]=3D=3D=3D"even"&&"2n"||a[2]=3D=3D=
=3D"odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=3Db[1]+(b[2]||=
1)-0,a[3]=3Db[3]-0}else a[2]&&m.error(a[0]);a[0]=3De++;return =
a},ATTR:function(a,b,c,d,e,f){var =
g=3Da[1]=3Da[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=3Do.attrMap[g]),a[4=
]=3D(a[4]||a[5]||"").replace(j,""),a[2]=3D=3D=3D"~=3D"&&(a[4]=3D" =
"+a[4]+" ");return =
a},PSEUDO:function(b,c,d,e,f){if(b[1]=3D=3D=3D"not")if((a.exec(b[3])||"")=
.length>1||/^\w/.test(b[3]))b[3]=3Dm(b[3],null,null,c);else{var =
g=3Dm.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else =
if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return =
b},POS:function(a){a.unshift(!0);return =
a}},filters:{enabled:function(a){return =
a.disabled=3D=3D=3D!1&&a.type!=3D=3D"hidden"},disabled:function(a){return=
 a.disabled=3D=3D=3D!0},checked:function(a){return =
a.checked=3D=3D=3D!0},selected:function(a){a.parentNode&&a.parentNode.sel=
ectedIndex;return =
a.selected=3D=3D=3D!0},parent:function(a){return!!a.firstChild},empty:fun=
ction(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).lengt=
h},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var=
 b=3Da.getAttribute("type"),c=3Da.type;return =
a.nodeName.toLowerCase()=3D=3D=3D"input"&&"text"=3D=3D=3Dc&&(b=3D=3D=3Dc|=
|b=3D=3D=3Dnull)},radio:function(a){return =
a.nodeName.toLowerCase()=3D=3D=3D"input"&&"radio"=3D=3D=3Da.type},checkbo=
x:function(a){return =
a.nodeName.toLowerCase()=3D=3D=3D"input"&&"checkbox"=3D=3D=3Da.type},file=
:function(a){return =
a.nodeName.toLowerCase()=3D=3D=3D"input"&&"file"=3D=3D=3Da.type},password=
:function(a){return =
a.nodeName.toLowerCase()=3D=3D=3D"input"&&"password"=3D=3D=3Da.type},subm=
it:function(a){var =
b=3Da.nodeName.toLowerCase();return(b=3D=3D=3D"input"||b=3D=3D=3D"button"=
)&&"submit"=3D=3D=3Da.type},image:function(a){return =
a.nodeName.toLowerCase()=3D=3D=3D"input"&&"image"=3D=3D=3Da.type},reset:f=
unction(a){var =
b=3Da.nodeName.toLowerCase();return(b=3D=3D=3D"input"||b=3D=3D=3D"button"=
)&&"reset"=3D=3D=3Da.type},button:function(a){var =
b=3Da.nodeName.toLowerCase();return =
b=3D=3D=3D"input"&&"button"=3D=3D=3Da.type||b=3D=3D=3D"button"},input:fun=
ction(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:fu=
nction(a){return =
a=3D=3D=3Da.ownerDocument.activeElement}},setFilters:{first:function(a,b)=
{return b=3D=3D=3D0},last:function(a,b,c,d){return =
b=3D=3D=3Dd.length-1},even:function(a,b){return =
b%2=3D=3D=3D0},odd:function(a,b){return =
b%2=3D=3D=3D1},lt:function(a,b,c){return =
b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return =
c[3]-0=3D=3D=3Db},eq:function(a,b,c){return =
c[3]-0=3D=3D=3Db}},filter:{PSEUDO:function(a,b,c,d){var =
e=3Db[1],f=3Do.filters[e];if(f)return =
f(a,c,b,d);if(e=3D=3D=3D"contains")return(a.textContent||a.innerText||n([=
a])||"").indexOf(b[3])>=3D0;if(e=3D=3D=3D"not"){var g=3Db[3];for(var =
h=3D0,i=3Dg.length;h<i;h++)if(g[h]=3D=3D=3Da)return!1;return!0}m.error(e)=
},CHILD:function(a,b){var =
c,e,f,g,h,i,j,k=3Db[1],l=3Da;switch(k){case"only":case"first":while(l=3Dl=
.previousSibling)if(l.nodeType=3D=3D=3D1)return!1;if(k=3D=3D=3D"first")re=
turn!0;l=3Da;case"last":while(l=3Dl.nextSibling)if(l.nodeType=3D=3D=3D1)r=
eturn!1;return!0;case"nth":c=3Db[2],e=3Db[3];if(c=3D=3D=3D1&&e=3D=3D=3D0)=
return!0;f=3Db[0],g=3Da.parentNode;if(g&&(g[d]!=3D=3Df||!a.nodeIndex)){i=3D=
0;for(l=3Dg.firstChild;l;l=3Dl.nextSibling)l.nodeType=3D=3D=3D1&&(l.nodeI=
ndex=3D++i);g[d]=3Df}j=3Da.nodeIndex-e;return =
c=3D=3D=3D0?j=3D=3D=3D0:j%c=3D=3D=3D0&&j/c>=3D0}},ID:function(a,b){return=
 =
a.nodeType=3D=3D=3D1&&a.getAttribute("id")=3D=3D=3Db},TAG:function(a,b){r=
eturn =
b=3D=3D=3D"*"&&a.nodeType=3D=3D=3D1||!!a.nodeName&&a.nodeName.toLowerCase=
()=3D=3D=3Db},CLASS:function(a,b){return(" =
"+(a.className||a.getAttribute("class"))+" =
").indexOf(b)>-1},ATTR:function(a,b){var =
c=3Db[1],d=3Dm.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=3D=
null?a[c]:a.getAttribute(c),e=3Dd+"",f=3Db[2],g=3Db[4];return =
d=3D=3Dnull?f=3D=3D=3D"!=3D":!f&&m.attr?d!=3Dnull:f=3D=3D=3D"=3D"?e=3D=3D=
=3Dg:f=3D=3D=3D"*=3D"?e.indexOf(g)>=3D0:f=3D=3D=3D"~=3D"?(" "+e+" =
").indexOf(g)>=3D0:g?f=3D=3D=3D"!=3D"?e!=3D=3Dg:f=3D=3D=3D"^=3D"?e.indexO=
f(g)=3D=3D=3D0:f=3D=3D=3D"$=3D"?e.substr(e.length-g.length)=3D=3D=3Dg:f=3D=
=3D=3D"|=3D"?e=3D=3D=3Dg||e.substr(0,g.length+1)=3D=3D=3Dg+"-":!1:e&&d!=3D=
=3D!1},POS:function(a,b,c,d){var =
e=3Db[2],f=3Do.setFilters[e];if(f)return =
f(a,c,b,d)}}},p=3Do.match.POS,q=3Dfunction(a,b){return"\\"+(b-0+1)};for(v=
ar r in o.match)o.match[r]=3Dnew =
RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r=
]=3Dnew =
RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q))=
;var =
s=3Dfunction(a,b){a=3DArray.prototype.slice.call(a,0);if(b){b.push.apply(=
b,a);return b}return =
a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].node=
Type}catch(t){s=3Dfunction(a,b){var =
c=3D0,d=3Db||[];if(g.call(a)=3D=3D=3D"[object =
Array]")Array.prototype.push.apply(d,a);else if(typeof =
a.length=3D=3D"number")for(var e=3Da.length;c<e;c++)d.push(a[c]);else =
for(;a[c];c++)d.push(a[c]);return d}}var =
u,v;c.documentElement.compareDocumentPosition?u=3Dfunction(a,b){if(a=3D=3D=
=3Db){h=3D!0;return =
0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return =
a.compareDocumentPosition?-1:1;return =
a.compareDocumentPosition(b)&4?-1:1}:(u=3Dfunction(a,b){if(a=3D=3D=3Db){h=
=3D!0;return 0}if(a.sourceIndex&&b.sourceIndex)return =
a.sourceIndex-b.sourceIndex;var =
c,d,e=3D[],f=3D[],g=3Da.parentNode,i=3Db.parentNode,j=3Dg;if(g=3D=3D=3Di)=
return v(a,b);if(!g)return-1;if(!i)return =
1;while(j)e.unshift(j),j=3Dj.parentNode;j=3Di;while(j)f.unshift(j),j=3Dj.=
parentNode;c=3De.length,d=3Df.length;for(var =
k=3D0;k<c&&k<d;k++)if(e[k]!=3D=3Df[k])return v(e[k],f[k]);return =
k=3D=3D=3Dc?v(a,f[k],-1):v(e[k],b,1)},v=3Dfunction(a,b,c){if(a=3D=3D=3Db)=
return c;var =
d=3Da.nextSibling;while(d){if(d=3D=3D=3Db)return-1;d=3Dd.nextSibling}retu=
rn 1}),function(){var a=3Dc.createElement("div"),d=3D"script"+(new =
Date).getTime(),e=3Dc.documentElement;a.innerHTML=3D"<a =
name=3D'"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.=
find.ID=3Dfunction(a,c,d){if(typeof =
c.getElementById!=3D"undefined"&&!d){var =
e=3Dc.getElementById(a[1]);return e?e.id=3D=3D=3Da[1]||typeof =
e.getAttributeNode!=3D"undefined"&&e.getAttributeNode("id").nodeValue=3D=3D=
=3Da[1]?[e]:b:[]}},o.filter.ID=3Dfunction(a,b){var c=3Dtypeof =
a.getAttributeNode!=3D"undefined"&&a.getAttributeNode("id");return =
a.nodeType=3D=3D=3D1&&c&&c.nodeValue=3D=3D=3Db}),e.removeChild(a),e=3Da=3D=
null}(),function(){var =
a=3Dc.createElement("div");a.appendChild(c.createComment("")),a.getElemen=
tsByTagName("*").length>0&&(o.find.TAG=3Dfunction(a,b){var =
c=3Db.getElementsByTagName(a[1]);if(a[1]=3D=3D=3D"*"){var d=3D[];for(var =
e=3D0;c[e];e++)c[e].nodeType=3D=3D=3D1&&d.push(c[e]);c=3Dd}return =
c}),a.innerHTML=3D"<a href=3D'#'></a>",a.firstChild&&typeof =
a.firstChild.getAttribute!=3D"undefined"&&a.firstChild.getAttribute("href=
")!=3D=3D"#"&&(o.attrHandle.href=3Dfunction(a){return =
a.getAttribute("href",2)}),a=3Dnull}(),c.querySelectorAll&&function(){var=
 a=3Dm,b=3Dc.createElement("div"),d=3D"__sizzle__";b.innerHTML=3D"<p =
class=3D'TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").=
length!=3D=3D0){m=3Dfunction(b,e,f,g){e=3De||c;if(!g&&!m.isXML(e)){var =
h=3D/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType=3D=3D=3D=
1||e.nodeType=3D=3D=3D9)){if(h[1])return =
s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClas=
sName)return =
s(e.getElementsByClassName(h[2]),f)}if(e.nodeType=3D=3D=3D9){if(b=3D=3D=3D=
"body"&&e.body)return s([e.body],f);if(h&&h[3]){var =
i=3De.getElementById(h[3]);if(!i||!i.parentNode)return =
s([],f);if(i.id=3D=3D=3Dh[3])return s([i],f)}try{return =
s(e.querySelectorAll(b),f)}catch(j){}}else =
if(e.nodeType=3D=3D=3D1&&e.nodeName.toLowerCase()!=3D=3D"object"){var =
k=3De,l=3De.getAttribute("id"),n=3Dl||d,p=3De.parentNode,q=3D/^\s*[+~]/.t=
est(b);l?n=3Dn.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=3De.p=
arentNode);try{if(!q||p)return s(e.querySelectorAll("[id=3D'"+n+"'] =
"+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return =
a(b,e,f,g)};for(var e in a)m[e]=3Da[e];b=3Dnull}}(),function(){var =
a=3Dc.documentElement,b=3Da.matchesSelector||a.mozMatchesSelector||a.webk=
itMatchesSelector||a.msMatchesSelector;if(b){var =
d=3D!b.call(c.createElement("div"),"div"),e=3D!1;try{b.call(c.documentEle=
ment,"[test!=3D'']:sizzle")}catch(f){e=3D!0}m.matchesSelector=3Dfunction(=
a,c){c=3Dc.replace(/\=3D\s*([^'"\]]*)\s*\]/g,"=3D'$1']");if(!m.isXML(a))t=
ry{if(e||!o.match.PSEUDO.test(c)&&!/!=3D/.test(c)){var =
f=3Db.call(a,c);if(f||!d||a.document&&a.document.nodeType!=3D=3D11)return=
 f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var =
a=3Dc.createElement("div");a.innerHTML=3D"<div class=3D'test =
e'></div><div =
class=3D'test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClas=
sName("e").length!=3D=3D0){a.lastChild.className=3D"e";if(a.getElementsBy=
ClassName("e").length=3D=3D=3D1)return;o.order.splice(1,0,"CLASS"),o.find=
.CLASS=3Dfunction(a,b,c){if(typeof =
b.getElementsByClassName!=3D"undefined"&&!c)return =
b.getElementsByClassName(a[1])},a=3Dnull}}(),c.documentElement.contains?m=
.contains=3Dfunction(a,b){return =
a!=3D=3Db&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocume=
ntPosition?m.contains=3Dfunction(a,b){return!!(a.compareDocumentPosition(=
b)&16)}:m.contains=3Dfunction(){return!1},m.isXML=3Dfunction(a){var =
b=3D(a?a.ownerDocument||a:0).documentElement;return =
b?b.nodeName!=3D=3D"HTML":!1};var y=3Dfunction(a,b,c){var =
d,e=3D[],f=3D"",g=3Db.nodeType?[b]:b;while(d=3Do.match.PSEUDO.exec(a))f+=3D=
d[0],a=3Da.replace(o.match.PSEUDO,"");a=3Do.relative[a]?a+"*":a;for(var =
h=3D0,i=3Dg.length;h<i;h++)m(a,g[h],e,c);return =
m.filter(f,e)};m.attr=3Df.attr,m.selectors.attrMap=3D{},f.find=3Dm,f.expr=
=3Dm.selectors,f.expr[":"]=3Df.expr.filters,f.unique=3Dm.uniqueSort,f.tex=
t=3Dm.getText,f.isXMLDoc=3Dm.isXML,f.contains=3Dm.contains}();var =
L=3D/Until$/,M=3D/^(?:parents|prevUntil|prevAll)/,N=3D/,/,O=3D/^.[^:#\[\.=
,]*$/,P=3DArray.prototype.slice,Q=3Df.expr.match.POS,R=3D{children:!0,con=
tents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var =
b=3Dthis,c,d;if(typeof a!=3D"string")return =
f(a).filter(function(){for(c=3D0,d=3Db.length;c<d;c++)if(f.contains(b[c],=
this))return!0});var =
e=3Dthis.pushStack("","find",a),g,h,i;for(c=3D0,d=3Dthis.length;c<d;c++){=
g=3De.length,f.find(a,this[c],e);if(c>0)for(h=3Dg;h<e.length;h++)for(i=3D=
0;i<g;i++)if(e[i]=3D=3D=3De[h]){e.splice(h--,1);break}}return =
e},has:function(a){var b=3Df(a);return this.filter(function(){for(var =
a=3D0,c=3Db.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:funct=
ion(a){return =
this.pushStack(T(this,a,!1),"not",a)},filter:function(a){return =
this.pushStack(T(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeo=
f =
a=3D=3D"string"?Q.test(a)?f(a,this.context).index(this[0])>=3D0:f.filter(=
a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var =
c=3D[],d,e,g=3Dthis[0];if(f.isArray(a)){var =
h=3D1;while(g&&g.ownerDocument&&g!=3D=3Db){for(d=3D0;d<a.length;d++)f(g).=
is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=3Dg.parentNode,h++}ret=
urn c}var i=3DQ.test(a)||typeof =
a!=3D"string"?f(a,b||this.context):0;for(d=3D0,e=3Dthis.length;d<e;d++){g=
=3Dthis[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.pus=
h(g);break}g=3Dg.parentNode;if(!g||!g.ownerDocument||g=3D=3D=3Db||g.nodeT=
ype=3D=3D=3D11)break}}c=3Dc.length>1?f.unique(c):c;return =
this.pushStack(c,"closest",a)},index:function(a){if(!a)return =
this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof =
a=3D=3D"string")return f.inArray(this[0],f(a));return =
f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=3Dtypeof =
a=3D=3D"string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=3Df.merge(this.=
get(),c);return =
this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return=
 this.add(this.prevObject)}}),f.each({parent:function(a){var =
b=3Da.parentNode;return =
b&&b.nodeType!=3D=3D11?b:null},parents:function(a){return =
f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return =
f.dir(a,"parentNode",c)},next:function(a){return =
f.nth(a,2,"nextSibling")},prev:function(a){return =
f.nth(a,2,"previousSibling")},nextAll:function(a){return =
f.dir(a,"nextSibling")},prevAll:function(a){return =
f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return =
f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return =
f.dir(a,"previousSibling",c)},siblings:function(a){return =
f.sibling(a.parentNode.firstChild,a)},children:function(a){return =
f.sibling(a.firstChild)},contents:function(a){return =
f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.make=
Array(a.childNodes)}},function(a,b){f.fn[a]=3Dfunction(c,d){var =
e=3Df.map(this,b,c);L.test(a)||(d=3Dc),d&&typeof =
d=3D=3D"string"&&(e=3Df.filter(d,e)),e=3Dthis.length>1&&!R[a]?f.unique(e)=
:e,(this.length>1||N.test(d))&&M.test(a)&&(e=3De.reverse());return =
this.pushStack(e,a,P.call(arguments).join(","))}}),f.extend({filter:funct=
ion(a,b,c){c&&(a=3D":not("+a+")");return =
b.length=3D=3D=3D1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matche=
s(a,b)},dir:function(a,c,d){var =
e=3D[],g=3Da[c];while(g&&g.nodeType!=3D=3D9&&(d=3D=3D=3Db||g.nodeType!=3D=
=3D1||!f(g).is(d)))g.nodeType=3D=3D=3D1&&e.push(g),g=3Dg[c];return =
e},nth:function(a,b,c,d){b=3Db||1;var =
e=3D0;for(;a;a=3Da[c])if(a.nodeType=3D=3D=3D1&&++e=3D=3D=3Db)break;return=
 a},sibling:function(a,b){var =
c=3D[];for(;a;a=3Da.nextSibling)a.nodeType=3D=3D=3D1&&a!=3D=3Db&&c.push(a=
);return c}});var =
V=3D"abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|f=
ooter|header|hgroup|mark|meter|nav|output|progress|section|summary|time|v=
ideo",W=3D/ =
jQuery\d+=3D"(?:\d+|null)"/g,X=3D/^\s+/,Y=3D/<(?!area|br|col|embed|hr|img=
|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=3D/<([\w:]+)/,$=3D/<tbody/=
i,_=3D/<|&#?\w+;/,ba=3D/<(?:script|style)/i,bb=3D/<(?:script|object|embed=
|option|style)/i,bc=3Dnew =
RegExp("<(?:"+V+")","i"),bd=3D/checked\s*(?:[^=3D]|=3D\s*.checked.)/i,be=3D=
/\/(java|ecma)script/i,bf=3D/^\s*<!(?:\[CDATA\[|\-\-)/,bg=3D{option:[1,"<=
select =
multiple=3D'multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"=
],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>=
"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tb=
ody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],=
_default:[0,"",""]},bh=3DU(c);bg.optgroup=3Dbg.option,bg.tbody=3Dbg.tfoot=
=3Dbg.colgroup=3Dbg.caption=3Dbg.thead,bg.th=3Dbg.td,f.support.htmlSerial=
ize||(bg._default=3D[1,"div<div>","</div>"]),f.fn.extend({text:function(a=
){if(f.isFunction(a))return this.each(function(b){var =
c=3Df(this);c.text(a.call(this,b,c.text()))});if(typeof =
a!=3D"object"&&a!=3D=3Db)return =
this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a)=
);return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return =
this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var =
b=3Df(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.inse=
rtBefore(this[0]),b.map(function(){var =
a=3Dthis;while(a.firstChild&&a.firstChild.nodeType=3D=3D=3D1)a=3Da.firstC=
hild;return a}).append(this)}return =
this},wrapInner:function(a){if(f.isFunction(a))return =
this.each(function(b){f(this).wrapInner(a.call(this,b))});return =
this.each(function(){var =
b=3Df(this),c=3Db.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:fu=
nction(a){var b=3Df.isFunction(a);return =
this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:funct=
ion(){return =
this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWit=
h(this.childNodes)}).end()},append:function(){return =
this.domManip(arguments,!0,function(a){this.nodeType=3D=3D=3D1&&this.appe=
ndChild(a)})},prepend:function(){return =
this.domManip(arguments,!0,function(a){this.nodeType=3D=3D=3D1&&this.inse=
rtBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].pare=
ntNode)return =
this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,thi=
s)});if(arguments.length){var =
a=3Df.clean(arguments);a.push.apply(a,this.toArray());return =
this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[=
0].parentNode)return =
this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,thi=
s.nextSibling)});if(arguments.length){var =
a=3Dthis.pushStack(this,"after",arguments);a.push.apply(a,f.clean(argumen=
ts));return a}},remove:function(a,b){for(var =
c=3D0,d;(d=3Dthis[c])!=3Dnull;c++)if(!a||f.filter(a,[d]).length)!b&&d.nod=
eType=3D=3D=3D1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d=
])),d.parentNode&&d.parentNode.removeChild(d);return =
this},empty:function()=0A=
{for(var =
a=3D0,b;(b=3Dthis[a])!=3Dnull;a++){b.nodeType=3D=3D=3D1&&f.cleanData(b.ge=
tElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}r=
eturn =
this},clone:function(a,b){a=3Da=3D=3Dnull?!1:a,b=3Db=3D=3Dnull?a:b;return=
 this.map(function(){return =
f.clone(this,a,b)})},html:function(a){if(a=3D=3D=3Db)return =
this[0]&&this[0].nodeType=3D=3D=3D1?this[0].innerHTML.replace(W,""):null;=
if(typeof =
a=3D=3D"string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&=
!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=3Da.replace(Y,"<$1></$2>");=
try{for(var =
c=3D0,d=3Dthis.length;c<d;c++)this[c].nodeType=3D=3D=3D1&&(f.cleanData(th=
is[c].getElementsByTagName("*")),this[c].innerHTML=3Da)}catch(e){this.emp=
ty().append(a)}}else f.isFunction(a)?this.each(function(b){var =
c=3Df(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);retu=
rn =
this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunc=
tion(a))return this.each(function(b){var =
c=3Df(this),d=3Dc.html();c.replaceWith(a.call(this,b,d))});typeof =
a!=3D"string"&&(a=3Df(a).detach());return this.each(function(){var =
b=3Dthis.nextSibling,c=3Dthis.parentNode;f(this).remove(),b?f(b).before(a=
):f(c).append(a)})}return =
this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this=
},detach:function(a){return =
this.remove(a,!0)},domManip:function(a,c,d){var =
e,g,h,i,j=3Da[0],k=3D[];if(!f.support.checkClone&&arguments.length=3D=3D=3D=
3&&typeof j=3D=3D"string"&&bd.test(j))return =
this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))retu=
rn this.each(function(e){var =
g=3Df(this);a[0]=3Dj.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(thi=
s[0]){i=3Dj&&j.parentNode,f.support.parentNode&&i&&i.nodeType=3D=3D=3D11&=
&i.childNodes.length=3D=3D=3Dthis.length?e=3D{fragment:i}:e=3Df.buildFrag=
ment(a,this,k),h=3De.fragment,h.childNodes.length=3D=3D=3D1?g=3Dh=3Dh.fir=
stChild:g=3Dh.firstChild;if(g){c=3Dc&&f.nodeName(g,"tr");for(var =
l=3D0,m=3Dthis.length,n=3Dm-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.ca=
cheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bp)}return =
this}}),f.buildFragment=3Dfunction(a,b,d){var =
e,g,h,i,j=3Da[0];b&&b[0]&&(i=3Db[0].ownerDocument||b[0]),i.createDocument=
Fragment||(i=3Dc),a.length=3D=3D=3D1&&typeof =
j=3D=3D"string"&&j.length<512&&i=3D=3D=3Dc&&j.charAt(0)=3D=3D=3D"<"&&!bb.=
test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.=
test(j))&&(g=3D!0,h=3Df.fragments[j],h&&h!=3D=3D1&&(e=3Dh)),e||(e=3Di.cre=
ateDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=3Dh?e:1);retur=
n{fragment:e,cacheable:g}},f.fragments=3D{},f.each({appendTo:"append",pre=
pendTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"re=
placeWith"},function(a,b){f.fn[a]=3Dfunction(c){var =
d=3D[],e=3Df(c),g=3Dthis.length=3D=3D=3D1&&this[0].parentNode;if(g&&g.nod=
eType=3D=3D=3D11&&g.childNodes.length=3D=3D=3D1&&e.length=3D=3D=3D1){e[b]=
(this[0]);return this}for(var h=3D0,i=3De.length;h<i;h++){var =
j=3D(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=3Dd.concat(j)}return =
this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var =
d,e,g,h=3Df.support.html5Clone||!bc.test("<"+a.nodeName)?a.cloneNode(!0):=
bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeTyp=
e=3D=3D=3D1||a.nodeType=3D=3D=3D11)&&!f.isXMLDoc(a)){bk(a,h),d=3Dbl(a),e=3D=
bl(h);for(g=3D0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=3Dbl(a=
),e=3Dbl(h);for(g=3D0;d[g];++g)bj(d[g],e[g])}}d=3De=3Dnull;return =
h},clean:function(a,b,d,e){var g;b=3Db||c,typeof =
b.createElement=3D=3D"undefined"&&(b=3Db.ownerDocument||b[0]&&b[0].ownerD=
ocument||c);var h=3D[],i;for(var j=3D0,k;(k=3Da[j])!=3Dnull;j++){typeof =
k=3D=3D"number"&&(k+=3D"");if(!k)continue;if(typeof =
k=3D=3D"string")if(!_.test(k))k=3Db.createTextNode(k);else{k=3Dk.replace(=
Y,"<$1></$2>");var =
l=3D(Z.exec(k)||["",""])[1].toLowerCase(),m=3Dbg[l]||bg._default,n=3Dm[0]=
,o=3Db.createElement("div");b=3D=3D=3Dc?bh.appendChild(o):U(b).appendChil=
d(o),o.innerHTML=3Dm[1]+k+m[2];while(n--)o=3Do.lastChild;if(!f.support.tb=
ody){var =
p=3D$.test(k),q=3Dl=3D=3D=3D"table"&&!p?o.firstChild&&o.firstChild.childN=
odes:m[1]=3D=3D=3D"<table>"&&!p?o.childNodes:[];for(i=3Dq.length-1;i>=3D0=
;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.r=
emoveChild(q[i])}!f.support.leadingWhitespace&&X.test(k)&&o.insertBefore(=
b.createTextNode(X.exec(k)[0]),o.firstChild),k=3Do.childNodes}var =
r;if(!f.support.appendChecked)if(k[0]&&typeof =
(r=3Dk.length)=3D=3D"number")for(i=3D0;i<r;i++)bn(k[i]);else =
bn(k);k.nodeType?h.push(k):h=3Df.merge(h,k)}if(d){g=3Dfunction(a){return!=
a.type||be.test(a.type)};for(j=3D0;h[j];j++)if(e&&f.nodeName(h[j],"script=
")&&(!h[j].type||h[j].type.toLowerCase()=3D=3D=3D"text/javascript"))e.pus=
h(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].no=
deType=3D=3D=3D1){var =
s=3Df.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0=
].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var =
b,c,d=3Df.cache,e=3Df.event.special,g=3Df.support.deleteExpando;for(var =
h=3D0,i;(i=3Da[h])!=3Dnull;h++){if(i.nodeName&&f.noData[i.nodeName.toLowe=
rCase()])continue;c=3Di[f.expando];if(c){b=3Dd[c];if(b&&b.events){for(var=
 j in =
b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(=
b.handle.elem=3Dnull)}g?delete =
i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete =
d[c]}}}});var =
bq=3D/alpha\([^)]*\)/i,br=3D/opacity=3D([^)]*)/,bs=3D/([A-Z]|^ms)/g,bt=3D=
/^-?\d+(?:px)?$/i,bu=3D/^-?\d/,bv=3D/^([\-+])=3D([\-+.\de]+)/,bw=3D{posit=
ion:"absolute",visibility:"hidden",display:"block"},bx=3D["Left","Right"]=
,by=3D["Top","Bottom"],bz,bA,bB;f.fn.css=3Dfunction(a,c){if(arguments.len=
gth=3D=3D=3D2&&c=3D=3D=3Db)return this;return =
f.access(this,a,c,!0,function(a,c,d){return =
d!=3D=3Db?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:f=
unction(a,b){if(b){var c=3Dbz(a,"opacity","opacity");return =
c=3D=3D=3D""?"1":c}return =
a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,=
opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.su=
pport.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a=
.nodeType!=3D=3D3&&a.nodeType!=3D=3D8&&!!a.style){var =
g,h,i=3Df.camelCase(c),j=3Da.style,k=3Df.cssHooks[i];c=3Df.cssProps[i]||i=
;if(d=3D=3D=3Db){if(k&&"get"in k&&(g=3Dk.get(a,!1,e))!=3D=3Db)return =
g;return j[c]}h=3Dtypeof =
d,h=3D=3D=3D"string"&&(g=3Dbv.exec(d))&&(d=3D+(g[1]+1)*+g[2]+parseFloat(f=
.css(a,c)),h=3D"number");if(d=3D=3Dnull||h=3D=3D=3D"number"&&isNaN(d))ret=
urn;h=3D=3D=3D"number"&&!f.cssNumber[i]&&(d+=3D"px");if(!k||!("set"in =
k)||(d=3Dk.set(a,d))!=3D=3Db)try{j[c]=3Dd}catch(l){}}},css:function(a,c,d=
){var =
e,g;c=3Df.camelCase(c),g=3Df.cssHooks[c],c=3Df.cssProps[c]||c,c=3D=3D=3D"=
cssFloat"&&(c=3D"float");if(g&&"get"in =
g&&(e=3Dg.get(a,!0,d))!=3D=3Db)return e;if(bz)return =
bz(a,c)},swap:function(a,b,c){var d=3D{};for(var e in =
b)d[e]=3Da.style[e],a.style[e]=3Db[e];c.call(a);for(e in =
b)a.style[e]=3Dd[e]}}),f.curCSS=3Df.css,f.each(["height","width"],functio=
n(a,b){f.cssHooks[b]=3D{get:function(a,c,d){var =
e;if(c){if(a.offsetWidth!=3D=3D0)return =
bC(a,b,d);f.swap(a,bw,function(){e=3DbC(a,b,d)});return =
e}},set:function(a,b){if(!bt.test(b))return =
b;b=3DparseFloat(b);if(b>=3D0)return =
b+"px"}}}),f.support.opacity||(f.cssHooks.opacity=3D{get:function(a,b){re=
turn =
br.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?par=
seFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var =
c=3Da.style,d=3Da.currentStyle,e=3Df.isNumeric(b)?"alpha(opacity=3D"+b*10=
0+")":"",g=3Dd&&d.filter||c.filter||"";c.zoom=3D1;if(b>=3D1&&f.trim(g.rep=
lace(bq,""))=3D=3D=3D""){c.removeAttribute("filter");if(d&&!d.filter)retu=
rn}c.filter=3Dbq.test(g)?g.replace(bq,e):g+" =
"+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRigh=
t=3D{get:function(a,b){var =
c;f.swap(a,{display:"inline-block"},function(){b?c=3Dbz(a,"margin-right",=
"marginRight"):c=3Da.style.marginRight});return =
c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bA=3Dfunction(a,b)=
{var =
c,d,e;b=3Db.replace(bs,"-$1").toLowerCase(),(d=3Da.ownerDocument.defaultV=
iew)&&(e=3Dd.getComputedStyle(a,null))&&(c=3De.getPropertyValue(b),c=3D=3D=
=3D""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=3Df.style(a,b))=
);return c}),c.documentElement.currentStyle&&(bB=3Dfunction(a,b){var =
c,d,e,f=3Da.currentStyle&&a.currentStyle[b],g=3Da.style;f=3D=3D=3Dnull&&g=
&&(e=3Dg[b])&&(f=3De),!bt.test(f)&&bu.test(f)&&(c=3Dg.left,d=3Da.runtimeS=
tyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=3Da.currentStyle.left),=
g.left=3Db=3D=3D=3D"fontSize"?"1em":f||0,f=3Dg.pixelLeft+"px",g.left=3Dc,=
d&&(a.runtimeStyle.left=3Dd));return =
f=3D=3D=3D""?"auto":f}),bz=3DbA||bB,f.expr&&f.expr.filters&&(f.expr.filte=
rs.hidden=3Dfunction(a){var b=3Da.offsetWidth,c=3Da.offsetHeight;return =
b=3D=3D=3D0&&c=3D=3D=3D0||!f.support.reliableHiddenOffsets&&(a.style&&a.s=
tyle.display||f.css(a,"display"))=3D=3D=3D"none"},f.expr.filters.visible=3D=
function(a){return!f.expr.filters.hidden(a)});var =
bD=3D/%20/g,bE=3D/\[\]$/,bF=3D/\r?\n/g,bG=3D/#.*$/,bH=3D/^(.*?):[ =
\t]*([^\r\n]*)\r?$/mg,bI=3D/^(?:color|date|datetime|datetime-local|email|=
hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bJ=3D=
/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bK=3D/^(?:G=
ET|HEAD)$/,bL=3D/^\/\//,bM=3D/\?/,bN=3D/<script\b[^<]*(?:(?!<\/script>)<[=
^<]*)*<\/script>/gi,bO=3D/^(?:select|textarea)/i,bP=3D/\s+/,bQ=3D/([?&])_=
=3D[^&]*/,bR=3D/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bS=3Df.fn=
.load,bT=3D{},bU=3D{},bV,bW,bX=3D["*/"]+["*"];try{bV=3De.href}catch(bY){b=
V=3Dc.createElement("a"),bV.href=3D"",bV=3DbV.href}bW=3DbR.exec(bV.toLowe=
rCase())||[],f.fn.extend({load:function(a,c,d){if(typeof =
a!=3D"string"&&bS)return bS.apply(this,arguments);if(!this.length)return =
this;var e=3Da.indexOf(" ");if(e>=3D0){var =
g=3Da.slice(e,a.length);a=3Da.slice(0,e)}var =
h=3D"GET";c&&(f.isFunction(c)?(d=3Dc,c=3Db):typeof =
c=3D=3D"object"&&(c=3Df.param(c,f.ajaxSettings.traditional),h=3D"POST"));=
var =
i=3Dthis;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,=
b,c){c=3Da.responseText,a.isResolved()&&(a.done(function(a){c=3Da}),i.htm=
l(g?f("<div>").append(c.replace(bN,"")).find(g):c)),d&&i.each(d,[c,b,a])}=
});return this},serialize:function(){return =
f.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){return =
this.elements?f.makeArray(this.elements):this}).filter(function(){return =
this.name&&!this.disabled&&(this.checked||bO.test(this.nodeName)||bI.test=
(this.type))}).map(function(a,b){var c=3Df(this).val();return =
c=3D=3Dnull?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,va=
lue:a.replace(bF,"\r\n")}}):{name:b.name,value:c.replace(bF,"\r\n")}}).ge=
t()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess =
ajaxSend".split(" "),function(a,b){f.fn[b]=3Dfunction(a){return =
this.on(b,a)}}),f.each(["get","post"],function(a,c){f[c]=3Dfunction(a,d,e=
,g){f.isFunction(d)&&(g=3Dg||e,e=3Dd,d=3Db);return =
f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript=
:function(a,c){return =
f.get(a,b,c,"script")},getJSON:function(a,b,c){return =
f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?b_(a,f.ajaxSettings):(b=3D=
a,a=3Df.ajaxSettings),b_(a,b);return =
a},ajaxSettings:{url:bV,isLocal:bJ.test(bW[1]),global:!0,type:"GET",conte=
ntType:"application/x-www-form-urlencoded",processData:!0,async:!0,accept=
s:{xml:"application/xml, =
text/xml",html:"text/html",text:"text/plain",json:"application/json, =
text/javascript","*":bX},contents:{xml:/xml/,html:/html/,json:/json/},res=
ponseFields:{xml:"responseXML",text:"responseText"},converters:{"* =
text":a.String,"text html":!0,"text json":f.parseJSON,"text =
xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bZ(bT),aj=
axTransport:bZ(bU),ajax:function(a,c){function =
w(a,c,l,m){if(s!=3D=3D2){s=3D2,q&&clearTimeout(q),p=3Db,n=3Dm||"",v.ready=
State=3Da>0?4:0;var =
o,r,u,w=3Dc,x=3Dl?cb(d,v,l):b,y,z;if(a>=3D200&&a<300||a=3D=3D=3D304){if(d=
.ifModified){if(y=3Dv.getResponseHeader("Last-Modified"))f.lastModified[k=
]=3Dy;if(z=3Dv.getResponseHeader("Etag"))f.etag[k]=3Dz}if(a=3D=3D=3D304)w=
=3D"notmodified",o=3D!0;else =
try{r=3Dcc(d,x),w=3D"success",o=3D!0}catch(A){w=3D"parsererror",u=3DA}}el=
se{u=3Dw;if(!w||a)w=3D"error",a<0&&(a=3D0)}v.status=3Da,v.statusText=3D""=
+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j=
),j=3Db,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith=
(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger=
("ajaxStop"))}}typeof a=3D=3D"object"&&(c=3Da,a=3Db),c=3Dc||{};var =
d=3Df.ajaxSetup({},c),e=3Dd.context||d,g=3De!=3D=3Dd&&(e.nodeType||e =
instanceof f)?f(e):f.event,h=3Df.Deferred(),i=3Df.Callbacks("once =
memory"),j=3Dd.statusCode||{},k,l=3D{},m=3D{},n,o,p,q,r,s=3D0,t,u,v=3D{re=
adyState:0,setRequestHeader:function(a,b){if(!s){var =
c=3Da.toLowerCase();a=3Dm[c]=3Dm[c]||a,l[a]=3Db}return =
this},getAllResponseHeaders:function(){return =
s=3D=3D=3D2?n:null},getResponseHeader:function(a){var =
c;if(s=3D=3D=3D2){if(!o){o=3D{};while(c=3DbH.exec(n))o[c[1].toLowerCase()=
]=3Dc[2]}c=3Do[a.toLowerCase()]}return =
c=3D=3D=3Db?null:c},overrideMimeType:function(a){s||(d.mimeType=3Da);retu=
rn this},abort:function(a){a=3Da||"abort",p&&p.abort(a),w(0,a);return =
this}};h.promise(v),v.success=3Dv.done,v.error=3Dv.fail,v.complete=3Di.ad=
d,v.statusCode=3Dfunction(a){if(a){var b;if(s<2)for(b in =
a)j[b]=3D[j[b],a[b]];else b=3Da[v.status],v.then(b,b)}return =
this},d.url=3D((a||d.url)+"").replace(bG,"").replace(bL,bW[1]+"//"),d.dat=
aTypes=3Df.trim(d.dataType||"*").toLowerCase().split(bP),d.crossDomain=3D=
=3Dnull&&(r=3DbR.exec(d.url.toLowerCase()),d.crossDomain=3D!(!r||r[1]=3D=3D=
bW[1]&&r[2]=3D=3DbW[2]&&(r[3]||(r[1]=3D=3D=3D"http:"?80:443))=3D=3D(bW[3]=
||(bW[1]=3D=3D=3D"http:"?80:443)))),d.data&&d.processData&&typeof =
d.data!=3D"string"&&(d.data=3Df.param(d.data,d.traditional)),b$(bT,d,c,v)=
;if(s=3D=3D=3D2)return!1;t=3Dd.global,d.type=3Dd.type.toUpperCase(),d.has=
Content=3D!bK.test(d.type),t&&f.active++=3D=3D=3D0&&f.event.trigger("ajax=
Start");if(!d.hasContent){d.data&&(d.url+=3D(bM.test(d.url)?"&":"?")+d.da=
ta,delete d.data),k=3Dd.url;if(d.cache=3D=3D=3D!1){var =
x=3Df.now(),y=3Dd.url.replace(bQ,"$1_=3D"+x);d.url=3Dy+(y=3D=3D=3Dd.url?(=
bM.test(d.url)?"&":"?")+"_=3D"+x:"")}}(d.data&&d.hasContent&&d.contentTyp=
e!=3D=3D!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentTy=
pe),d.ifModified&&(k=3Dk||d.url,f.lastModified[k]&&v.setRequestHeader("If=
-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-Non=
e-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accept=
s[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=3D=3D"*"?", =
"+bX+"; q=3D0.01":""):d.accepts["*"]);for(u in =
d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSe=
nd.call(e,v,d)=3D=3D=3D!1||s=3D=3D=3D2)){v.abort();return!1}for(u =
in{success:1,error:1,complete:1})v[u](d[u]);p=3Db$(bU,d,c,v);if(!p)w(-1,"=
No =
Transport");else{v.readyState=3D1,t&&g.trigger("ajaxSend",[v,d]),d.async&=
&d.timeout>0&&(q=3DsetTimeout(function(){v.abort("timeout")},d.timeout));=
try{s=3D1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw z}}return =
v},param:function(a,c){var =
d=3D[],e=3Dfunction(a,b){b=3Df.isFunction(b)?b():b,d[d.length]=3DencodeUR=
IComponent(a)+"=3D"+encodeURIComponent(b)};c=3D=3D=3Db&&(c=3Df.ajaxSettin=
gs.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,f=
unction(){e(this.name,this.value)});else for(var g in =
a)ca(g,a[g],c,e);return =
d.join("&").replace(bD,"+")}}),f.extend({active:0,lastModified:{},etag:{}=
});var =
cd=3Df.now(),ce=3D/(\=3D)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jso=
npCallback:function(){return f.expando+"_"+cd++}}),f.ajaxPrefilter("json =
jsonp",function(b,c,d){var =
e=3Db.contentType=3D=3D=3D"application/x-www-form-urlencoded"&&typeof =
b.data=3D=3D"string";if(b.dataTypes[0]=3D=3D=3D"jsonp"||b.jsonp!=3D=3D!1&=
&(ce.test(b.url)||e&&ce.test(b.data))){var =
g,h=3Db.jsonpCallback=3Df.isFunction(b.jsonpCallback)?b.jsonpCallback():b=
.jsonpCallback,i=3Da[h],j=3Db.url,k=3Db.data,l=3D"$1"+h+"$2";b.jsonp!=3D=3D=
!1&&(j=3Dj.replace(ce,l),b.url=3D=3D=3Dj&&(e&&(k=3Dk.replace(ce,l)),b.dat=
a=3D=3D=3Dk&&(j+=3D(/\?/.test(j)?"&":"?")+b.jsonp+"=3D"+h))),b.url=3Dj,b.=
data=3Dk,a[h]=3Dfunction(a){g=3D[a]},d.always(function(){a[h]=3Di,g&&f.is=
Function(i)&&a[h](g[0])}),b.converters["script =
json"]=3Dfunction(){g||f.error(h+" was not called");return =
g[0]},b.dataTypes[0]=3D"json";return"script"}}),f.ajaxSetup({accepts:{scr=
ipt:"text/javascript, application/javascript, application/ecmascript, =
application/x-ecmascript"},contents:{script:/javascript|ecmascript/},conv=
erters:{"text script":function(a){f.globalEval(a);return =
a}}}),f.ajaxPrefilter("script",function(a){a.cache=3D=3D=3Db&&(a.cache=3D=
!1),a.crossDomain&&(a.type=3D"GET",a.global=3D!1)}),f.ajaxTransport("scri=
pt",function(a){if(a.crossDomain){var =
d,e=3Dc.head||c.getElementsByTagName("head")[0]||c.documentElement;return=
{send:function(f,g){d=3Dc.createElement("script"),d.async=3D"async",a.scr=
iptCharset&&(d.charset=3Da.scriptCharset),d.src=3Da.url,d.onload=3Dd.onre=
adystatechange=3Dfunction(a,c){if(c||!d.readyState||/loaded|complete/.tes=
t(d.readyState))d.onload=3Dd.onreadystatechange=3Dnull,e&&d.parentNode&&e=
.removeChild(d),d=3Db,c||g(200,"success")},e.insertBefore(d,e.firstChild)=
},abort:function(){d&&d.onload(0,1)}}}});var =
cf=3Da.ActiveXObject?function(){for(var a in =
ch)ch[a](0,1)}:!1,cg=3D0,ch;f.ajaxSettings.xhr=3Da.ActiveXObject?function=
(){return!this.isLocal&&ci()||cj()}:ci,function(a){f.extend(f.support,{aj=
ax:!!a,cors:!!a&&"withCredentials"in =
a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if=
(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var =
h=3Dc.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.passw=
ord):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in =
c.xhrFields)h[j]=3Dc.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overr=
ideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Req=
uested-With"]=3D"XMLHttpRequest");try{for(j in =
e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null)=
,d=3Dfunction(a,e){var =
j,k,l,m,n;try{if(d&&(e||h.readyState=3D=3D=3D4)){d=3Db,i&&(h.onreadystate=
change=3Df.noop,cf&&delete =
ch[i]);if(e)h.readyState!=3D=3D4&&h.abort();else{j=3Dh.status,l=3Dh.getAl=
lResponseHeaders(),m=3D{},n=3Dh.responseXML,n&&n.documentElement&&(m.xml=3D=
n),m.text=3Dh.responseText;try{k=3Dh.statusText}catch(o){k=3D""}!j&&c.isL=
ocal&&!c.crossDomain?j=3Dm.text?200:404:j=3D=3D=3D1223&&(j=3D204)}}}catch=
(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState=3D=3D=3D4?d():(i=3D+=
+cg,cf&&(ch||(ch=3D{},f(a).unload(cf)),ch[i]=3Dd),h.onreadystatechange=3D=
d)},abort:function(){d&&d(0,1)}}}});var =
ck=3D{},cl,cm,cn=3D/^(?:toggle|show|hide)$/,co=3D/^([+\-]=3D)?([\d+.\-]+)=
([a-z%]*)$/i,cp,cq=3D[["height","marginTop","marginBottom","paddingTop","=
paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddin=
gRight"],["opacity"]],cr;f.fn.extend({show:function(a,b,c){var =
d,e;if(a||a=3D=3D=3D0)return this.animate(cu("show",3),a,b,c);for(var =
g=3D0,h=3Dthis.length;g<h;g++)d=3Dthis[g],d.style&&(e=3Dd.style.display,!=
f._data(d,"olddisplay")&&e=3D=3D=3D"none"&&(e=3Dd.style.display=3D""),e=3D=
=3D=3D""&&f.css(d,"display")=3D=3D=3D"none"&&f._data(d,"olddisplay",cv(d.=
nodeName)));for(g=3D0;g<h;g++){d=3Dthis[g];if(d.style){e=3Dd.style.displa=
y;if(e=3D=3D=3D""||e=3D=3D=3D"none")d.style.display=3Df._data(d,"olddispl=
ay")||""}}return this},hide:function(a,b,c){if(a||a=3D=3D=3D0)return =
this.animate(cu("hide",3),a,b,c);var =
d,e,g=3D0,h=3Dthis.length;for(;g<h;g++)d=3Dthis[g],d.style&&(e=3Df.css(d,=
"display"),e!=3D=3D"none"&&!f._data(d,"olddisplay")&&f._data(d,"olddispla=
y",e));for(g=3D0;g<h;g++)this[g].style&&(this[g].style.display=3D"none");=
return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=3Dtypeof =
a=3D=3D"boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this=
,arguments):a=3D=3Dnull||d?this.each(function(){var =
b=3Dd?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(c=
u("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return =
this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},=
a,c,d)},animate:function(a,b,c,d){function =
g(){e.queue=3D=3D=3D!1&&f._mark(this);var =
b=3Df.extend({},e),c=3Dthis.nodeType=3D=3D=3D1,d=3Dc&&f(this).is(":hidden=
"),g,h,i,j,k,l,m,n,o;b.animatedProperties=3D{};for(i in =
a){g=3Df.camelCase(i),i!=3D=3Dg&&(a[g]=3Da[i],delete =
a[i]),h=3Da[g],f.isArray(h)?(b.animatedProperties[g]=3Dh[1],h=3Da[g]=3Dh[=
0]):b.animatedProperties[g]=3Db.specialEasing&&b.specialEasing[g]||b.easi=
ng||"swing";if(h=3D=3D=3D"hide"&&d||h=3D=3D=3D"show"&&!d)return =
b.complete.call(this);c&&(g=3D=3D=3D"height"||g=3D=3D=3D"width")&&(b.over=
flow=3D[this.style.overflow,this.style.overflowX,this.style.overflowY],f.=
css(this,"display")=3D=3D=3D"inline"&&f.css(this,"float")=3D=3D=3D"none"&=
&(!f.support.inlineBlockNeedsLayout||cv(this.nodeName)=3D=3D=3D"inline"?t=
his.style.display=3D"inline-block":this.style.zoom=3D1))}b.overflow!=3Dnu=
ll&&(this.style.overflow=3D"hidden");for(i in a)j=3Dnew =
f.fx(this,b,i),h=3Da[i],cn.test(h)?(o=3Df._data(this,"toggle"+i)||(h=3D=3D=
=3D"toggle"?d?"show":"hide":0),o?(f._data(this,"toggle"+i,o=3D=3D=3D"show=
"?"hide":"show"),j[o]()):j[h]()):(k=3Dco.exec(h),l=3Dj.cur(),k?(m=3Dparse=
Float(k[2]),n=3Dk[3]||(f.cssNumber[i]?"":"px"),n!=3D=3D"px"&&(f.style(thi=
s,i,(m||1)+n),l=3D(m||1)/j.cur()*l,f.style(this,i,l+n)),k[1]&&(m=3D(k[1]=3D=
=3D=3D"-=3D"?-1:1)*m+l),j.custom(l,m,n)):j.custom(l,h,""));return!0}var =
e=3Df.speed(b,c,d);if(f.isEmptyObject(a))return =
this.each(e.complete,[!1]);a=3Df.extend({},a);return =
e.queue=3D=3D=3D!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,=
d){typeof =
a!=3D"string"&&(d=3Dc,c=3Da,a=3Db),c&&a!=3D=3D!1&&this.queue(a||"fx",[]);=
return this.each(function(){function h(a,b,c){var =
e=3Db[c];f.removeData(a,c,!0),e.stop(d)}var =
b,c=3D!1,e=3Df.timers,g=3Df._data(this);d||f._unmark(!0,this);if(a=3D=3Dn=
ull)for(b in =
g)g[b]&&g[b].stop&&b.indexOf(".run")=3D=3D=3Db.length-4&&h(this,g,b);else=
 =
g[b=3Da+".run"]&&g[b].stop&&h(this,g,b);for(b=3De.length;b--;)e[b].elem=3D=
=3D=3Dthis&&(a=3D=3Dnull||e[b].queue=3D=3D=3Da)&&(d?e[b](!0):e[b].saveSta=
te(),c=3D!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slide=
Down:cu("show",1),slideUp:cu("hide",1),slideToggle:cu("toggle",1),fadeIn:=
{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},=
function(a,b){f.fn[a]=3Dfunction(a,c,d){return =
this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var =
d=3Da&&typeof =
a=3D=3D"object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,dur=
ation:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=3Df.fx.off?0:type=
of d.duration=3D=3D"number"?d.duration:d.duration in =
f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue=3D=3D=
null||d.queue=3D=3D=3D!0)d.queue=3D"fx";d.old=3Dd.complete,d.complete=3Df=
unction(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d=
.queue):a!=3D=3D!1&&f._unmark(this)};return =
d},easing:{linear:function(a,b,c,d){return =
c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},ti=
mers:[],fx:function(a,b,c){this.options=3Db,this.elem=3Da,this.prop=3Dc,b=
.orig=3Db.orig||{}}}),f.fx.prototype=3D{update:function(){this.options.st=
ep&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]=
||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=3Dnu=
ll&&(!this.elem.style||this.elem.style[this.prop]=3D=3Dnull))return =
this.elem[this.prop];var a,b=3Df.css(this.elem,this.prop);return =
isNaN(a=3DparseFloat(b))?!b||b=3D=3D=3D"auto"?0:b:a},custom:function(a,c,=
d){function h(a){return e.step(a)}var =
e=3Dthis,g=3Df.fx;this.startTime=3Dcr||cs(),this.end=3Dc,this.now=3Dthis.=
start=3Da,this.pos=3Dthis.state=3D0,this.unit=3Dd||this.unit||(f.cssNumbe=
r[this.prop]?"":"px"),h.queue=3Dthis.options.queue,h.elem=3Dthis.elem,h.s=
aveState=3Dfunction(){e.options.hide&&f._data(e.elem,"fxshow"+e.prop)=3D=3D=
=3Db&&f._data(e.elem,"fxshow"+e.prop,e.start)},h()&&f.timers.push(h)&&!cp=
&&(cp=3DsetInterval(g.tick,g.interval))},show:function(){var =
a=3Df._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=3D=
a||f.style(this.elem,this.prop),this.options.show=3D!0,a!=3D=3Db?this.cus=
tom(this.cur(),a):this.custom(this.prop=3D=3D=3D"width"||this.prop=3D=3D=3D=
"height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.option=
s.orig[this.prop]=3Df._data(this.elem,"fxshow"+this.prop)||f.style(this.e=
lem,this.prop),this.options.hide=3D!0,this.custom(this.cur(),0)},step:fun=
ction(a){var =
b,c,d,e=3Dcr||cs(),g=3D!0,h=3Dthis.elem,i=3Dthis.options;if(a||e>=3Di.dur=
ation+this.startTime){this.now=3Dthis.end,this.pos=3Dthis.state=3D1,this.=
update(),i.animatedProperties[this.prop]=3D!0;for(b in =
i.animatedProperties)i.animatedProperties[b]!=3D=3D!0&&(g=3D!1);if(g){i.o=
verflow!=3Dnull&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],functio=
n(a,b){h.style["overflow"+b]=3Di.overflow[a]}),i.hide&&f(h).hide();if(i.h=
ide||i.show)for(b in =
i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0)=
,f.removeData(h,"toggle"+b,!0);d=3Di.complete,d&&(i.complete=3D!1,d.call(=
h))}return!1}i.duration=3D=3DInfinity?this.now=3De:(c=3De-this.startTime,=
this.state=3Dc/i.duration,this.pos=3Df.easing[i.animatedProperties[this.p=
rop]](this.state,c,0,1,i.duration),this.now=3Dthis.start+(this.end-this.s=
tart)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){v=
ar =
a,b=3Df.timers,c=3D0;for(;c<b.length;c++)a=3Db[c],!a()&&b[c]=3D=3D=3Da&&b=
.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearIn=
terval(cp),cp=3Dnull},speeds:{slow:600,fast:200,_default:400},step:{opaci=
ty:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.el=
em.style&&a.elem.style[a.prop]!=3Dnull?a.elem.style[a.prop]=3Da.now+a.uni=
t:a.elem[a.prop]=3Da.now}}}),f.each(["width","height"],function(a,b){f.fx=
.step[b]=3Dfunction(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)}}),f.ex=
pr&&f.expr.filters&&(f.expr.filters.animated=3Dfunction(a){return =
f.grep(f.timers,function(b){return a=3D=3D=3Db.elem}).length});var =
cw=3D/^t(?:able|d|h)$/i,cx=3D/^(?:body|html)$/i;"getBoundingClientRect"in=
 c.documentElement?f.fn.offset=3Dfunction(a){var =
b=3Dthis[0],c;if(a)return =
this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocum=
ent)return null;if(b=3D=3D=3Db.ownerDocument.body)return =
f.offset.bodyOffset(b);try{c=3Db.getBoundingClientRect()}catch(d){}var =
e=3Db.ownerDocument,g=3De.documentElement;if(!c||!f.contains(g,b))return =
c?{top:c.top,left:c.left}:{top:0,left:0};var =
h=3De.body,i=3Dcy(e),j=3Dg.clientTop||h.clientTop||0,k=3Dg.clientLeft||h.=
clientLeft||0,l=3Di.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrol=
lTop,m=3Di.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=3D=
c.top+l-j,o=3Dc.left+m-k;return{top:n,left:o}}:f.fn.offset=3Dfunction(a){=
var b=3Dthis[0];if(a)return =
this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocum=
ent)return null;if(b=3D=3D=3Db.ownerDocument.body)return =
f.offset.bodyOffset(b);var =
c,d=3Db.offsetParent,e=3Db,g=3Db.ownerDocument,h=3Dg.documentElement,i=3D=
g.body,j=3Dg.defaultView,k=3Dj?j.getComputedStyle(b,null):b.currentStyle,=
l=3Db.offsetTop,m=3Db.offsetLeft;while((b=3Db.parentNode)&&b!=3D=3Di&&b!=3D=
=3Dh){if(f.support.fixedPosition&&k.position=3D=3D=3D"fixed")break;c=3Dj?=
j.getComputedStyle(b,null):b.currentStyle,l-=3Db.scrollTop,m-=3Db.scrollL=
eft,b=3D=3D=3Dd&&(l+=3Db.offsetTop,m+=3Db.offsetLeft,f.support.doesNotAdd=
Border&&(!f.support.doesAddBorderForTableAndCells||!cw.test(b.nodeName))&=
&(l+=3DparseFloat(c.borderTopWidth)||0,m+=3DparseFloat(c.borderLeftWidth)=
||0),e=3Dd,d=3Db.offsetParent),f.support.subtractsBorderForOverflowNotVis=
ible&&c.overflow!=3D=3D"visible"&&(l+=3DparseFloat(c.borderTopWidth)||0,m=
+=3DparseFloat(c.borderLeftWidth)||0),k=3Dc}if(k.position=3D=3D=3D"relati=
ve"||k.position=3D=3D=3D"static")l+=3Di.offsetTop,m+=3Di.offsetLeft;f.sup=
port.fixedPosition&&k.position=3D=3D=3D"fixed"&&(l+=3DMath.max(h.scrollTo=
p,i.scrollTop),m+=3DMath.max(h.scrollLeft,i.scrollLeft));return{top:l,lef=
t:m}},f.offset=3D{bodyOffset:function(a){var =
b=3Da.offsetTop,c=3Da.offsetLeft;f.support.doesNotIncludeMarginInBodyOffs=
et&&(b+=3DparseFloat(f.css(a,"marginTop"))||0,c+=3DparseFloat(f.css(a,"ma=
rginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var =
d=3Df.css(a,"position");d=3D=3D=3D"static"&&(a.style.position=3D"relative=
");var =
e=3Df(a),g=3De.offset(),h=3Df.css(a,"top"),i=3Df.css(a,"left"),j=3D(d=3D=3D=
=3D"absolute"||d=3D=3D=3D"fixed")&&f.inArray("auto",[h,i])>-1,k=3D{},l=3D=
{},m,n;j?(l=3De.position(),m=3Dl.top,n=3Dl.left):(m=3DparseFloat(h)||0,n=3D=
parseFloat(i)||0),f.isFunction(b)&&(b=3Db.call(a,c,g)),b.top!=3Dnull&&(k.=
top=3Db.top-g.top+m),b.left!=3Dnull&&(k.left=3Db.left-g.left+n),"using"in=
 =
b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[=
0])return null;var =
a=3Dthis[0],b=3Dthis.offsetParent(),c=3Dthis.offset(),d=3Dcx.test(b[0].no=
deName)?{top:0,left:0}:b.offset();c.top-=3DparseFloat(f.css(a,"marginTop"=
))||0,c.left-=3DparseFloat(f.css(a,"marginLeft"))||0,d.top+=3DparseFloat(=
f.css(b[0],"borderTopWidth"))||0,d.left+=3DparseFloat(f.css(b[0],"borderL=
eftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:f=
unction(){return this.map(function(){var =
a=3Dthis.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"pos=
ition")=3D=3D=3D"static")a=3Da.offsetParent;return =
a})}}),f.each(["Left","Top"],function(a,c){var =
d=3D"scroll"+c;f.fn[d]=3Dfunction(c){var =
e,g;if(c=3D=3D=3Db){e=3Dthis[0];if(!e)return null;g=3Dcy(e);return =
g?"pageXOffset"in =
g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documen=
tElement[d]||g.document.body[d]:e[d]}return =
this.each(function(){g=3Dcy(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:=
f(g).scrollTop()):this[d]=3Dc})}}),f.each(["Height","Width"],function(a,c=
){var d=3Dc.toLowerCase();f.fn["inner"+c]=3Dfunction(){var =
a=3Dthis[0];return =
a?a.style?parseFloat(f.css(a,d,"padding")):this[d]():null},f.fn["outer"+c=
]=3Dfunction(a){var b=3Dthis[0];return =
b?b.style?parseFloat(f.css(b,d,a?"margin":"border")):this[d]():null},f.fn=
[d]=3Dfunction(a){var e=3Dthis[0];if(!e)return =
a=3D=3Dnull?null:this;if(f.isFunction(a))return =
this.each(function(b){var =
c=3Df(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var =
g=3De.document.documentElement["client"+c],h=3De.document.body;return =
e.document.compatMode=3D=3D=3D"CSS1Compat"&&g||h&&h["client"+c]||g}if(e.n=
odeType=3D=3D=3D9)return =
Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentEleme=
nt["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a=3D=3D=
=3Db){var i=3Df.css(e,d),j=3DparseFloat(i);return =
f.isNumeric(j)?j:i}return this.css(d,typeof =
a=3D=3D"string"?a:a+"px")}}),a.jQuery=3Da.$=3Df,typeof =
define=3D=3D"function"&&define.amd&&define.amd.jQuery&&define("jquery",[]=
,function(){return f})})(window);
------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/cookie.js

function getCookie(name) {=0A=
    var nameEQ =3D name + "=3D";=0A=
    var ca =3D document.cookie.split(';');=0A=
    for(var i=3D0;i < ca.length;i++) {=0A=
        var c =3D ca[i];=0A=
        while (c.charAt(0)=3D=3D' ') c =3D c.substring(1,c.length);=0A=
        if (c.indexOf(nameEQ) =3D=3D 0) return =
c.substring(nameEQ.length,c.length);=0A=
    }=0A=
    return false;=0A=
}=0A=
function setCookie(name,value,days) {=0A=
    if (days) {=0A=
        var date =3D new Date();=0A=
        date.setTime(date.getTime()+(days*24*60*60*1000));=0A=
        var expires =3D "; expires=3D"+date.toGMTString();=0A=
    }=0A=
    else expires =3D "";=0A=
    document.cookie =3D name+"=3D"+value+expires+"; path=3D/";=0A=
}
------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/login.js?v=1.0.0.6

document.domain =3D "51cto.com";=0A=
function Login(){=0A=
	new AutoBox({noCon:true,ADD:$('<iframe =
src=3D"http://home.51cto.com/index/iframe-login?reback=3D'+location.href+=
'"  iframeboder=3D"0" scrolling=3D"no" allowtransparency=3D"true" =
style=3D"border: 0 none;height:350px" width=3D"380" id=3D"login_form" =
name=3D"login_form"></iframe>'),mask:"#000",W:380,H:403})=0A=
}=0A=
function resetLoginIframe(height){=0A=
	document.getElementById('login_form').style.height =3D height+'px';=0A=
}=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/common.js?v=1.0.0.8

// save && get && del Cookies=0A=
function setCookie(name,value,iDay){var oDate=3Dnew =
Date();oDate.setTime(oDate.getTime()+iDay*1000);var =
dateStr=3D(iDay=3D=3D0)?"":";expires=3D"+oDate.toGMTString();document.coo=
kie=3Dname+"=3D"+value+dateStr+";path=3D/"}function getCookie(name){var =
arr=3Ddocument.cookie.split("; ");var =
i=3D0;for(i=3D0;i<arr.length;i++){var =
arr2=3Darr[i].split("=3D");if(arr2[0]=3D=3Dname){return =
arr2[1]}}return""}function removeCookie(name){setCookie(name,"",-1)};=0A=
// select tab list=0A=
function setHover(obj){=0A=
  obj.mouseenter(function(){=0A=
    if(obj.find('ul li').length > 0){=0A=
      obj.addClass('on')=0A=
    }=0A=
  }).mouseleave(function(){=0A=
    obj.removeClass('on')=0A=
  })=0A=
}=0A=
function setPraise(obj){//=E8=B5=9E=0A=
  obj.click(function(ev){=0A=
    var me =3D $(this),=0A=
  	    text =3D parseInt(me.text() =3D=3D '' ? 0 : me.text()),=0A=
  			par =3D me.parent(),=0A=
  			type =3D me.attr('type'),=0A=
  			blog_id =3D me.attr('blog_id');=0A=
  			userid =3D me.attr('userid');=0A=
    if(par.hasClass('on'))return false;=0A=
    if(isLogin =3D=3D 1){//=E7=99=BB=E5=BD=95=0A=
      $.post(praise_url,{id:blog_id,type:type,userid:userid},function(e){=0A=
        if(e.status =3D=3D 1){=0A=
          me.text(text+1)=0A=
          par.addClass('on')=0A=
          var x =3D $('<div class=3D"jia1">+1</div>')=0A=
          .css({'top':ev.pageY-15,'left':ev.pageX+6,'z-index':10})=0A=
          $("body").append(x)=0A=
          =
x.animate({top:ev.pageY-20,left:ev.pageX+10,'font-size':'16px',opacity:'s=
how'},300,'swing',function(){=0A=
            x.fadeOut(500)=0A=
          })=0A=
        }else{=0A=
          new =
AutoBox({content:e.msg,img:'remind',mask:"#000",autoClose:3})=0A=
        }=0A=
      },'JSON')=0A=
    }else{//=E6=B2=A1=E7=99=BB=E5=BD=95=0A=
      Login()=0A=
    }=0A=
  })=0A=
};=0A=
$(function(){=0A=
  if(!getCookie('showMsgOver')){=0A=
    var mask =3D $('<div =
style=3D"position:fixed;left:0;right:0;top:0;bottom:0;background:#000;dis=
play:none;z-index:100;"></div>').css('opacity','0.3'),=0A=
    close =3D $('<button =
style=3D"width:24px;height:24px;background:url(https://s1.51cto.com/image=
s/201711/16/08ef236877f1bc9b4718ecc20477d3dd.png) =
no-repeat;padding:0;margin:0;position:absolute;right:10px;top:10px;z-inde=
x:102;">&nbsp;</button>').click(function(){mask.remove();fadm.remove()}),=0A=
    fadm =3D $('<div =
style=3D"position:fixed;left:50%;top:50%;margin-left:-300px;margin-top:-2=
05px;z-index:101;display:none;"></div>')=0A=
    .append('<img style=3D"display:block;" =
src=3D"https://s1.51cto.com/images/201711/21/dc0850ffaacc7e371b8996d6f163=
c58f.png">')=0A=
    .append(close)=0A=
    //$('body').append(mask).append(fadm)=0A=
    mask.fadeIn(500)=0A=
    fadm.fadeIn(1000)=0A=
    setCookie('showMsgOver',1,86400*30)=0A=
  }=0A=
})=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/mbox.js

/* =0A=
 * AutoBox=0A=
 * @requires jQuery v1.7 or later=0A=
 * @create By 2014-11-12=0A=
 * @author Ravens<34263626@qq.com>=0A=
 */=0A=
// =E8=87=AA=E5=AE=9A=E4=B9=89AutoMessageBox=0A=
// parms =3D{}=0A=
// parms.img =3D {ok|remind|quest}=0A=
var AutoBox =3D function(p){=0A=
	this.init(p);=0A=
}=0A=
AutoBox.prototype =3D {=0A=
	init:function(parms){//=E5=AE=9A=E4=B9=89=E9=BB=98=E8=AE=A4=E5=80=BC=0A=
		this.ip =3D imgpath?imgpath:'./images/';=0A=
		this.id =3D (parms.id?'Msg_'+parms.id:'Msg_'+Math.random()*10000);=0A=
		this.W =3D parms.W?parms.W:260;=0A=
		this.img =3D parms.img?parms.img:'ok';=0A=
		this.title =3D parms.title?parms.title:'';=0A=
		this.content =3D parms.content?parms.content:'=E6=88=90=E5=8A=9F';=0A=
		this.Yes =3D parms.Yes?parms.Yes:false;=0A=
		this.No =3D parms.No?parms.No:false;=0A=
		this.t =3D parms.st?parms.st:1;=0A=
		this.noCon =3D parms.noCon?parms.noCon:false;=0A=
		this.noCBtn =3D parms.noCBtn?parms.noCBtn:false;=0A=
		this.ADD =3D parms.ADD?parms.ADD:false;=0A=
		this.src =3D parms.src?parms.src:false;=0A=
		this.cb =3D parms.cb?parms.cb:function(){};=0A=
		this.ok =3D parms.ok?parms.ok:function(){};=0A=
		this.yc =3D parms.yc?parms.yc:function(){};=0A=
		this.nc =3D parms.nc?parms.nc:function(){};=0A=
		this.autoClose =3D parms.autoClose?parms.autoClose:false;=0A=
		this.mask =3D parms.mask?parms.mask:false;=0A=
		this.parent =3D parms.parent?parms.parent:false;=0A=
		this.fixed =3D parms.fixed?parms.fixed:true;=0A=
=0A=
		this.build();=0A=
	},=0A=
	build:function(){=0A=
		//=E5=8D=8A=E9=80=8F=E6=98=8E=E7=9A=84=E8=BE=B9=E6=A1=86=0A=
		this.mb =3D $('<div id=3D"'+this.id+'"></div>');=0A=
		this.mb.css({=0A=
			'position':'fixed',=0A=
			'display':'none',=0A=
			'left':($(window).width()-this.W)/2+3+'px',=0A=
			'z-index':'9999999',=0A=
			'overflow':'hidden',=0A=
			'width':this.W+'px'=0A=
		});=0A=
		//=E5=AE=B9=E5=99=A8=0A=
		this.m =3D $('<div></div>');=0A=
		this.m.css({=0A=
			'overflow':'hidden',=0A=
			'width':this.W+'px',=0A=
			'font-size':'14px',=0A=
			'background':'#FFF',=0A=
			'padding-bottom':'30px'=0A=
		});=0A=
		if((this.noCBtn =3D=3D true)&&(this.title =3D=3D '')){=0A=
			this.m.css('padding-bottom','10px');=0A=
		}=0A=
		//close=0A=
		this.cBtn =3D $('<img =
src=3D"https://s1.51cto.com/images/201709/29/4a3cd3be93453ed191b73328f862=
c5be.png" />');=0A=
		this.cBtn.css({=0A=
			'overflow':'hidden',=0A=
			'width':'12px',=0A=
			'height':'12px',=0A=
			'margin':'20px 30px 0 0',=0A=
			'cursor':'pointer',=0A=
			'float':'right'=0A=
		});=0A=
		//title=0A=
		this.Title =3D $('<h6>'+this.title+'</h6>');=0A=
		this.Title.css({=0A=
			'overflow':'hidden',=0A=
			'max-width':this.W-32+'px',=0A=
			'height':'18px',=0A=
			'line-height':'1',=0A=
			'padding':'20px 0 14px 30px',=0A=
			'font-size':'18px',=0A=
			'font-weight':'normal',=0A=
			'color':'#666',=0A=
			'float':'left'=0A=
		});=0A=
		//Con=0A=
		this.Con =3D $('<div></div>');=0A=
		this.Con.css({=0A=
			'overflow':'hidden',=0A=
			'width':'100%',=0A=
			'display':'block;',=0A=
			'text-align':'center',=0A=
			'margin':'0px auto'=0A=
		});=0A=
		//Con=0A=
		this.ConFont =3D $('<p style=3D"display:inline-block;padding:10px =
0;line-height:25px;">'+this.content+'</p>');=0A=
		if((this.noCBtn =3D=3D true)&&(this.title =3D=3D '')){=0A=
			this.ConFont.css({'margin-top':'10px','line-height':'20px'});=0A=
		}=0A=
=0A=
		//bottons=0A=
		this.Btns =3D $('<div style=3D"text-align:right;"></div>');=0A=
		this.BtnYes =3D $('<button>'+this.Yes+'</botton>');=0A=
		this.BtnYes.css({=0A=
			'margin-right':'30px',=0A=
			'padding':'0 26px',=0A=
			'background': '#4285f4',=0A=
			'color': '#fff'=0A=
		})=0A=
		this.BtnNo =3D $('<button>'+this.No+'</botton>');=0A=
		this.BtnNo.css({=0A=
			'margin-right':'30px',=0A=
			'padding':'0 26px',=0A=
			'background':'#fff',=0A=
			'color':'#333',=0A=
			'border':'1px solid #9A9A9A',=0A=
			'border-radius':'4px'=0A=
		});=0A=
=0A=
		//Mask=0A=
		this.Mask =3D $('<div id=3D"Mask"></div>');=0A=
		this.Mask.css({=0A=
			'overflow':'hidden',=0A=
			'z-index':'9999998',=0A=
			'width':'100%',=0A=
			'height':$(window).height(),=0A=
			'position':'fixed',=0A=
			'top':'0px',=0A=
			'left':'0px',=0A=
			'background':'#FFF',=0A=
			'opacity':0.2=0A=
		});=0A=
=0A=
		this.builder();=0A=
	},=0A=
	builder:function(){=0A=
		//=0A=
		var me =3D this;=0A=
		this.mb.append(this.m);=0A=
		if(this.noCBtn =3D=3D false){=0A=
			this.m.append(this.cBtn);=0A=
		}=0A=
		if(this.title !=3D ''){=0A=
			this.m.append(this.Title);=0A=
		}=0A=
		this.m.append(this.Con);=0A=
=0A=
		if(this.noCon =3D=3D false){=0A=
			this.Con.append(this.ConFont);=0A=
		}=0A=
		this.Con.append(this.ADD);=0A=
=0A=
		this.Con.append(this.Btns);=0A=
		if(me.Yes || me.No){=0A=
			if(me.Yes){=0A=
				this.Btns.append(this.BtnYes)=0A=
			};=0A=
			if(me.No){=0A=
				this.Btns.append(this.BtnNo)=0A=
			}=0A=
		}=0A=
=0A=
		this.show();=0A=
	},=0A=
	show:function(){=0A=
		var me =3D this;=0A=
		if(this.mask) $('body').append(this.Mask);=0A=
		if(typeof(this.mask)=3D=3D'string') =
this.Mask.css('background',this.mask)=0A=
		if($("#"+this.id).length>0) $("#"+this.id).remove();=0A=
		$('body').append(this.mb);=0A=
		this.mb.css('top',($(window).height()-this.mb.height())/2);=0A=
		if(this.mb.height()>$(window).height()){=0A=
			$(window).css('overflow','hidden');=0A=
			$(this.mb).css({=0A=
				'position':'absolute',=0A=
				'top':30+$(window).scrollTop()=0A=
			})=0A=
		}=0A=
		$(this.mb).fadeIn(this.t*1000);=0A=
		$(this.mb).find('a.closeMB').click(function(){//=0A=
			me.close();=0A=
			me.complete();=0A=
		});=0A=
		//=0A=
		$(this.cBtn).click(function(){//=0A=
			me.close();=0A=
			me.closed();=0A=
		}).bind('mouseover',function(){//=0A=
			$(this).css('transform','rotate(30deg)');=0A=
		}).bind('mouseout',function(){//=0A=
			$(this).css('transform','rotate(0deg)');=0A=
		});=0A=
=0A=
		if(this.Yes || this.No){=0A=
			$(this.BtnYes).click(function(){//=0A=
				me.close();=0A=
				me.YesClick();=0A=
			});=0A=
			$(this.BtnNo).click(function(){//=0A=
				me.close();=0A=
				me.NoClick();=0A=
			});=0A=
		}else{=0A=
			$(this.mb).find('button.closeMB').click(function(){//=0A=
				me.close();=0A=
				me.complete();=0A=
			});=0A=
		}=0A=
		if (this.autoClose) {//=0A=
			setTimeout(function(){//=0A=
				me.close();=0A=
				me.complete();=0A=
			},this.autoClose*1000);=0A=
		};=0A=
=0A=
		if(this.fixed!=3D=3Dtrue){=0A=
			this.mb.css({=0A=
				'position':'absolute',=0A=
				'top':$(window).scrollTop()+100=0A=
			})=0A=
		}=0A=
		if(this.parent){=0A=
			var p =3D =
typeof(this.parent)=3D=3D'string'?$("#"+this.parent):this.parent=0A=
			this.mb.css({=0A=
				'position':'absolute',=0A=
				'left':(p.width()-this.W)/2+3+'px'=0A=
			})=0A=
			p.append(this.mb)=0A=
		}=0A=
	},=0A=
	close:function(){=0A=
		var me =3D this;=0A=
		$(this.Mask).remove();=0A=
		$(this.mb).fadeOut(500,function(){//=0A=
			$(this).remove();=0A=
		});=0A=
		=0A=
	},=0A=
	closed:function(){=0A=
		this.cb();=0A=
	},=0A=
	complete:function(){=0A=
		this.ok();=0A=
	},=0A=
	YesClick:function(){=0A=
		this.yc();=0A=
	},=0A=
	NoClick:function(){=0A=
		this.nc();=0A=
	}=0A=
}
------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/follow.js?v=1.0.0.8

// =E4=BD=BF=E7=94=A8=E6=96=B9=E6=B3=95=EF=BC=9A=0A=
// new Follow(Dom(id|obj),uid,status,['on','in','mutual','off'])=0A=
var Follow =3D function(){=0A=
  this.init(arguments)=0A=
}=0A=
Follow.prototype.init =3D function(e){=0A=
  var me=3Dthis=0A=
  this.btn =3D typeof e[0]=3D=3D'string'?$("#"+e[0]):e[0] =
//=E6=8C=89=E9=92=AE=0A=
  this.uid =3D e[1] //=E7=9B=AE=E6=A0=87=E7=94=A8=E6=88=B7id=0A=
  this.s   =3D e[2] =
//=E5=85=B3=E6=B3=A8=E7=8A=B6=E6=80=81[1|2|3]=E3=80=90=E6=9C=AA=E5=85=B3=E6=
=B3=A8|=E5=B7=B2=E5=85=B3=E6=B3=A8|=E4=BA=92=E7=9B=B8=E5=85=B3=E6=B3=A8=E3=
=80=91=0A=
  this.css =3D e[3] //=E7=8A=B6=E6=80=81=E5=85=B3=E8=81=94css[a,b,c,d] =
=E9=A1=BA=E5=BA=8F=EF=BC=9A=E3=80=90=E6=9C=AA=E5=85=B3=E6=B3=A8=EF=BC=8C=E5=
=B7=B2=E5=85=B3=E6=B3=A8=EF=BC=8C=E4=BA=92=E7=9B=B8=E5=85=B3=E6=B3=A8=EF=BC=
=8C=E5=8F=96=E6=B6=88=E5=85=B3=E6=B3=A8=E3=80=91=0A=
  this.text =3D =
e[4]?e[4]:['=E5=85=B3=E6=B3=A8','=E5=B7=B2=E5=85=B3=E6=B3=A8','=E4=BA=92=E7=
=9B=B8=E5=85=B3=E6=B3=A8','=E5=8F=96=E6=B6=88=E5=85=B3=E6=B3=A8'] =
//=E3=80=90=E5=85=B3=E6=B3=A8=EF=BC=8C=E5=B7=B2=E5=85=B3=E6=B3=A8=EF=BC=8C=
=E4=BA=92=E7=9B=B8=E5=85=B3=E6=B3=A8=EF=BC=8C=E5=8F=96=E6=B6=88=E5=85=B3=E6=
=B3=A8=E3=80=91=0A=
  this.lock=3D false=0A=
  this.btn.click(function(){=0A=
    if(isLogin !=3D 1){Login()}=0A=
    if(me.lock) return false;=0A=
    if(me.s>1){//=E6=9C=AA=E5=85=B3=E6=B3=A8=0A=
      me.start()  =0A=
    }else{=0A=
      if(me.msg){=0A=
        me.msg(me.start())=0A=
      }else{=0A=
        me.start()=0A=
      }=0A=
    }=0A=
    =0A=
  })=0A=
  .mouseenter(function(){=0A=
    if(me.s>1) =0A=
      me.set(3);=0A=
  })=0A=
  .mouseleave(function(){=0A=
    me.set(me.s,true)=0A=
  })=0A=
}=0A=
Follow.prototype.start =3D function(e){=0A=
  var me =3D this;=0A=
  this.lock=3Dfalse=0A=
  =
$.post('/index/follow',{fid:this.uid,type:(this.s=3D=3D1?1:2)},function(r=
es){=0A=
    me.lock=3Dfalse;=0A=
    if(res.status=3D=3D1){=0A=
      me.s=3Dres.data.status=0A=
      me.set(me.s, true) =
//=E8=A6=81=E6=B1=82=E8=BF=94=E5=9B=9E=E5=80=BC=E4=B8=AD data =
=E5=80=BC=E5=BF=85=E9=A1=BB=E4=B8=BA=E5=BD=93=E5=89=8D=E5=85=B3=E6=B3=A8=E7=
=8A=B6=E6=80=81 =E3=80=901|2|3=E3=80=91=0A=
      me.success(me.s)=0A=
    }=0A=
  },'json')=0A=
}=0A=
Follow.prototype.set =3D function(e,s){=0A=
  /*e:=E7=9B=AE=E6=A0=87=E7=8A=B6=E6=80=81=E5=BA=8F=E5=8F=B7=0A=
    0:=E6=9C=AA=E5=85=B3=E6=B3=A8=0A=
    1:=E5=B7=B2=E5=85=B3=E6=B3=A8=0A=
    2:=E4=BA=92=E7=9B=B8=E5=85=B3=E6=B3=A8=0A=
    3:=E5=8F=96=E6=B6=88=E5=85=B3=E6=B3=A8=0A=
  */=0A=
  if(s) e=3De-1=0A=
  this.reset()=0A=
  this.btn.addClass(this.css[e]).text(this.text[e])=0A=
}=0A=
Follow.prototype.reset =3D =
function(){//=E9=87=8D=E7=BD=AE=E7=8A=B6=E6=80=81=0A=
  var me=3Dthis=0A=
  $.each(this.css,function(i,e){=0A=
    me.btn.removeClass(e)=0A=
  })=0A=
}=0A=
Follow.prototype.success =3D =
function(e){//=E5=85=B3=E6=B3=A8=E6=88=90=E5=8A=9F=0A=
}=0A=
var mask =3D $('<div class=3D"mask"></div>')=0A=
    msg_index_box =3D $('<div class=3D"msg-index-box"></div>'),=0A=
    cls =3D $('<p class=3D"follow-close"></p>'),=0A=
    top_bg =3D $('<p class=3D"top-bg"></p>'),=0A=
    con_box =3D $('<div class=3D"con-box"></div>'),=0A=
    icon_1 =3D $('<p class=3D"icon-bg icon-1"></p>')=0A=
    icon_2 =3D $('<p class=3D"icon-bg icon-2"></p>')=0A=
    h21 =3D $('<h2>=E5=8F=91=E5=B8=83=E6=88=90=E5=8A=9F</h2>')=0A=
    h22 =3D $('<h2>=E5=85=B3=E6=B3=A8=E6=88=90=E5=8A=9F</h2>')=0A=
    con1 =3D $('<div =
class=3D"con">=E8=AF=A5=E4=BD=9C=E8=80=85=E6=89=80=E6=9C=89=E7=9A=84=E6=96=
=B0=E6=96=87=E7=AB=A0=E9=83=BD=E5=8F=AF=E5=9C=A8<a =
href=3D"http://blog.51cto.com/blog/follow" =
target=3D"_blank">=E6=96=87=E7=AB=A0&gt;=E5=85=B3=E6=B3=A8</a>=E4=B8=AD=E6=
=9F=A5=E7=9C=8B=E5=88=B0</div><div =
class=3D"con">=E5=85=B3=E6=B3=A8=E5=B9=B6=E7=BB=91=E5=AE=9A=E5=AE=98=E6=96=
=B9=E5=BE=AE=E4=BF=A1=E6=9C=8D=E5=8A=A1=E5=8F=B7=E8=BF=98=E5=8F=AF=E7=AC=AC=
=E4=B8=80=E6=97=B6=E9=97=B4=E6=94=B6=E5=88=B0=E6=9B=B4=E6=96=B0=E6=8F=90=E9=
=86=92</div>'),=0A=
    con2 =3D $('<div =
class=3D"con">=E5=85=B3=E6=B3=A8=E5=B9=B6=E7=BB=91=E5=AE=9A=E5=AE=98=E6=96=
=B9=E5=BE=AE=E4=BF=A1=E6=9C=8D=E5=8A=A1=E5=8F=B7=E5=8F=AF=E9=9A=8F=E6=97=B6=
=E9=9A=8F=E5=9C=B0</div><div =
class=3D"con">=E6=94=B6=E5=88=B0=E5=9B=9E=E5=A4=8D=E6=8F=90=E9=86=92</div=
>'),=0A=
    code_bg =3D $('<div class=3D"code-bg"><iframe id=3D"childframe" =
src=3D"http://home.51cto.com/wechat/get-iframe-qr-code?reback=3D'+locatio=
n.href+'" iframeboder=3D"0" scrolling=3D"no" allowtransparency=3D"true" =
style=3D"border: 0 none;margin: 8px 14px;" width=3D"120" height=3D"120" =
name=3D""></iframe></div>')=0A=
    btn_box =3D $('<div class=3D"btn-box"><p =
class=3D"btn-1">=E4=B8=8D=E5=86=8D=E6=8F=90=E9=86=92</p><p =
class=3D"btn-2">=E7=9F=A5=E9=81=93=E4=BA=86</p></div>')=0A=
function box1(){//=E5=85=B3=E6=B3=A8=E6=88=90=E5=8A=9Fcode=0A=
    $('body').append(mask).append(msg_index_box)=0A=
    msg_index_box.append(cls).append(top_bg).append(con_box)=0A=
    =
con_box.html('').append(icon_2).append(h22).append(con1).append(code_bg).=
append(btn_box)=0A=
    msg_index_box.css('height','330px')=0A=
    boxCls1()=0A=
}=0A=
function box2(){//=E5=85=B3=E6=B3=A8=E6=88=90=E5=8A=9F=0A=
    $('body').append(mask).append(msg_index_box)=0A=
    msg_index_box.append(cls).append(top_bg).append(con_box)=0A=
    =
con_box.html('').append(icon_2).append(h22).append(con1).append(btn_box)=0A=
    msg_index_box.css('height','150px')=0A=
    boxCls2()=0A=
}=0A=
function boxCls1(){=0A=
    $('.mask').show()=0A=
    $('.btn-box .btn-2, .msg-index-box =
.follow-close').bind('click',function(){=0A=
      $('.msg-index-box').remove()=0A=
      $('.mask').remove()=0A=
    })=0A=
    $('.btn-box .btn-1').bind('click',function(){=0A=
      setCookie('follow1','follow1',3650)=0A=
      $('.msg-index-box').remove()=0A=
      $('.mask').remove()=0A=
    })=0A=
}=0A=
function boxCls2(){=0A=
    $('.mask').show()=0A=
    $('.btn-box .btn-2, .msg-index-box .follow-close, .btn-box =
.btn-1').bind('click',function(){=0A=
      setCookie('follow2','follow2',3650)=0A=
      $('.msg-index-box').remove()=0A=
      $('.mask').remove()=0A=
    })=0A=
}=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/vip.js?v=1.0.0.1

// zjf20180104=0A=
$(function(){=0A=
	var uids =3D '';=0A=
    var uidsArr =3D new Array();=0A=
    $('.is-vip-img').each(function(){=0A=
        if($(this).attr('data-uid')){=0A=
            uidsArr.push($(this).attr('data-uid'));=0A=
        }=0A=
        =0A=
    });=0A=
    uids =3D $.unique(uidsArr).join(',');=0A=
    if(uids){=0A=
        $.ajax({=0A=
            url: BLOG_URL +"user/get-avatar",=0A=
            data: {uids: uids},=0A=
            type: 'GET',=0A=
            dataType: 'JSON',=0A=
            success: function(e){=0A=
                if(e.status=3D=3D1){=0A=
                    $('.is-vip-img').each(function(){=0A=
                        var imgobj =3D $(this);=0A=
                        var avataruid =3D $(this).attr('data-uid');=0A=
                        var a_uid_name =3D 'u'+avataruid;=0A=
                        var b =3D e.data[a_uid_name];=0A=
                        if(!b){=0A=
                          return=0A=
                        }else if(b.isvip =3D=3D '0'){=0A=
                            if(! imgobj.hasClass('is-vip-img-0')) =
imgobj.attr('src',b.img);=0A=
                        }else if(b.isvip =3D=3D '2'){=0A=
                            if(imgobj.hasClass('is-vip-img-1')){=0A=
                                =
imgobj.attr('src',b.img).parent().after('<i class=3D"vip-icon vip-icon-1 =
on"></i>')=0A=
                            }else if(imgobj.hasClass('is-vip-img-2')){=0A=
                                =
imgobj.attr('src',b.img).parent().after('<i class=3D"vip-icon vip-icon-2 =
on"></i>')=0A=
                            }else if(imgobj.hasClass('is-vip-img-3')){=0A=
                                =
imgobj.attr('src',b.img).parent().after('<i class=3D"vip-icon vip-icon-3 =
on"></i>')=0A=
                            }else if(imgobj.hasClass('is-vip-img-4')){=0A=
                                =
imgobj.attr('src',b.img).parent().after('<i class=3D"vip-icon vip-icon-4 =
on"></i>')=0A=
                            }else if(imgobj.hasClass('is-vip-img-5')){=0A=
                               =
imgobj.attr('src',b.img).parent().after('<i class=3D"vip-icon vip-icon-5 =
on"></i>')=0A=
                            }else if(imgobj.hasClass('is-vip-img-0')){=0A=
                                imgobj.after('<i class=3D"vip-icon =
vip-icon-4 on"></i>')=0A=
                            }=0A=
                        }else{=0A=
                            if(imgobj.hasClass('is-vip-img-1')){=0A=
                                =
imgobj.attr('src',b.img).parent().after('<i class=3D"vip-icon =
vip-icon-1"></i>')=0A=
                            }else if(imgobj.hasClass('is-vip-img-2')){=0A=
                                =
imgobj.attr('src',b.img).parent().after('<i class=3D"vip-icon =
vip-icon-2"></i>')=0A=
                            }else if(imgobj.hasClass('is-vip-img-3')){=0A=
                                =
imgobj.attr('src',b.img).parent().after('<i class=3D"vip-icon =
vip-icon-3"></i>')=0A=
                            }else if(imgobj.hasClass('is-vip-img-4')){=0A=
                                =
imgobj.attr('src',b.img).parent().after('<i class=3D"vip-icon =
vip-icon-4"></i>')=0A=
                            }else if(imgobj.hasClass('is-vip-img-5')){=0A=
                               =
imgobj.attr('src',b.img).parent().after('<i class=3D"vip-icon =
vip-icon-5"></i>')=0A=
                            }else if(imgobj.hasClass('is-vip-img-0')){=0A=
                                imgobj.after('<i class=3D"vip-icon =
vip-icon-4"></i>')=0A=
                            }=0A=
                        }=0A=
                        //isClick($('.vip-icon'))=0A=
                    });=0A=
                }else{=0A=
                    new AutoBox({content:e.msg,mask:"#000",autoClose:3})=0A=
                }=0A=
            }=0A=
        })=0A=
    }=0A=
    $('.vip-icon').live('click',function(){=0A=
        window.open("http://home.51cto.com/members/in-fo")=0A=
        return false;=0A=
    })=0A=
})=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/window.js?v=1.0.0.1

(function(){=0A=
	if(typeof isLogin !=3D'undefined' && isLogin=3D=3D'0'){=0A=
        return true;=0A=
    }=0A=
	var couponDiv =3D $('<div class=3D"mask3"></div><div =
class=3D"newcoupon-div"><span class=3D"close"></span></div>');=0A=
=0A=
	getCouponPop();=0A=
	function getCouponPop() {=0A=
		$.ajax({=0A=
			url: '/site/get-pop',=0A=
			data: {},=0A=
			type: 'POST',=0A=
			dataType: 'json',=0A=
			success: function (e) {=0A=
				if(e.status =3D=3D 0 && typeof e.data.newcoupon !=3D'undefined'){=0A=
					createCouponDiv(e);=0A=
				}=0A=
			}=0A=
		});=0A=
=0A=
	}=0A=
	function createCouponDiv(e) {=0A=
		if(e.data =3D=3D '') {return;}=0A=
		var newcoupon =3D e.data.newcoupon.list;=0A=
		var couponLength =3D e.data.newcoupon.count;=0A=
		var couponUlClass =3D couponLength =3D=3D 1 ?  'newcoupon-div1' : =
'newcoupon-div2';=0A=
		var couponLeftBtn =3D couponLength <=3D 2 ? =
'=E6=9F=A5=E7=9C=8B=E4=BC=98=E6=83=A0=E5=88=B8' : =
'=E6=9F=A5=E7=9C=8B=E5=85=A8=E9=83=A8=E4=BC=98=E6=83=A0=E5=88=B8';=0A=
		var couponUl =3D '<ul class=3D"coupon-list">';=0A=
		$.each(newcoupon.slice(0,2), function(index, item) {=0A=
			couponUl +=3D '<li class=3D"clearfix">' +=0A=
				'<div class=3D"left fl">' +=0A=
					'=EF=BF=A5<span class=3D"price">'+item.coupon_price+'</span>' +=0A=
				'</div>' +=0A=
				'<div class=3D"right fl">' +=0A=
					'<p class=3D"type">'+item.name+'</p>' +=0A=
					'<p =
class=3D"time">=E5=88=B0=E6=9C=9F=E6=97=B6=E9=97=B4=EF=BC=9A'+item.expire=
+'</p>' +=0A=
					'<p class=3D"name">'+item.scope_desc+'</p>' +=0A=
				'</div>' +=0A=
			'</li>';=0A=
		});=0A=
		couponUl +=3D '</ul>';=0A=
		var bottomBtn =3D '<div class=3D"btn-wrap1 clearfix">' +=0A=
											'<a class=3D"left close" href=3D"javascript:;" =
data-action=3D"'+BLOG_URL+'coupon/list">'+couponLeftBtn+'</a>' +=0A=
											'<a class=3D"right close" href=3D"javascript:;" =
data-action=3D"'+BLOG_URL+'cloumn/index">=E5=8E=BB=E9=80=89=E4=B8=93=E6=A0=
=8F</a>' +=0A=
										'</div>';=0A=
=0A=
		couponDiv.remove();=0A=
		$('body').append(couponDiv);=0A=
		$('.mask3').show();=0A=
		$('.newcoupon-div').addClass(couponUlClass)=0A=
											 .append('<p =
class=3D"tip">=E6=8C=81=E7=BB=AD=E5=AD=A6=E4=B9=A0=E6=98=AF=E4=B8=80=E7=A7=
=8D=E7=AB=9E=E4=BA=89=E5=8A=9B</p>' +=0A=
															 '<p =
class=3D"number">=E6=81=AD=E5=96=9C=E4=BD=A0=E8=8E=B7=E5=BE=97'+couponLen=
gth+'=E5=BC=A0=E4=BC=98=E6=83=A0=E5=88=B8</p>' +=0A=
															 couponUl + bottomBtn=0A=
															);=0A=
		$('.newcoupon-div .close').click(function() {=0A=
		  couponDiv.remove();=0A=
		  var actionHref =3D $(this).data('action');=0A=
=0A=
			 $.ajax({=0A=
	        url: '/site/close-pop',=0A=
	        data: {type: 'newcoupon'},=0A=
	        type: 'GET',=0A=
	        dataType: 'json',=0A=
	        success: function(e){=0A=
						if (e.status =3D=3D 0) {=0A=
							if (actionHref) {=0A=
								window.location.href =3D actionHref;=0A=
							}=0A=
						}=0A=
	        }=0A=
	    },'json');=0A=
		});=0A=
	}=0A=
})();=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/mobile/js/lib/box.js

var Class =3D {=0A=
 create: function() {   =0A=
    return function() {=0A=
      this.initialize.apply(this, arguments);=0A=
    }=0A=
 }=0A=
}=0A=
var AutoAD =3D Class.create()=0A=
AutoAD.prototype =3D {=0A=
  initialize:function(parms){=0A=
    this.ip     =3D =
imgpath?imgpath:'https://static1.51cto.com/edu/images/whitestyle/';=0A=
    this.cookie =3D parms.cookie?parms.cookie:'AutoAD';=0A=
    this.ts     =3D parms.ts?parms.ts:86400;=0A=
    this.W      =3D parms.W?parms.W:500;=0A=
    this.H      =3D parms.H?parms.H+'px':'auto';=0A=
    this.ADD    =3D parms.ADD?parms.ADD:'';=0A=
    this.cb     =3D parms.cb?parms.cb:function(){}; =0A=
    this.ok     =3D parms.ok?parms.ok:function(){};=0A=
    this.autoClose =3D parms.autoClose?parms.autoClose:false;=0A=
    this.noCBtn =3D parms.noCBtn?parms.noCBtn:false;=0A=
    this.mask   =3D parms.mask?parms.mask:false;=0A=
    this.fixed  =3D parms.fixed?parms.fixed:true;=0A=
    this.last   =3D parms.last?parms.last:false;=0A=
    if(this.last && new Date().getTime()>new Date(this.last).getTime()) =
return false;=0A=
    if(!getCookie(this.cookie)){=0A=
      this.build();=0A=
      setCookie(this.cookie,1,this.ts)=0A=
    }=0A=
  =0A=
  },=0A=
  build:function(){=0A=
    this.mb =3D $('<div></div>');=0A=
    this.mb.css({=0A=
      'position':'fixed',=0A=
      'display':'none',=0A=
      'left':($(window).width()-this.W)/2+3+'px',=0A=
      'z-index':'9999999',=0A=
      'overflow':'hidden',=0A=
      'width':this.W+'px',=0A=
      'height':this.H,=0A=
      'padding':'3px'=0A=
    });=0A=
    this.cBtn =3D $('<img />');=0A=
    this.cBtn.css({=0A=
      'overflow':'hidden',=0A=
      'cursor':'pointer',=0A=
      'position':'absolute',=0A=
      'right':10,=0A=
      'top':0,=0A=
      'z-index':10=0A=
    });=0A=
    this.Mask =3D $('<div id=3D"Mask"></div>');=0A=
    this.Mask.css({=0A=
      'overflow':'hidden',=0A=
      'z-index':'9999998',=0A=
      'width':'100%',=0A=
      'height':$(window).height(),=0A=
      'position':'fixed',=0A=
      'top':'0px',=0A=
      'left':'0px',=0A=
      'background':'#FFF',=0A=
      'opacity':0.6=0A=
    });=0A=
    this.builder();=0A=
  },=0A=
  builder:function(){=0A=
    var me =3D this;=0A=
    this.mb.append(this.ADD);=0A=
    if(this.noCBtn =3D=3D false){=0A=
      this.mb.append(this.cBtn);=0A=
    }=0A=
    this.show();=0A=
  },=0A=
  show:function(){=0A=
    var me =3D this;=0A=
    if(this.mask) $('body').append(this.Mask);=0A=
    if(typeof(this.mask)=3D=3D'string') =
this.Mask.css('background',this.mask)=0A=
    if($("#"+this.id).length>0) $("#"+this.id).remove();=0A=
    $('body').append(this.mb);=0A=
    this.mb.css('top',($(window).height()-this.mb.height())/2);=0A=
    if(this.mb.height()>$(window).height()){=0A=
      $(window).css('overflow','hidden');=0A=
      $(this.mb).css({=0A=
        'position':'absolute',=0A=
        'top':30+$(window).scrollTop()=0A=
      })=0A=
    }=0A=
    $(this.mb).fadeIn(this.t*1000);=0A=
    $(this.mb).find('a.closeMB').click(function(){=0A=
      me.close();=0A=
      me.complete();=0A=
    });=0A=
    $(this.cBtn).click(function(){=0A=
      me.close();=0A=
      me.closed();=0A=
    }).bind('mouseover',function(){=0A=
      $(this).css('transform','rotate(30deg)');=0A=
    }).bind('mouseout',function(){=0A=
      $(this).css('transform','rotate(0deg)');=0A=
    });=0A=
    $(this.mb).find('button.closeMB').click(function(){=0A=
      me.close();=0A=
      me.complete();=0A=
    });=0A=
    if (this.autoClose) {=0A=
      setTimeout(function(){=0A=
        me.close();=0A=
        me.complete();=0A=
      },this.autoClose*1000);=0A=
    };=0A=
    if(this.fixed!=3D=3Dtrue){=0A=
      this.mb.css({=0A=
        'position':'absolute',=0A=
        'top':$(window).scrollTop()+100=0A=
      })=0A=
    }=0A=
  },=0A=
  close:function(){=0A=
    var me =3D this;=0A=
    $(this.Mask).remove();=0A=
    $(this.mb).remove();=0A=
  },=0A=
  closed:function(){=0A=
    this.cb();=0A=
  },=0A=
  complete:function(){=0A=
    this.ok();=0A=
  }=0A=
}=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://blog.51cto.com/static/js/ueditor1.4.3/prism.js?v=1.0.1

/* PrismJS 1.15.0=0A=
https://prismjs.com/download.html#themes=3Dprism&languages=3Dmarkup+css+c=
like+javascript+c+csharp+bash+basic+cpp+ruby+diff+markup-templating+erlan=
g+groovy+java+json+perl+php+sql+python+scala+vbnet&plugins=3Dtoolbar */=0A=
var _self=3D"undefined"!=3Dtypeof window?window:"undefined"!=3Dtypeof =
WorkerGlobalScope&&self instanceof =
WorkerGlobalScope?self:{},Prism=3Dfunction(){var =
e=3D/\blang(?:uage)?-([\w-]+)\b/i,t=3D0,n=3D_self.Prism=3D{manual:_self.P=
rism&&_self.Prism.manual,disableWorkerMessageHandler:_self.Prism&&_self.P=
rism.disableWorkerMessageHandler,util:{encode:function(e){return e =
instanceof r?new =
r(e.type,n.util.encode(e.content),e.alias):"Array"=3D=3D=3Dn.util.type(e)=
?e.map(n.util.encode):e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replac=
e(/\u00a0/g," ")},type:function(e){return =
Object.prototype.toString.call(e).match(/\[object =
(\w+)\]/)[1]},objId:function(e){return =
e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:functio=
n(e,t){var =
r=3Dn.util.type(e);switch(t=3Dt||{},r){case"Object":if(t[n.util.objId(e)]=
)return t[n.util.objId(e)];var a=3D{};t[n.util.objId(e)]=3Da;for(var l =
in e)e.hasOwnProperty(l)&&(a[l]=3Dn.util.clone(e[l],t));return =
a;case"Array":if(t[n.util.objId(e)])return t[n.util.objId(e)];var =
a=3D[];return =
t[n.util.objId(e)]=3Da,e.forEach(function(e,r){a[r]=3Dn.util.clone(e,t)})=
,a}return e}},languages:{extend:function(e,t){var =
r=3Dn.util.clone(n.languages[e]);for(var a in t)r[a]=3Dt[a];return =
r},insertBefore:function(e,t,r,a){a=3Da||n.languages;var =
l=3Da[e];if(2=3D=3Darguments.length){r=3Darguments[1];for(var i in =
r)r.hasOwnProperty(i)&&(l[i]=3Dr[i]);return l}var o=3D{};for(var s in =
l)if(l.hasOwnProperty(s)){if(s=3D=3Dt)for(var i in =
r)r.hasOwnProperty(i)&&(o[i]=3Dr[i]);o[s]=3Dl[s]}return =
n.languages.DFS(n.languages,function(t,n){n=3D=3D=3Da[e]&&t!=3De&&(this[t=
]=3Do)}),a[e]=3Do},DFS:function(e,t,r,a){a=3Da||{};for(var l in =
e)e.hasOwnProperty(l)&&(t.call(e,l,e[l],r||l),"Object"!=3D=3Dn.util.type(=
e[l])||a[n.util.objId(e[l])]?"Array"!=3D=3Dn.util.type(e[l])||a[n.util.ob=
jId(e[l])]||(a[n.util.objId(e[l])]=3D!0,n.languages.DFS(e[l],t,l,a)):(a[n=
.util.objId(e[l])]=3D!0,n.languages.DFS(e[l],t,null,a)))}},plugins:{},hig=
hlightAll:function(e,t){n.highlightAllUnder(document,e,t)},highlightAllUn=
der:function(e,t,r){var =
a=3D{callback:r,selector:'code[class*=3D"language-"], =
[class*=3D"language-"] code, code[class*=3D"lang-"], [class*=3D"lang-"] =
code'};n.hooks.run("before-highlightall",a);for(var =
l,i=3Da.elements||e.querySelectorAll(a.selector),o=3D0;l=3Di[o++];)n.high=
lightElement(l,t=3D=3D=3D!0,a.callback)},highlightElement:function(t,r,a)=
{for(var =
l,i,o=3Dt;o&&!e.test(o.className);)o=3Do.parentNode;o&&(l=3D(o.className.=
match(e)||[,""])[1].toLowerCase(),i=3Dn.languages[l]),t.className=3Dt.cla=
ssName.replace(e,"").replace(/\s+/g," ")+" =
language-"+l,t.parentNode&&(o=3Dt.parentNode,/pre/i.test(o.nodeName)&&(o.=
className=3Do.className.replace(e,"").replace(/\s+/g," ")+" =
language-"+l));var =
s=3Dt.textContent,u=3D{element:t,language:l,grammar:i,code:s};if(n.hooks.=
run("before-sanity-check",u),!u.code||!u.grammar)return =
u.code&&(n.hooks.run("before-highlight",u),u.element.textContent=3Du.code=
,n.hooks.run("after-highlight",u)),n.hooks.run("complete",u),void =
0;if(n.hooks.run("before-highlight",u),r&&_self.Worker){var g=3Dnew =
Worker(n.filename);g.onmessage=3Dfunction(e){u.highlightedCode=3De.data,n=
.hooks.run("before-insert",u),u.element.innerHTML=3Du.highlightedCode,a&&=
a.call(u.element),n.hooks.run("after-highlight",u),n.hooks.run("complete"=
,u)},g.postMessage(JSON.stringify({language:u.language,code:u.code,immedi=
ateClose:!0}))}else =
u.highlightedCode=3Dn.highlight(u.code,u.grammar,u.language),n.hooks.run(=
"before-insert",u),u.element.innerHTML=3Du.highlightedCode,a&&a.call(t),n=
.hooks.run("after-highlight",u),n.hooks.run("complete",u)},highlight:func=
tion(e,t,a){var l=3D{code:e,grammar:t,language:a};return =
n.hooks.run("before-tokenize",l),l.tokens=3Dn.tokenize(l.code,l.grammar),=
n.hooks.run("after-tokenize",l),r.stringify(n.util.encode(l.tokens),l.lan=
guage)},matchGrammar:function(e,t,r,a,l,i,o){var s=3Dn.Token;for(var u =
in r)if(r.hasOwnProperty(u)&&r[u]){if(u=3D=3Do)return;var =
g=3Dr[u];g=3D"Array"=3D=3D=3Dn.util.type(g)?g:[g];for(var =
c=3D0;c<g.length;++c){var =
h=3Dg[c],f=3Dh.inside,d=3D!!h.lookbehind,m=3D!!h.greedy,p=3D0,y=3Dh.alias=
;if(m&&!h.pattern.global){var =
v=3Dh.pattern.toString().match(/[imuy]*$/)[0];h.pattern=3DRegExp(h.patter=
n.source,v+"g")}h=3Dh.pattern||h;for(var =
b=3Da,k=3Dl;b<t.length;k+=3Dt[b].length,++b){var =
w=3Dt[b];if(t.length>e.length)return;if(!(w instanceof =
s)){if(m&&b!=3Dt.length-1){h.lastIndex=3Dk;var =
_=3Dh.exec(e);if(!_)break;for(var =
j=3D_.index+(d?_[1].length:0),P=3D_.index+_[0].length,A=3Db,x=3Dk,O=3Dt.l=
ength;O>A&&(P>x||!t[A].type&&!t[A-1].greedy);++A)x+=3Dt[A].length,j>=3Dx&=
&(++b,k=3Dx);if(t[b]instanceof =
s)continue;I=3DA-b,w=3De.slice(k,x),_.index-=3Dk}else{h.lastIndex=3D0;var=
 _=3Dh.exec(w),I=3D1}if(_){d&&(p=3D_[1]?_[1].length:0);var =
j=3D_.index+p,_=3D_[0].slice(p),P=3Dj+_.length,N=3Dw.slice(0,j),S=3Dw.sli=
ce(P),C=3D[b,I];N&&(++b,k+=3DN.length,C.push(N));var E=3Dnew =
s(u,f?n.tokenize(_,f):_,y,_,m);if(C.push(E),S&&C.push(S),Array.prototype.=
splice.apply(t,C),1!=3DI&&n.matchGrammar(e,t,r,b,k,!0,u),i)break}else =
if(i)break}}}}},tokenize:function(e,t){var =
r=3D[e],a=3Dt.rest;if(a){for(var l in a)t[l]=3Da[l];delete t.rest}return =
n.matchGrammar(e,r,t,0,0,!1),r},hooks:{all:{},add:function(e,t){var =
r=3Dn.hooks.all;r[e]=3Dr[e]||[],r[e].push(t)},run:function(e,t){var =
r=3Dn.hooks.all[e];if(r&&r.length)for(var =
a,l=3D0;a=3Dr[l++];)a(t)}}},r=3Dn.Token=3Dfunction(e,t,n,r,a){this.type=3D=
e,this.content=3Dt,this.alias=3Dn,this.length=3D0|(r||"").length,this.gre=
edy=3D!!a};if(r.stringify=3Dfunction(e,t,a){if("string"=3D=3Dtypeof =
e)return e;if("Array"=3D=3D=3Dn.util.type(e))return =
e.map(function(n){return r.stringify(n,t,e)}).join("");var =
l=3D{type:e.type,content:r.stringify(e.content,t,a),tag:"span",classes:["=
token",e.type],attributes:{},language:t,parent:a};if(e.alias){var =
i=3D"Array"=3D=3D=3Dn.util.type(e.alias)?e.alias:[e.alias];Array.prototyp=
e.push.apply(l.classes,i)}n.hooks.run("wrap",l);var =
o=3DObject.keys(l.attributes).map(function(e){return =
e+'=3D"'+(l.attributes[e]||"").replace(/"/g,"&quot;")+'"'}).join(" =
");return"<"+l.tag+' class=3D"'+l.classes.join(" ")+'"'+(o?" =
"+o:"")+">"+l.content+"</"+l.tag+">"},!_self.document)return =
_self.addEventListener?(n.disableWorkerMessageHandler||_self.addEventList=
ener("message",function(e){var =
t=3DJSON.parse(e.data),r=3Dt.language,a=3Dt.code,l=3Dt.immediateClose;_se=
lf.postMessage(n.highlight(a,n.languages[r],r)),l&&_self.close()},!1),_se=
lf.Prism):_self.Prism;var =
a=3Ddocument.currentScript||[].slice.call(document.getElementsByTagName("=
script")).pop();return =
a&&(n.filename=3Da.src,n.manual||a.hasAttribute("data-manual")||("loading=
"!=3D=3Ddocument.readyState?window.requestAnimationFrame?window.requestAn=
imationFrame(n.highlightAll):window.setTimeout(n.highlightAll,16):documen=
t.addEventListener("DOMContentLoaded",n.highlightAll))),_self.Prism}();"u=
ndefined"!=3Dtypeof =
module&&module.exports&&(module.exports=3DPrism),"undefined"!=3Dtypeof =
global&&(global.Prism=3DPrism);=0A=
Prism.languages.markup=3D{comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?=
>/,doctype:/<!DOCTYPE[\s\S]+?>/i,cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pat=
tern:/<\/?(?!\d)[^\s>\/=3D$<%]+(?:\s+[^\s>\/=3D]+(?:=3D(?:("|')(?:\\[\s\S=
]|(?!\1)[^\\])*\1|[^\s'">=3D]+))?)*\s*\/?>/i,greedy:!0,inside:{tag:{patte=
rn:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/=
}},"attr-value":{pattern:/=3D(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=3D=
]+)/i,inside:{punctuation:[/^=3D/,{pattern:/(^|[^\\])["']/,lookbehind:!0}=
]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace=
:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},Prism.languages.markup.ta=
g.inside["attr-value"].inside.entity=3DPrism.languages.markup.entity,Pris=
m.hooks.add("wrap",function(a){"entity"=3D=3D=3Da.type&&(a.attributes.tit=
le=3Da.content.replace(/&amp;/,"&"))}),Prism.languages.xml=3DPrism.langua=
ges.markup,Prism.languages.html=3DPrism.languages.markup,Prism.languages.=
mathml=3DPrism.languages.markup,Prism.languages.svg=3DPrism.languages.mar=
kup;=0A=
Prism.languages.css=3D{comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-]=
+?.*?(?:;|(?=3D\s*\{))/i,inside:{rule:/@[\w-]+/}},url:/url\((?:(["'])(?:\=
\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,selector:/[^{}\s][^{};]*?(?=
=3D\s*\{)/,string:{pattern:/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1=
/,greedy:!0},property:/[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=3D\s*:)/i,im=
portant:/\B!important\b/i,"function":/[-a-z0-9]+(?=3D\()/i,punctuation:/[=
(){};:]/},Prism.languages.css.atrule.inside.rest=3DPrism.languages.css,Pr=
ism.languages.markup&&(Prism.languages.insertBefore("markup","tag",{style=
:{pattern:/(<style[\s\S]*?>)[\s\S]*?(?=3D<\/style>)/i,lookbehind:!0,insid=
e:Prism.languages.css,alias:"language-css",greedy:!0}}),Prism.languages.i=
nsertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=3D("|'=
)(?:\\[\s\S]|(?!\1)[^\\])*\1/i,inside:{"attr-name":{pattern:/^\s*style/i,=
inside:Prism.languages.markup.tag.inside},punctuation:/^\s*=3D\s*['"]|['"=
]\s*$/,"attr-value":{pattern:/.+/i,inside:Prism.languages.css}},alias:"la=
nguage-css"}},Prism.languages.markup.tag));=0A=
Prism.languages.clike=3D{comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|=
$)/,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],=
string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!=
0},"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|tra=
it|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,lookbehind:!0,inside:{pu=
nctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instance=
of|function|new|try|throw|catch|finally|null|break|continue)\b/,"boolean"=
:/\b(?:true|false)\b/,"function":/[a-z0-9_]+(?=3D\()/i,number:/\b0x[\da-f=
]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/--?|\+\+?|!=3D?=3D=
?|<=3D?|>=3D?|=3D=3D?=3D?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];=
(),.:]/};=0A=
Prism.languages.javascript=3DPrism.languages.extend("clike",{keyword:/\b(=
?:as|async|await|break|case|catch|class|const|continue|debugger|default|d=
elete|do|else|enum|export|extends|finally|for|from|function|get|if|implem=
ents|import|in|instanceof|interface|let|new|null|of|package|private|prote=
cted|public|return|set|static|super|switch|this|throw|try|typeof|var|void=
|while|with|yield)\b/,number:/\b(?:0[xX][\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]=
+|NaN|Infinity)\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,"function":/[=
_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=3D\s*\()/i,operator:/-[-=3D]?|\+[+=3D=
]?|!=3D?=3D?|<<?=3D?|>>?>?=3D?|=3D(?:=3D=3D?|>)?|&[&=3D]?|\|[|=3D]?|\*\*?=
=3D?|\/=3D?|~|\^=3D?|%=3D?|\?|\.{3}/}),Prism.languages.insertBefore("java=
script","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/=
(\[[^\]\r\n]+]|\\.|[^\/\\\[\r\n])+\/[gimyu]{0,5}(?=3D\s*($|[\r\n,.;})\]])=
)/,lookbehind:!0,greedy:!0},"function-variable":{pattern:/[_$a-z\xA0-\uFF=
FF][$\w\xA0-\uFFFF]*(?=3D\s*=3D\s*(?:function\b|(?:\([^()]*\)|[_$a-z\xA0-=
\uFFFF][$\w\xA0-\uFFFF]*)\s*=3D>))/i,alias:"function"},constant:/\b[A-Z][=
A-Z\d_]*\b/}),Prism.languages.insertBefore("javascript","string",{"templa=
te-string":{pattern:/`(?:\\[\s\S]|\${[^}]+}|[^\\`])*`/,greedy:!0,inside:{=
interpolation:{pattern:/\${[^}]+}/,inside:{"interpolation-punctuation":{p=
attern:/^\${|}$/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}}}),Pr=
ism.languages.javascript["template-string"].inside.interpolation.inside.r=
est=3DPrism.languages.javascript,Prism.languages.markup&&Prism.languages.=
insertBefore("markup","tag",{script:{pattern:/(<script[\s\S]*?>)[\s\S]*?(=
?=3D<\/script>)/i,lookbehind:!0,inside:Prism.languages.javascript,alias:"=
language-javascript",greedy:!0}}),Prism.languages.js=3DPrism.languages.ja=
vascript;=0A=
Prism.languages.c=3DPrism.languages.extend("clike",{keyword:/\b(?:_Aligna=
s|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_a=
ssert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue=
|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|r=
eturn|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|voi=
d|volatile|while)\b/,operator:/-[>-]?|\+\+?|!=3D?|<<?=3D?|>>?=3D?|=3D=3D?=
|&&?|\|\|?|[~^%?*\/]/,number:/(?:\b0x[\da-f]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e=
[+-]?\d+)?)[ful]*/i}),Prism.languages.insertBefore("c","string",{macro:{p=
attern:/(^\s*)#\s*[a-z]+(?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0=
,alias:"property",inside:{string:{pattern:/(#\s*include\s*)(?:<.+?>|("|')=
(?:\\?.)+?\2)/,lookbehind:!0},directive:{pattern:/(#\s*)\b(?:define|defin=
ed|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef=
|using)\b/,lookbehind:!0,alias:"keyword"}}},constant:/\b(?:__FILE__|__LIN=
E__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|S=
EEK_SET|stdin|stdout|stderr)\b/}),delete =
Prism.languages.c["class-name"],delete Prism.languages.c["boolean"];=0A=
Prism.languages.csharp=3DPrism.languages.extend("clike",{keyword:/\b(?:ab=
stract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch=
|char|checked|class|const|continue|decimal|default|delegate|descending|do=
|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float=
|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|inte=
rnal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderb=
y|out|override|params|partial|private|protected|public|readonly|ref|remov=
e|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|st=
ruct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort=
|using|value|var|virtual|void|volatile|where|while|yield)\b/,string:[{pat=
tern:/@("|')(?:\1\1|\\[\s\S]|(?!\1)[^\\])*\1/,greedy:!0},{pattern:/("|')(=
?:\\.|(?!\1)[^\\\r\n])*?\1/,greedy:!0}],"class-name":[{pattern:/\b[A-Z]\w=
*(?:\.\w+)*\b(?=3D\s+\w+)/,inside:{punctuation:/\./}},{pattern:/(\[)[A-Z]=
\w*(?:\.\w+)*\b/,lookbehind:!0,inside:{punctuation:/\./}},{pattern:/(\b(?=
:class|interface)\s+[A-Z]\w*(?:\.\w+)*\s*:\s*)[A-Z]\w*(?:\.\w+)*\b/,lookb=
ehind:!0,inside:{punctuation:/\./}},{pattern:/((?:\b(?:class|interface|ne=
w)\s+)|(?:catch\s+\())[A-Z]\w*(?:\.\w+)*\b/,lookbehind:!0,inside:{punctua=
tion:/\./}}],number:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)f?/i}),Prism.l=
anguages.insertBefore("csharp","class-name",{"generic-method":{pattern:/\=
w+\s*<[^>\r\n]+?>\s*(?=3D\()/,inside:{"function":/^\w+/,"class-name":{pat=
tern:/\b[A-Z]\w*(?:\.\w+)*\b/,inside:{punctuation:/\./}},keyword:Prism.la=
nguages.csharp.keyword,punctuation:/[<>(),.:]/}},preprocessor:{pattern:/(=
^\s*)#.*/m,lookbehind:!0,alias:"property",inside:{directive:{pattern:/(\s=
*#)\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|unde=
f|warning)\b/,lookbehind:!0,alias:"keyword"}}}}),Prism.languages.dotnet=3D=
Prism.languages.csharp;=0A=
!function(e){var =
t=3D{variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,inside:{variable:[{pattern:=
/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\=
b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--?|-=3D|\+\+?|\+=3D|!=
=3D?|~|\*\*?|\*=3D|\/=3D?|%=3D?|<<=3D?|>>=3D?|<=3D?|>=3D?|=3D=3D?|&&?|&=3D=
|\^=3D?|\|\|?|\|=3D|\?|:/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\([=
^)]+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},/\$(?:[\w#=
?*!@]+|\{[^}]+\})/i]};e.languages.bash=3D{shebang:{pattern:/^#!\s*\/bin\/=
bash|^#!\s*\/bin\/sh/,alias:"important"},comment:{pattern:/(^|[^"{\\])#.*=
/,lookbehind:!0},string:[{pattern:/((?:^|[^<])<<\s*)["']?(\w+?)["']?\s*\r=
?\n(?:[\s\S])*?\r?\n\2/,lookbehind:!0,greedy:!0,inside:t},{pattern:/(["']=
)(?:\\[\s\S]|\$\([^)]+\)|`[^`]+`|(?!\1)[^\\])*\1/,greedy:!0,inside:t}],va=
riable:t.variable,"function":{pattern:/(^|[\s;|&])(?:alias|apropos|apt-ge=
t|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk=
|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|=
crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolo=
rs|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|=
expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free=
|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|g=
zip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup=
|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout=
|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|m=
kisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup=
|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr=
|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|r=
ar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|=
rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|sl=
ocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar=
|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|=
ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime=
|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|wa=
tch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=3D$|=
[\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&])(?:let|:|\.|if|then=
|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|un=
til|echo|exit|return|set|declare)(?=3D$|[\s;|&])/,lookbehind:!0},"boolean=
":{pattern:/(^|[\s;|&])(?:true|false)(?=3D$|[\s;|&])/,lookbehind:!0},oper=
ator:/&&?|\|\|?|=3D=3D?|!=3D?|<<<?|>>|<=3D?|>=3D?|=3D~/,punctuation:/\$?\=
(\(?|\)\)?|\.\.|[{}[\];]/};var =
a=3Dt.variable[1].inside;a.string=3De.languages.bash.string,a["function"]=
=3De.languages.bash["function"],a.keyword=3De.languages.bash.keyword,a["b=
oolean"]=3De.languages.bash["boolean"],a.operator=3De.languages.bash.oper=
ator,a.punctuation=3De.languages.bash.punctuation,e.languages.shell=3De.l=
anguages.bash}(Prism);=0A=
Prism.languages.basic=3D{comment:{pattern:/(?:!|REM\b).+/i,inside:{keywor=
d:/^REM/i}},string:{pattern:/"(?:""|[!#$%&'()*,\/:;<=3D>?^_ =
+\-.A-Z\d])*"/i,greedy:!0},number:/(?:\b\d+\.?\d*|\B\.\d+)(?:E[+-]?\d+)?/=
i,keyword:/\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: =
ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE=
|DEF(?: FN| =
SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERRO=
R|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY=
|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: =
COM| ERROR| KEY| TIMER)?|OPEN|OPTION =
BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHA=
RED|SINGLE|SELECT =
CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TR=
OFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW =
PRINT|WAIT|WEND|WHILE|WRITE)(?:\$|\b)/i,"function":/\b(?:ABS|ACCESS|ACOS|=
ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|C=
HR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|D=
EG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|=
EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTER=
NAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG=
2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|O=
PTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PRO=
GRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAIND=
ER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUEN=
TIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STY=
LE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE=
|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?=
:\$|\b)/i,operator:/<[=3D>]?|>=3D?|[+\-*\/^=3D&]|\b(?:AND|EQV|IMP|NOT|OR|=
XOR)\b/i,punctuation:/[,;:()]/};=0A=
Prism.languages.cpp=3DPrism.languages.extend("c",{keyword:/\b(?:alignas|a=
lignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|=
const|constexpr|const_cast|continue|decltype|default|delete|do|double|dyn=
amic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inlin=
e|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|l=
ong|mutable|namespace|new|noexcept|nullptr|operator|private|protected|pub=
lic|register|reinterpret_cast|return|short|signed|sizeof|static|static_as=
sert|static_cast|struct|switch|template|this|thread_local|throw|try|typed=
ef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|whi=
le)\b/,"boolean":/\b(?:true|false)\b/,operator:/--?|\+\+?|!=3D?|<{1,2}=3D=
?|>{1,2}=3D?|->|:{1,2}|=3D{1,2}|\^|~|%|&{1,2}|\|\|?|\?|\*|\/|\b(?:and|and=
_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/}),Prism.languages.ins=
ertBefore("cpp","keyword",{"class-name":{pattern:/(class\s+)\w+/i,lookbeh=
ind:!0}}),Prism.languages.insertBefore("cpp","string",{"raw-string":{patt=
ern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}});=0A=
!function(e){e.languages.ruby=3De.languages.extend("clike",{comment:[/#.*=
/,{pattern:/^=3Dbegin(?:\r?\n|\r)(?:.*(?:\r?\n|\r))*?=3Dend/m,greedy:!0}]=
,keyword:/\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|d=
efined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|=
nil|not|or|protected|private|public|raise|redo|require|rescue|retry|retur=
n|self|super|then|throw|true|undef|unless|until|when|while|yield)\b/});va=
r =
n=3D{pattern:/#\{[^}]+\}/,inside:{delimiter:{pattern:/^#\{|\}$/,alias:"ta=
g"},rest:e.languages.ruby}};e.languages.insertBefore("ruby","keyword",{re=
gex:[{pattern:/%r([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1[gim]{0,=
3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\((?:[^()\\]|\\[\s\S]=
)*\)[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\{(?:[^#{=
}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}[gim]{0,3}/,greedy:!0,inside:{interpolat=
ion:n}},{pattern:/%r\[(?:[^\[\]\\]|\\[\s\S])*\][gim]{0,3}/,greedy:!0,insi=
de:{interpolation:n}},{pattern:/%r<(?:[^<>\\]|\\[\s\S])*>[gim]{0,3}/,gree=
dy:!0,inside:{interpolation:n}},{pattern:/(^|[^\/])\/(?!\/)(\[.+?]|\\.|[^=
\/\\\r\n])+\/[gim]{0,3}(?=3D\s*($|[\r\n,.;})]))/,lookbehind:!0,greedy:!0}=
],variable:/[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,symbol:{pattern:/(^|[^:]):[a-zA=
-Z_]\w*(?:[?!]|\b)/,lookbehind:!0}}),e.languages.insertBefore("ruby","num=
ber",{builtin:/\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception=
|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Modul=
e|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|Thre=
adGroup|Thread|Time|TrueClass)\b/,constant:/\b[A-Z]\w*(?:[?!]|\b)/}),e.la=
nguages.ruby.string=3D[{pattern:/%[qQiIwWxs]?([^a-zA-Z0-9\s{(\[<])(?:(?!\=
1)[^\\]|\\[\s\S])*\1/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQi=
IwWxs]?\((?:[^()\\]|\\[\s\S])*\)/,greedy:!0,inside:{interpolation:n}},{pa=
ttern:/%[qQiIwWxs]?\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}/,greedy:!0,=
inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\[(?:[^\[\]\\]|\\[\s\S])*=
\]/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?<(?:[^<>\\]=
|\\[\s\S])*>/,greedy:!0,inside:{interpolation:n}},{pattern:/("|')(?:#\{[^=
}]+\}|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0,inside:{interpolat=
ion:n}}]}(Prism);=0A=
Prism.languages.diff=3D{coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^=
\d+.*$/m],deleted:/^[-<].*$/m,inserted:/^[+>].*$/m,diff:{pattern:/^!(?!!)=
.+$/m,alias:"important"}};=0A=
Prism.languages["markup-templating"]=3D{},Object.defineProperties(Prism.l=
anguages["markup-templating"],{buildPlaceholders:{value:function(e,t,n,a)=
{e.language=3D=3D=3Dt&&(e.tokenStack=3D[],e.code=3De.code.replace(n,funct=
ion(n){if("function"=3D=3Dtypeof a&&!a(n))return n;for(var =
r=3De.tokenStack.length;-1!=3D=3De.code.indexOf("___"+t.toUpperCase()+r+"=
___");)++r;return =
e.tokenStack[r]=3Dn,"___"+t.toUpperCase()+r+"___"}),e.grammar=3DPrism.lan=
guages.markup)}},tokenizePlaceholders:{value:function(e,t){if(e.language=3D=
=3D=3Dt&&e.tokenStack){e.grammar=3DPrism.languages[t];var =
n=3D0,a=3DObject.keys(e.tokenStack),r=3Dfunction(o){if(!(n>=3Da.length))f=
or(var i=3D0;i<o.length;i++){var g=3Do[i];if("string"=3D=3Dtypeof =
g||g.content&&"string"=3D=3Dtypeof g.content){var =
c=3Da[n],s=3De.tokenStack[c],l=3D"string"=3D=3Dtypeof =
g?g:g.content,p=3Dl.indexOf("___"+t.toUpperCase()+c+"___");if(p>-1){++n;v=
ar f,u=3Dl.substring(0,p),_=3Dnew =
Prism.Token(t,Prism.tokenize(s,e.grammar,t),"language-"+t,s),k=3Dl.substr=
ing(p+("___"+t.toUpperCase()+c+"___").length);if(u||k?(f=3D[u,_,k].filter=
(function(e){return!!e}),r(f)):f=3D_,"string"=3D=3Dtypeof =
g?Array.prototype.splice.apply(o,[i,1].concat(f)):g.content=3Df,n>=3Da.le=
ngth)break}}else g.content&&"string"!=3Dtypeof =
g.content&&r(g.content)}};r(e.tokens)}}}});=0A=
Prism.languages.erlang=3D{comment:/%.+/,string:{pattern:/"(?:\\.|[^\\"\r\=
n])*"/,greedy:!0},"quoted-function":{pattern:/'(?:\\.|[^\\'\r\n])+'(?=3D\=
()/,alias:"function"},"quoted-atom":{pattern:/'(?:\\.|[^\\'\r\n])+'/,alia=
s:"atom"},"boolean":/\b(?:true|false)\b/,keyword:/\b(?:fun|when|case|of|e=
nd|if|receive|after|try|catch)\b/,number:[/\$\\?./,/\d+#[a-z0-9]+/i,/(?:\=
b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i],"function":/\b[a-z][\w@]*(?=3D\()/,v=
ariable:{pattern:/(^|[^@])(?:\b|\?)[A-Z_][\w@]*/,lookbehind:!0},operator:=
[/[=3D\/<>:]=3D|=3D[:\/]=3D|\+\+?|--?|[=3D*\/!]|\b(?:bnot|div|rem|band|bo=
r|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\b/,{pattern:/(^|[^<])<(?!<)=
/,lookbehind:!0},{pattern:/(^|[^>])>(?!>)/,lookbehind:!0}],atom:/\b[a-z][=
\w@]*/,punctuation:/[()[\]{}:;,.#|]|<<|>>/};=0A=
Prism.languages.groovy=3DPrism.languages.extend("clike",{keyword:/\b(?:as=
|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|co=
ntinue|default|do|double|else|enum|extends|final|finally|float|for|goto|i=
f|implements|import|instanceof|int|interface|long|native|new|package|priv=
ate|protected|public|return|short|static|strictfp|super|switch|synchroniz=
ed|this|throw|throws|trait|transient|try|void|volatile|while)\b/,string:[=
{pattern:/("""|''')[\s\S]*?\1|(?:\$\/)(?:\$\/\$|[\s\S])*?\/\$/,greedy:!0}=
,{pattern:/(["'\/])(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0}],number:/\b(?:0=
b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?[\d]+)=
?)[glidf]?\b/i,operator:{pattern:/(^|[^.])(?:~|=3D=3D?~?|\?[.:]?|\*(?:[.=3D=
]|\*=3D?)?|\.[@&]|\.\.<|\.{1,2}(?!\.)|-[-=3D>]?|\+[+=3D]?|!=3D?|<(?:<=3D?=
|=3D>?)?|>(?:>>?=3D?|=3D)?|&[&=3D]?|\|[|=3D]?|\/=3D?|\^=3D?|%=3D?)/,lookb=
ehind:!0},punctuation:/\.+|[{}[\];(),:$]/}),Prism.languages.insertBefore(=
"groovy","string",{shebang:{pattern:/#!.+/,alias:"comment"}}),Prism.langu=
ages.insertBefore("groovy","punctuation",{"spock-block":/\b(?:setup|given=
|when|then|and|cleanup|expect|where):/}),Prism.languages.insertBefore("gr=
oovy","function",{annotation:{alias:"punctuation",pattern:/(^|[^.])@\w+/,=
lookbehind:!0}}),Prism.hooks.add("wrap",function(e){if("groovy"=3D=3D=3De=
.language&&"string"=3D=3D=3De.type){var =
t=3De.content[0];if("'"!=3Dt){var =
n=3D/([^\\])(?:\$(?:\{.*?\}|[\w.]+))/;"$"=3D=3D=3Dt&&(n=3D/([^\$])(?:\$(?=
:\{.*?\}|[\w.]+))/),e.content=3De.content.replace(/&lt;/g,"<").replace(/&=
amp;/g,"&"),e.content=3DPrism.highlight(e.content,{expression:{pattern:n,=
lookbehind:!0,inside:Prism.languages.groovy}}),e.classes.push("/"=3D=3D=3D=
t?"regex":"gstring")}}});=0A=
Prism.languages.java=3DPrism.languages.extend("clike",{keyword:/\b(?:abst=
ract|continue|for|new|switch|assert|default|goto|package|synchronized|boo=
lean|do|if|private|this|break|double|implements|protected|throw|byte|else=
|import|public|throws|case|enum|instanceof|return|transient|catch|extends=
|int|short|try|char|final|interface|static|void|class|finally|long|strict=
fp|volatile|const|float|native|super|while)\b/,number:/\b0b[01]+\b|\b0x[\=
da-f]*\.?[\da-fp-]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?[df]?/i,operat=
or:{pattern:/(^|[^.])(?:\+[+=3D]?|-[-=3D]?|!=3D?|<<?=3D?|>>?>?=3D?|=3D=3D=
?|&[&=3D]?|\|[|=3D]?|\*=3D?|\/=3D?|%=3D?|\^=3D?|[?:~])/m,lookbehind:!0}})=
,Prism.languages.insertBefore("java","function",{annotation:{alias:"punct=
uation",pattern:/(^|[^.])@\w+/,lookbehind:!0}}),Prism.languages.insertBef=
ore("java","class-name",{generics:{pattern:/<\s*\w+(?:\.\w+)?(?:\s*,\s*\w=
+(?:\.\w+)?)*>/i,alias:"function",inside:{keyword:Prism.languages.java.ke=
yword,punctuation:/[<>(),.:]/}}});=0A=
Prism.languages.json=3D{property:/"(?:\\.|[^\\"\r\n])*"(?=3D\s*:)/i,strin=
g:{pattern:/"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,greedy:!0},number:/-?\d+\.?\d*=
([Ee][+-]?\d+)?/,punctuation:/[{}[\],]/,operator:/:/g,"boolean":/\b(?:tru=
e|false)\b/i,"null":/\bnull\b/i},Prism.languages.jsonp=3DPrism.languages.=
json;=0A=
Prism.languages.perl=3D{comment:[{pattern:/(^\s*)=3D\w+[\s\S]*?=3Dcut.*/m=
,lookbehind:!0},{pattern:/(^|[^\\$])#.*/,lookbehind:!0}],string:[{pattern=
:/\b(?:q|qq|qx|qw)\s*([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/,gr=
eedy:!0},{pattern:/\b(?:q|qq|qx|qw)\s+([a-zA-Z0-9])(?:(?!\1)[^\\]|\\[\s\S=
])*\1/,greedy:!0},{pattern:/\b(?:q|qq|qx|qw)\s*\((?:[^()\\]|\\[\s\S])*\)/=
,greedy:!0},{pattern:/\b(?:q|qq|qx|qw)\s*\{(?:[^{}\\]|\\[\s\S])*\}/,greed=
y:!0},{pattern:/\b(?:q|qq|qx|qw)\s*\[(?:[^[\]\\]|\\[\s\S])*\]/,greedy:!0}=
,{pattern:/\b(?:q|qq|qx|qw)\s*<(?:[^<>\\]|\\[\s\S])*>/,greedy:!0},{patter=
n:/("|`)(?:(?!\1)[^\\]|\\[\s\S])*\1/,greedy:!0},{pattern:/'(?:[^'\\\r\n]|=
\\.)*'/,greedy:!0}],regex:[{pattern:/\b(?:m|qr)\s*([^a-zA-Z0-9\s{(\[<])(?=
:(?!\1)[^\\]|\\[\s\S])*\1[msixpodualngc]*/,greedy:!0},{pattern:/\b(?:m|qr=
)\s+([a-zA-Z0-9])(?:(?!\1)[^\\]|\\[\s\S])*\1[msixpodualngc]*/,greedy:!0},=
{pattern:/\b(?:m|qr)\s*\((?:[^()\\]|\\[\s\S])*\)[msixpodualngc]*/,greedy:=
!0},{pattern:/\b(?:m|qr)\s*\{(?:[^{}\\]|\\[\s\S])*\}[msixpodualngc]*/,gre=
edy:!0},{pattern:/\b(?:m|qr)\s*\[(?:[^[\]\\]|\\[\s\S])*\][msixpodualngc]*=
/,greedy:!0},{pattern:/\b(?:m|qr)\s*<(?:[^<>\\]|\\[\s\S])*>[msixpodualngc=
]*/,greedy:!0},{pattern:/(^|[^-]\b)(?:s|tr|y)\s*([^a-zA-Z0-9\s{(\[<])(?:(=
?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2[msixpodualngcer]*/,loo=
kbehind:!0,greedy:!0},{pattern:/(^|[^-]\b)(?:s|tr|y)\s+([a-zA-Z0-9])(?:(?=
!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2[msixpodualngcer]*/,look=
behind:!0,greedy:!0},{pattern:/(^|[^-]\b)(?:s|tr|y)\s*\((?:[^()\\]|\\[\s\=
S])*\)\s*\((?:[^()\\]|\\[\s\S])*\)[msixpodualngcer]*/,lookbehind:!0,greed=
y:!0},{pattern:/(^|[^-]\b)(?:s|tr|y)\s*\{(?:[^{}\\]|\\[\s\S])*\}\s*\{(?:[=
^{}\\]|\\[\s\S])*\}[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:=
/(^|[^-]\b)(?:s|tr|y)\s*\[(?:[^[\]\\]|\\[\s\S])*\]\s*\[(?:[^[\]\\]|\\[\s\=
S])*\][msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\b)(?=
:s|tr|y)\s*<(?:[^<>\\]|\\[\s\S])*>\s*<(?:[^<>\\]|\\[\s\S])*>[msixpodualng=
cer]*/,lookbehind:!0,greedy:!0},{pattern:/\/(?:[^\/\\\r\n]|\\.)*\/[msixpo=
dualngc]*(?=3D\s*(?:$|[\r\n,.;})&|\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|=
and|or|xor|x)\b))/,greedy:!0}],variable:[/[&*$@%]\{\^[A-Z]+\}/,/[&*$@%]\^=
[A-Z_]/,/[&*$@%]#?(?=3D\{)/,/[&*$@%]#?(?:(?:::)*'?(?!\d)[\w$]+)+(?:::)*/i=
,/[&*$@%]\d+/,/(?!%=3D)[$@%][!"#$%&'()*+,\-.\/:;<=3D>?@[\\\]^_`{|}~]/],fi=
lehandle:{pattern:/<(?![<=3D])\S*>|\b_\b/,alias:"symbol"},vstring:{patter=
n:/v\d+(?:\.\d+)*|\d+(?:\.\d+){2,}/,alias:"string"},"function":{pattern:/=
sub =
[a-z0-9_]+/i,inside:{keyword:/sub/}},keyword:/\b(?:any|break|continue|def=
ault|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|m=
y|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|u=
ntil|use|when|while)\b/,number:/\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0b[01]=
(?:_?[01])*|(?:\d(?:_?\d)*)?\.?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)\b/,operator:=
/-[rwxoRWXOezsfdlpSbctugkTBMAC]\b|\+[+=3D]?|-[-=3D>]?|\*\*?=3D?|\/\/?=3D?=
|=3D[=3D~>]?|~[~=3D]?|\|\|?=3D?|&&?=3D?|<(?:=3D>?|<=3D?)?|>>?=3D?|![~=3D]=
?|[%^]=3D?|\.(?:=3D|\.\.?)?|[\\?]|\bx(?:=3D|\b)|\b(?:lt|gt|le|ge|eq|ne|cm=
p|not|and|or|xor)\b/,punctuation:/[{}[\];(),:]/};=0A=
!function(e){e.languages.php=3De.languages.extend("clike",{keyword:/\b(?:=
and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|def=
ault|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endw=
hile|extends|for|foreach|function|include|include_once|global|if|new|retu=
rn|static|switch|use|require|require_once|var|while|abstract|interface|pu=
blic|implements|private|protected|parent|throw|null|echo|print|trait|name=
space|final|yield|goto|instanceof|finally|try|catch)\b/i,constant:/\b[A-Z=
0-9_]{2,}\b/,comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,look=
behind:!0}}),e.languages.insertBefore("php","string",{"shell-comment":{pa=
ttern:/(^|[^\\])#.*/,lookbehind:!0,alias:"comment"}}),e.languages.insertB=
efore("php","keyword",{delimiter:{pattern:/\?>|<\?(?:php|=3D)?/i,alias:"i=
mportant"},variable:/\$+(?:\w+\b|(?=3D{))/i,"package":{pattern:/(\\|names=
pace\s+|use\s+)[\w\\]+/,lookbehind:!0,inside:{punctuation:/\\/}}}),e.lang=
uages.insertBefore("php","operator",{property:{pattern:/(->)[\w]+/,lookbe=
hind:!0}}),e.languages.insertBefore("php","string",{"nowdoc-string":{patt=
ern:/<<<'([^']+)'(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;/,greedy:!0,alias:"st=
ring",inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\w*;$/i,alias:"symbol=
",inside:{punctuation:/^<<<'?|[';]$/}}}},"heredoc-string":{pattern:/<<<(?=
:"([^"]+)"(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;|([a-z_]\w*)(?:\r\n?|\n)(?:.=
*(?:\r\n?|\n))*?\2;)/i,greedy:!0,alias:"string",inside:{delimiter:{patter=
n:/^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,alias:"symbol",inside:{punctua=
tion:/^<<<"?|[";]$/}},interpolation:null}},"single-quoted-string":{patter=
n:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0,alias:"string"},"double-quoted-strin=
g":{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,alias:"string",inside:{int=
erpolation:null}}}),delete e.languages.php.string;var =
n=3D{pattern:/{\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\{])\$+(?:\w+(?:=
\[.+?]|->\w+)*)/,lookbehind:!0,inside:{rest:e.languages.php}};e.languages=
.php["heredoc-string"].inside.interpolation=3Dn,e.languages.php["double-q=
uoted-string"].inside.interpolation=3Dn,e.hooks.add("before-tokenize",fun=
ction(n){if(/(?:<\?php|<\?)/gi.test(n.code)){var =
i=3D/(?:<\?php|<\?)[\s\S]*?(?:\?>|$)/gi;e.languages["markup-templating"].=
buildPlaceholders(n,"php",i)}}),e.hooks.add("after-tokenize",function(n){=
e.languages["markup-templating"].tokenizePlaceholders(n,"php")})}(Prism);=0A=
Prism.languages.sql=3D{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:=
--|\/\/|#).*)/,lookbehind:!0},string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]=
|(?!\2)[^\\])*\2/,greedy:!0,lookbehind:!0},variable:/@[\w.$]+|@(["'`])(?:=
\\[\s\S]|(?!\1)[^\\])+\1/,"function":/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LC=
ASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=3D\s*\()/i,keyword:/\b(?:A=
CTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATIO=
N|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|=
BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER=
|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|=
COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|C=
ONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CUR=
SOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|D=
ECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETE=
RMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE=
|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGIN=
E|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXT=
ENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: =
EACH =
ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLL=
ECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTI=
TY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSER=
T|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS=
?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|=
LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|ME=
RGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|=
POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|=
OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORD=
ER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGO=
N|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)=
?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE=
|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|REST=
RICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE=
|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_US=
ER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAM=
E|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESP=
ACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TIN=
Y(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES=
?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UP=
DATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YI=
NG)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: =
ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,"boolean":/\b(?:TRUE|FALSE|NULL=
)\b/i,number:/\b0x[\da-f]+\b|\b\d+\.?\d*|\B\.\d+\b/i,operator:/[-+*\/=3D%=
^~]|&&?|\|\|?|!=3D?|<(?:=3D>?|<|>)?|>[>=3D]?|\b(?:AND|BETWEEN|IN|LIKE|NOT=
|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/};=0A=
Prism.languages.python=3D{comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0},=
"triple-quoted-string":{pattern:/("""|''')[\s\S]+?\1/,greedy:!0,alias:"st=
ring"},string:{pattern:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0},"func=
tion":{pattern:/((?:^|\s)def[ =
\t]+)[a-zA-Z_]\w*(?=3D\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bc=
lass\s+)\w+/i,lookbehind:!0},keyword:/\b(?:as|assert|async|await|break|cl=
ass|continue|def|del|elif|else|except|exec|finally|for|from|global|if|imp=
ort|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\b=
/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|bu=
ffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|=
delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|=
frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isins=
tance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|ob=
ject|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reverse=
d|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|un=
ichr|unicode|vars|xrange|zip)\b/,"boolean":/\b(?:True|False|None)\b/,numb=
er:/(?:\b(?=3D\d)|\B(?=3D\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*\.?\d*|=
\.\d+)(?:e[+-]?\d+)?j?\b/i,operator:/[-+%=3D]=3D?|!=3D|\*\*?=3D?|\/\/?=3D=
?|<[<=3D>]?|>[=3D>]?|[&|^~]|\b(?:or|and|not)\b/,punctuation:/[{}[\];(),.:=
]/};=0A=
Prism.languages.scala=3DPrism.languages.extend("java",{keyword:/<-|=3D>|\=
b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSo=
me|if|implicit|import|lazy|match|new|null|object|override|package|private=
|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|whi=
le|with|yield)\b/,string:[{pattern:/"""[\s\S]*?"""/,greedy:!0},{pattern:/=
("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0}],builtin:/\b(?:String|Int|Lon=
g|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\b/=
,number:/\b0x[\da-f]*\.?[\da-f]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e\d+)?[dfl]?/i=
,symbol:/'[^\d\s\\]\w*/}),delete =
Prism.languages.scala["class-name"],delete =
Prism.languages.scala["function"];=0A=
Prism.languages.vbnet=3DPrism.languages.extend("basic",{keyword:/(?:\b(?:=
ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|=
BYTE|BYVAL|CALL(?: =
ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|=
CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSH=
ORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT=
|DEF(?: FN| =
SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|EN=
D|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: =
EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HAND=
LES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|IS=
NOT|KEY|KILL|LINE =
INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINH=
ERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NO=
THING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| =
TIMER)?|OPERATOR|OPEN|OPTION(?: =
BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|=
PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READON=
LY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SEL=
ECT(?: =
CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRIN=
G|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|=
TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW =
PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|=
\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\$|\b)/i,comment:[{pattern:/(?:!|R=
EM\b).+/i,inside:{keyword:/^REM/i}},{pattern:/(^|[^\\:])'.*/,lookbehind:!=
0}]});=0A=
!function(){if("undefined"!=3Dtypeof =
self&&self.Prism&&self.document){var =
t=3D[],e=3D{},n=3Dfunction(){};Prism.plugins.toolbar=3D{};var =
a=3DPrism.plugins.toolbar.registerButton=3Dfunction(n,a){var =
o;o=3D"function"=3D=3Dtypeof a?a:function(t){var =
e;return"function"=3D=3Dtypeof =
a.onClick?(e=3Ddocument.createElement("button"),e.type=3D"button",e.addEv=
entListener("click",function(){a.onClick.call(this,t)})):"string"=3D=3Dty=
peof =
a.url?(e=3Ddocument.createElement("a"),e.href=3Da.url):e=3Ddocument.creat=
eElement("span"),e.textContent=3Da.text,e},t.push(e[n]=3Do)},o=3DPrism.pl=
ugins.toolbar.hook=3Dfunction(a){var =
o=3Da.element.parentNode;if(o&&/pre/i.test(o.nodeName)&&!o.parentNode.cla=
ssList.contains("code-toolbar")){var =
r=3Ddocument.createElement("div");r.classList.add("code-toolbar"),o.paren=
tNode.insertBefore(r,o),r.appendChild(o);var =
i=3Ddocument.createElement("div");i.classList.add("toolbar"),document.bod=
y.hasAttribute("data-toolbar-order")&&(t=3Ddocument.body.getAttribute("da=
ta-toolbar-order").split(",").map(function(t){return =
e[t]||n})),t.forEach(function(t){var e=3Dt(a);if(e){var =
n=3Ddocument.createElement("div");n.classList.add("toolbar-item"),n.appen=
dChild(e),i.appendChild(n)}}),r.appendChild(i)}};a("label",function(t){va=
r =
e=3Dt.element.parentNode;if(e&&/pre/i.test(e.nodeName)&&e.hasAttribute("d=
ata-label")){var =
n,a,o=3De.getAttribute("data-label");try{a=3Ddocument.querySelector("temp=
late#"+o)}catch(r){}return =
a?n=3Da.content:(e.hasAttribute("data-url")?(n=3Ddocument.createElement("=
a"),n.href=3De.getAttribute("data-url")):n=3Ddocument.createElement("span=
"),n.textContent=3Do),n}}),Prism.hooks.add("complete",o)}}();=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/jquery.tinyscrollbar.js

;(function(factory) {=0A=
    if (typeof define =3D=3D=3D 'function' && define.amd) {=0A=
        define(['jquery'], factory);=0A=
    }=0A=
    else if (typeof exports =3D=3D=3D 'object') {=0A=
        module.exports =3D factory(require("jquery"));=0A=
    }=0A=
    else {=0A=
        factory(jQuery);=0A=
    }=0A=
}=0A=
(function($) {=0A=
    "use strict";=0A=
=0A=
    var pluginName =3D "tinyscrollbar"=0A=
    ,   defaults =3D {=0A=
            axis : 'y'=0A=
        ,   wheel : true=0A=
        ,   wheelSpeed : 40=0A=
        ,   wheelLock : true=0A=
        ,   touchLock : true=0A=
        ,   trackSize : false=0A=
        ,   thumbSize : false=0A=
        ,   thumbSizeMin : 20=0A=
        }=0A=
    ;=0A=
=0A=
    function Plugin($container, options) {=0A=
        /**=0A=
         * The options of the carousel extend with the defaults.=0A=
         *=0A=
         * @property options=0A=
         * @type Object=0A=
         */=0A=
        this.options =3D $.extend({}, defaults, options);=0A=
=0A=
        /**=0A=
         * @property _defaults=0A=
         * @type Object=0A=
         * @private=0A=
         * @default defaults=0A=
         */=0A=
        this._defaults =3D defaults;=0A=
=0A=
        /**=0A=
         * @property _name=0A=
         * @type String=0A=
         * @private=0A=
         * @final=0A=
         * @default 'tinyscrollbar'=0A=
         */=0A=
        this._name =3D pluginName;=0A=
=0A=
        var self =3D this=0A=
        ,   $viewport =3D $container.find(".viewport")=0A=
        ,   $overview =3D $container.find(".overview")=0A=
        ,   $scrollbar =3D $container.find(".scrollbar")=0A=
        ,   $track =3D $scrollbar.find(".track")=0A=
        ,   $thumb =3D $scrollbar.find(".thumb")=0A=
=0A=
        ,   hasTouchEvents =3D ("ontouchstart" in =
document.documentElement)=0A=
        ,   wheelEvent =3D "onwheel" in document.createElement("div") ? =
"wheel" : // Modern browsers support "wheel"=0A=
                         document.onmousewheel !=3D=3D undefined ? =
"mousewheel" : // Webkit and IE support at least "mousewheel"=0A=
                         "DOMMouseScroll" // let's assume that remaining =
browsers are older Firefox=0A=
        ,   isHorizontal =3D this.options.axis =3D=3D=3D 'x'=0A=
        ,   sizeLabel =3D isHorizontal ? "width" : "height"=0A=
        ,   posiLabel =3D isHorizontal ? "left" : "top"=0A=
=0A=
        ,   mousePosition =3D 0=0A=
        ;=0A=
=0A=
        /**=0A=
         * The position of the content relative to the viewport.=0A=
         *=0A=
         * @property contentPosition=0A=
         * @type Number=0A=
         */=0A=
        this.contentPosition =3D 0;=0A=
=0A=
        /**=0A=
         * The height or width of the viewport.=0A=
         *=0A=
         * @property viewportSize=0A=
         * @type Number=0A=
         */=0A=
        this.viewportSize =3D 0;=0A=
=0A=
        /**=0A=
         * The height or width of the content.=0A=
         *=0A=
         * @property contentSize=0A=
         * @type Number=0A=
         */=0A=
        this.contentSize =3D 0;=0A=
=0A=
        /**=0A=
         * The ratio of the content size relative to the viewport size.=0A=
         *=0A=
         * @property contentRatio=0A=
         * @type Number=0A=
         */=0A=
        this.contentRatio =3D 0;=0A=
=0A=
        /**=0A=
         * The height or width of the content.=0A=
         *=0A=
         * @property trackSize=0A=
         * @type Number=0A=
         */=0A=
        this.trackSize =3D 0;=0A=
=0A=
        /**=0A=
         * The size of the track relative to the size of the content.=0A=
         *=0A=
         * @property trackRatio=0A=
         * @type Number=0A=
         */=0A=
        this.trackRatio =3D 0;=0A=
=0A=
        /**=0A=
         * The height or width of the thumb.=0A=
         *=0A=
         * @property thumbSize=0A=
         * @type Number=0A=
         */=0A=
        this.thumbSize =3D 0;=0A=
=0A=
        /**=0A=
         * The position of the thumb relative to the track.=0A=
         *=0A=
         * @property thumbPosition=0A=
         * @type Number=0A=
         */=0A=
        this.thumbPosition =3D 0;=0A=
=0A=
        /**=0A=
         * Will be true if there is content to scroll.=0A=
         *=0A=
         * @property hasContentToSroll=0A=
         * @type Boolean=0A=
         */=0A=
        this.hasContentToSroll =3D false;=0A=
=0A=
        /**=0A=
         * @method _initialize=0A=
         * @private=0A=
         */=0A=
        function _initialize() {=0A=
            self.update();=0A=
            _setEvents();=0A=
=0A=
            return self;=0A=
        }=0A=
=0A=
        /**=0A=
         * You can use the update method to adjust the scrollbar to new =
content or to move the scrollbar to a certain point.=0A=
         *=0A=
         * @method update=0A=
         * @chainable=0A=
         * @param {Number|String} [scrollTo] Number in pixels or the =
values "relative" or "bottom". If you dont specify a parameter it will =
default to top=0A=
         */=0A=
        this.update =3D function(scrollTo) {=0A=
            var sizeLabelCap =3D sizeLabel.charAt(0).toUpperCase() + =
sizeLabel.slice(1).toLowerCase();=0A=
            this.viewportSize =3D $viewport[0]['offset'+ sizeLabelCap];=0A=
            this.contentSize =3D $overview[0]['scroll'+ sizeLabelCap];=0A=
            this.contentRatio =3D this.viewportSize / this.contentSize;=0A=
            this.trackSize =3D this.options.trackSize || =
this.viewportSize;=0A=
            this.thumbSize =3D Math.min(this.trackSize, =
Math.max(this.options.thumbSizeMin, (this.options.thumbSize || =
(this.trackSize * this.contentRatio))));=0A=
            this.trackRatio =3D (this.contentSize - this.viewportSize) / =
(this.trackSize - this.thumbSize);=0A=
            this.hasContentToSroll =3D this.contentRatio < 1;=0A=
=0A=
            $scrollbar.toggleClass("disable", !this.hasContentToSroll);=0A=
=0A=
            switch (scrollTo) {=0A=
                case "bottom":=0A=
                    this.contentPosition =3D Math.max(this.contentSize - =
this.viewportSize, 0);=0A=
                    break;=0A=
=0A=
                case "relative":=0A=
                    this.contentPosition =3D =
Math.min(Math.max(this.contentSize - this.viewportSize, 0), Math.max(0, =
this.contentPosition));=0A=
                    break;=0A=
=0A=
                default:=0A=
                    this.contentPosition =3D parseInt(scrollTo, 10) || 0;=0A=
            }=0A=
=0A=
            this.thumbPosition =3D this.contentPosition / =
this.trackRatio;=0A=
=0A=
            _setCss();=0A=
=0A=
            return self;=0A=
        };=0A=
=0A=
        /**=0A=
         * @method _setCss=0A=
         * @private=0A=
         */=0A=
        function _setCss() {=0A=
            $thumb.css(posiLabel, self.thumbPosition);=0A=
            $overview.css(posiLabel, -self.contentPosition);=0A=
            $scrollbar.css(sizeLabel, self.trackSize);=0A=
            $track.css(sizeLabel, self.trackSize);=0A=
            $thumb.css(sizeLabel, self.thumbSize);=0A=
        }=0A=
=0A=
        /**=0A=
         * @method _setEvents=0A=
         * @private=0A=
         */=0A=
        function _setEvents() {=0A=
            if(hasTouchEvents) {=0A=
                $viewport[0].ontouchstart =3D function(event) {=0A=
                    if(1 =3D=3D=3D event.touches.length) {=0A=
                        event.stopPropagation();=0A=
=0A=
                        _start(event.touches[0]);=0A=
                    }=0A=
                };=0A=
            }=0A=
            $thumb.bind("mousedown", function(event){=0A=
                event.stopPropagation();=0A=
                _start(event);=0A=
            });=0A=
            $track.bind("mousedown", function(event){=0A=
                _start(event, true);=0A=
            });=0A=
=0A=
            $(window).resize(function() {=0A=
                self.update("relative");=0A=
            });=0A=
=0A=
            if(self.options.wheel && window.addEventListener) {=0A=
                $container[0].addEventListener(wheelEvent, _wheel, =
false);=0A=
            }=0A=
            else if(self.options.wheel) {=0A=
                $container[0].onmousewheel =3D _wheel;=0A=
            }=0A=
        }=0A=
=0A=
        /**=0A=
         * @method _isAtBegin=0A=
         * @private=0A=
         */=0A=
        function _isAtBegin() {=0A=
            return self.contentPosition > 0;=0A=
        }=0A=
=0A=
        /**=0A=
         * @method _isAtEnd=0A=
         * @private=0A=
         */=0A=
        function _isAtEnd() {=0A=
            =0A=
            return self.contentPosition <=3D (self.contentSize - =
self.viewportSize) - 5;=0A=
        }=0A=
=0A=
        /**=0A=
         * @method _start=0A=
         * @private=0A=
         */=0A=
        function _start(event, gotoMouse) {=0A=
            if(self.hasContentToSroll) {=0A=
                $("body").addClass("noSelect");=0A=
=0A=
                mousePosition =3D gotoMouse ? $thumb.offset()[posiLabel] =
: (isHorizontal ? event.pageX : event.pageY);=0A=
=0A=
                if(hasTouchEvents) {=0A=
                    document.ontouchmove =3D function(event) {=0A=
                        if(self.options.touchLock || _isAtBegin() && =
_isAtEnd()) {=0A=
                            event.preventDefault();=0A=
                        }=0A=
                        event.touches[0][pluginName + "Touch"] =3D 1;=0A=
                        _drag(event.touches[0]);=0A=
                    };=0A=
                    document.ontouchend =3D _end;=0A=
                }=0A=
                $(document).bind("mousemove", _drag);=0A=
                $(document).bind("mouseup", _end);=0A=
                $thumb.bind("mouseup", _end);=0A=
                $track.bind("mouseup", _end);=0A=
=0A=
                _drag(event);=0A=
            }=0A=
        }=0A=
=0A=
        /**=0A=
         * @method _wheel=0A=
         * @private=0A=
         */=0A=
        function _wheel(event) {=0A=
            if(self.hasContentToSroll) {=0A=
                // Trying to make sense of all the different wheel event =
implementations..=0A=
                //=0A=
                var evntObj =3D event || window.event=0A=
                ,   wheelDelta =3D -(evntObj.deltaY || evntObj.detail || =
(-1 / 3 * evntObj.wheelDelta)) / 40=0A=
                ,   multiply =3D (evntObj.deltaMode =3D=3D=3D 1) ? =
self.options.wheelSpeed : 1=0A=
                ;=0A=
=0A=
                self.contentPosition -=3D wheelDelta * multiply * =
self.options.wheelSpeed;=0A=
                self.contentPosition =3D Math.min((self.contentSize - =
self.viewportSize), Math.max(0, self.contentPosition));=0A=
                self.thumbPosition =3D self.contentPosition / =
self.trackRatio;=0A=
=0A=
                /**=0A=
                 * The move event will trigger when the carousel slides =
to a new slide.=0A=
                 *=0A=
                 * @event move=0A=
                 */=0A=
                $container.trigger("move");=0A=
=0A=
                $thumb.css(posiLabel, self.thumbPosition);=0A=
                $overview.css(posiLabel, -self.contentPosition);=0A=
=0A=
                if(self.options.wheelLock || _isAtBegin() && _isAtEnd()) =
{=0A=
                                =0A=
                    evntObj =3D $.event.fix(evntObj);=0A=
                    evntObj.preventDefault();=0A=
                }=0A=
                if(!_isAtEnd()){=0A=
                    self.addcontents(self);=0A=
                }=0A=
            }=0A=
            event.stopPropagation();=0A=
        }=0A=
        //=E5=A4=96=E9=9D=A2=E5=8F=AF=E4=BB=A5=E9=87=8D=E5=86=99=0A=
        this.addcontents =3D function(self) {=0A=
            =0A=
        };=0A=
        /**=0A=
         * @method _drag=0A=
         * @private=0A=
         */=0A=
        function _drag(event) {=0A=
            =0A=
            if(self.hasContentToSroll) {=0A=
                var mousePositionNew =3D isHorizontal ? event.pageX : =
event.pageY=0A=
                ,   thumbPositionDelta =3D event[pluginName + "Touch"] ? =0A=
                        (mousePosition - mousePositionNew) : =
(mousePositionNew - mousePosition)=0A=
                ,   thumbPositionNew =3D Math.min((self.trackSize - =
self.thumbSize), Math.max(0, self.thumbPosition + thumbPositionDelta))=0A=
                ;=0A=
=0A=
                self.contentPosition =3D thumbPositionNew * =
self.trackRatio;=0A=
=0A=
                $container.trigger("move");=0A=
=0A=
                $thumb.css(posiLabel, thumbPositionNew);=0A=
                $overview.css(posiLabel, -self.contentPosition);=0A=
            }=0A=
        }=0A=
=0A=
        /**=0A=
         * @method _end=0A=
         * @private=0A=
         */=0A=
        function _end() {=0A=
            self.thumbPosition =3D parseInt($thumb.css(posiLabel), 10) =
|| 0;=0A=
=0A=
            $("body").removeClass("noSelect");=0A=
            $(document).unbind("mousemove", _drag);=0A=
            $(document).unbind("mouseup", _end);=0A=
            $thumb.unbind("mouseup", _end);=0A=
            $track.unbind("mouseup", _end);=0A=
            document.ontouchmove =3D document.ontouchend =3D null;=0A=
        }=0A=
=0A=
        return _initialize();=0A=
    }=0A=
=0A=
    /**=0A=
    * @class tinyscrollbar=0A=
    * @constructor=0A=
    * @param {Object} options=0A=
        @param {String} [options.axis=3D'y'] Vertical or horizontal =
scroller? ( x || y ).=0A=
        @param {Boolean} [options.wheel=3Dtrue] Enable or disable the =
mousewheel.=0A=
        @param {Boolean} [options.wheelSpeed=3D40] How many pixels must =
the mouswheel scroll at a time.=0A=
        @param {Boolean} [options.wheelLock=3Dtrue] Lock default window =
wheel scrolling when there is no more content to scroll.=0A=
        @param {Number} [options.touchLock=3Dtrue] Lock default window =
touch scrolling when there is no more content to scroll.=0A=
        @param {Boolean|Number} [options.trackSize=3Dfalse] Set the size =
of the scrollbar to auto(false) or a fixed number.=0A=
        @param {Boolean|Number} [options.thumbSize=3Dfalse] Set the size =
of the thumb to auto(false) or a fixed number=0A=
        @param {Boolean} [options.thumbSizeMin=3D20] Minimum thumb size.=0A=
    */=0A=
    $.fn[pluginName] =3D function(options) {=0A=
        return this.each(function() {=0A=
            if(!$.data(this, "plugin_" + pluginName)) {=0A=
                $.data(this, "plugin_" + pluginName, new Plugin($(this), =
options));=0A=
            }=0A=
        });=0A=
    };=0A=
}));=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/shCores.js?v=1.0.0.1

//=E7=BC=96=E8=BE=91=E5=99=A8=E5=B1=95=E7=A4=BA=E9=A1=B5=E9=9D=A2=E5=86=85=
=E5=AE=B9=E8=A7=A3=E6=9E=90=EF=BC=8C=E5=8A=A0=E8=BD=BD=E8=B5=84=E6=BA=90=E5=
=B7=A5=E5=85=B7=0A=
//by zhanyi=0A=
function uParse(selector,opt){=0A=
    //=E9=9C=80=E8=A6=81=E7=9A=84=E5=B7=A5=E5=85=B7=E6=96=B9=E6=B3=95=0A=
    var ie =3D !!window.ActiveXObject,=0A=
        cssRule =3D ie ? function(key,style,doc){=0A=
            var indexList,index;=0A=
            doc =3D doc || document;=0A=
            if(doc.indexList){=0A=
                indexList =3D doc.indexList;=0A=
            }else{=0A=
                indexList =3D doc.indexList =3D  {};=0A=
            }=0A=
            var sheetStyle;=0A=
            if(!indexList[key]){=0A=
                if(style =3D=3D=3D undefined){=0A=
                    return ''=0A=
                }=0A=
                sheetStyle =3D doc.createStyleSheet('',index =3D =
doc.styleSheets.length);=0A=
                indexList[key] =3D index;=0A=
            }else{=0A=
                sheetStyle =3D doc.styleSheets[indexList[key]];=0A=
            }=0A=
            if(style =3D=3D=3D undefined){=0A=
                return sheetStyle.cssText=0A=
            }=0A=
            sheetStyle.cssText =3D sheetStyle.cssText + '\n' + (style || =
'')=0A=
        } : function(key,style,doc){=0A=
            doc =3D doc || document;=0A=
            var head =3D doc.getElementsByTagName('head')[0],node;=0A=
            if(!(node =3D doc.getElementById(key))){=0A=
                if(style =3D=3D=3D undefined){=0A=
                    return ''=0A=
                }=0A=
                node =3D doc.createElement('style');=0A=
                node.id =3D key;=0A=
                head.appendChild(node)=0A=
            }=0A=
            if(style =3D=3D=3D undefined){=0A=
                return node.innerHTML=0A=
            }=0A=
            if(style !=3D=3D ''){=0A=
                node.innerHTML =3D node.innerHTML + '\n' + style;=0A=
            }else{=0A=
                head.removeChild(node)=0A=
            }=0A=
        },=0A=
        domReady =3D function (onready) {=0A=
            var doc =3D window.document;=0A=
            if (doc.readyState =3D=3D=3D "complete") {=0A=
                onready();=0A=
            }else{=0A=
                if (ie) {=0A=
                    (function () {=0A=
                        if (doc.isReady) return;=0A=
                        try {=0A=
                            doc.documentElement.doScroll("left");=0A=
                        } catch (error) {=0A=
                            setTimeout(arguments.callee, 0);=0A=
                            return;=0A=
                        }=0A=
                        onready();=0A=
                    })();=0A=
                    window.attachEvent('onload', function(){=0A=
                        onready()=0A=
                    });=0A=
                } else {=0A=
                    doc.addEventListener("DOMContentLoaded", function () =
{=0A=
                        doc.removeEventListener("DOMContentLoaded", =
arguments.callee, false);=0A=
                        onready();=0A=
                    }, false);=0A=
                    window.addEventListener('load', =
function(){onready()}, false);=0A=
                }=0A=
            }=0A=
=0A=
        },=0A=
        _each =3D function(obj, iterator, context) {=0A=
            if (obj =3D=3D null) return;=0A=
            if (obj.length =3D=3D=3D +obj.length) {=0A=
                for (var i =3D 0, l =3D obj.length; i < l; i++) {=0A=
                    if(iterator.call(context, obj[i], i, obj) =3D=3D=3D =
false)=0A=
                        return false;=0A=
                }=0A=
            } else {=0A=
                for (var key in obj) {=0A=
                    if (obj.hasOwnProperty(key)) {=0A=
                        if(iterator.call(context, obj[key], key, obj) =
=3D=3D=3D false)=0A=
                            return false;=0A=
                    }=0A=
                }=0A=
            }=0A=
        },=0A=
        inArray =3D function(arr,item){=0A=
            var index =3D -1;=0A=
            _each(arr,function(v,i){=0A=
                if(v =3D=3D=3D item){=0A=
                    index =3D i;=0A=
                    return false;=0A=
                }=0A=
            });=0A=
            return index;=0A=
        },=0A=
        pushItem =3D function(arr,item){=0A=
            if(inArray(arr,item)=3D=3D-1){=0A=
                arr.push(item)=0A=
            }=0A=
        },=0A=
        loadFile =3D function () {=0A=
            var tmpList =3D [];=0A=
            function getItem(doc,obj){=0A=
                try{=0A=
                    for(var i=3D 0,ci;ci=3DtmpList[i++];){=0A=
                        if(ci.doc =3D=3D=3D doc && ci.url =3D=3D =
(obj.src || obj.href)){=0A=
                            return ci;=0A=
                        }=0A=
                    }=0A=
                }catch(e){=0A=
                    return null;=0A=
                }=0A=
=0A=
            }=0A=
            return function (doc, obj, fn) {=0A=
                var item =3D getItem(doc,obj);=0A=
                if (item) {=0A=
                    if(item.ready){=0A=
                        fn && fn();=0A=
                    }else{=0A=
                        item.funs.push(fn)=0A=
                    }=0A=
                    return;=0A=
                }=0A=
                tmpList.push({=0A=
                    doc:doc,=0A=
                    url:obj.src||obj.href,=0A=
                    funs:[fn]=0A=
                });=0A=
                if (!doc.body) {=0A=
                    var html =3D [];=0A=
                    for(var p in obj){=0A=
                        if(p =3D=3D 'tag')continue;=0A=
                        html.push(p + '=3D"' + obj[p] + '"')=0A=
                    }=0A=
                    doc.write('<' + obj.tag + ' ' + html.join(' ') + ' =
></'+obj.tag+'>');=0A=
                    return;=0A=
                }=0A=
                if (obj.id && doc.getElementById(obj.id)) {=0A=
                    return;=0A=
                }=0A=
                var element =3D doc.createElement(obj.tag);=0A=
                delete obj.tag;=0A=
                for (var p in obj) {=0A=
                    element.setAttribute(p, obj[p]);=0A=
                }=0A=
                element.onload =3D element.onreadystatechange =3D =
function () {=0A=
                    if (!this.readyState || =
/loaded|complete/.test(this.readyState)) {=0A=
                        item =3D getItem(doc,obj);=0A=
                        if (item.funs.length > 0) {=0A=
                            item.ready =3D 1;=0A=
                            for (var fi; fi =3D item.funs.pop();) {=0A=
                                fi();=0A=
                            }=0A=
                        }=0A=
                        element.onload =3D element.onreadystatechange =
=3D null;=0A=
                    }=0A=
                };=0A=
                element.onerror =3D function(){=0A=
                    throw Error('The load '+(obj.href||obj.src)+' =
fails,check the url')=0A=
                };=0A=
                doc.getElementsByTagName("head")[0].appendChild(element);=0A=
            }=0A=
        }();=0A=
=0A=
=0A=
    //=E9=BB=98=E8=AE=A4=E7=9A=84=E9=85=8D=E7=BD=AE=E9=A1=B9=E7=9B=AE=0A=
    var defaultOption =3D{=0A=
        liiconpath : 'http://bs.baidu.com/listicon/',=0A=
        listDefaultPaddingLeft : '20',=0A=
        'highlightJsUrl':'',=0A=
        'highlightCssUrl':'',=0A=
        customRule:function(){}=0A=
    };=0A=
    if(opt){=0A=
        for(var p in opt){=0A=
            defaultOption[p] =3D opt[p]=0A=
        }=0A=
    }=0A=
    domReady(function(){=0A=
        //=E5=A4=84=E7=90=86=E5=AE=B9=E5=99=A8=0A=
        var contents;=0A=
        if(document.querySelectorAll){=0A=
            contents =3D document.querySelectorAll(selector)=0A=
        }else{=0A=
            if(/^#/.test(selector)){=0A=
                contents =3D =
[document.getElementById(selector.replace(/^#/,''))]=0A=
            }else if(/^\./.test(selector)){=0A=
                var contents =3D [];=0A=
                _each(document.getElementsByTagName('*'),function(node){=0A=
                    if(node.className && new RegExp('\\b' + =
selector.replace(/^\./,'') + '\\b','i').test(node.className)){=0A=
                        contents.push(node)=0A=
                    }=0A=
                })=0A=
            }else{=0A=
                contents =3D document.getElementsByTagName(selector)=0A=
            }=0A=
        }=0A=
        _each(contents,function(content){=0A=
            if(content.tagName.toLowerCase() =3D=3D 'textarea'){=0A=
                var tmpNode =3D document.createElement('div');=0A=
                if(/^#/.test(selector)){=0A=
                    tmpNode.id =3D selector.replace(/^#/,'')=0A=
                }else if(/^\./.test(selector)){=0A=
                    tmpNode.className =3D selector.replace(/^\./,'')=0A=
                }=0A=
                content.parentNode.insertBefore(tmpNode,content);=0A=
                tmpNode.innerHTML =3D content.value;=0A=
                content.parentNode.removeChild(content);=0A=
                content =3D tmpNode;=0A=
            }=0A=
=0A=
            function checkList(nodes){=0A=
                var customCss =3D [],=0A=
                    customStyle =3D {=0A=
                        'cn'    :   'cn-1-',=0A=
                        'cn1'   :   'cn-2-',=0A=
                        'cn2'   :   'cn-3-',=0A=
                        'num'   :   'num-1-',=0A=
                        'num1'  :   'num-2-',=0A=
                        'num2'  :   'num-3-',=0A=
                        'dash'  :   'dash',=0A=
                        'dot'   :   'dot'=0A=
                    };=0A=
                _each(nodes,function(list){=0A=
                    if(list.className && =
/custom_/i.test(list.className)){=0A=
                        var listStyle =3D =
list.className.match(/custom_(\w+)/)[1];=0A=
                        if(listStyle =3D=3D 'dash' || listStyle =3D=3D =
'dot'){=0A=
                            pushItem(customCss,selector +' li.list-' + =
customStyle[listStyle] + '{background-image:url(' + =
defaultOption.liiconpath +customStyle[listStyle]+'.gif)}');=0A=
                            pushItem(customCss,selector +' =
ul.custom_'+listStyle+'{list-style:none;} '+ selector +' =
ul.custom_'+listStyle+' li{background-position:0 =
3px;background-repeat:no-repeat}');=0A=
=0A=
                        }else{=0A=
                            var index =3D 1;=0A=
                            _each(list.childNodes,function(li){=0A=
                                if(li.tagName =3D=3D 'LI'){=0A=
                                    pushItem(customCss,selector + ' =
li.list-' + customStyle[listStyle] + index + '{background-image:url(' + =
defaultOption.liiconpath  + 'list-'+customStyle[listStyle] +index + =
'.gif)}');=0A=
                                    index++;=0A=
                                }=0A=
                            });=0A=
                            pushItem(customCss,selector + ' =
ol.custom_'+listStyle+'{list-style:none;}'+selector+' =
ol.custom_'+listStyle+' li{background-position:0 =
3px;background-repeat:no-repeat}');=0A=
                        }=0A=
                        switch(listStyle){=0A=
                            case 'cn':=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-1{padding-left:25px}');=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-2{padding-left:40px}');=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-3{padding-left:55px}');=0A=
                                break;=0A=
                            case 'cn1':=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-1{padding-left:30px}');=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-2{padding-left:40px}');=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-3{padding-left:55px}');=0A=
                                break;=0A=
                            case 'cn2':=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-1{padding-left:40px}');=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-2{padding-left:55px}');=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-3{padding-left:68px}');=0A=
                                break;=0A=
                            case 'num':=0A=
                            case 'num1':=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-1{padding-left:25px}');=0A=
                                break;=0A=
                            case 'num2':=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-1{padding-left:35px}');=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft-2{padding-left:40px}');=0A=
                                break;=0A=
                            case 'dash':=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft{padding-left:35px}');=0A=
                                break;=0A=
                            case 'dot':=0A=
                                pushItem(customCss,selector + ' =
li.list-'+listStyle+'-paddingleft{padding-left:20px}');=0A=
                        }=0A=
                    }=0A=
                });=0A=
=0A=
                customCss.push(selector +' =
.list-paddingleft-1{padding-left:0}');=0A=
                customCss.push(selector +' =
.list-paddingleft-2{padding-left:'+defaultOption.listDefaultPaddingLeft+'=
px}');=0A=
                customCss.push(selector +' =
.list-paddingleft-3{padding-left:'+defaultOption.listDefaultPaddingLeft*2=
+'px}');=0A=
                =
//=E5=A6=82=E6=9E=9C=E4=B8=8D=E7=BB=99=E5=AE=BD=E5=BA=A6=E4=BC=9A=E5=9C=A8=
=E8=87=AA=E5=AE=9A=E5=BA=94=E6=A0=B7=E5=BC=8F=E9=87=8C=E5=87=BA=E7=8E=B0=E6=
=BB=9A=E5=8A=A8=E6=9D=A1=0A=
                cssRule('list', selector +' ol,'+selector +' =
ul{margin:0;pading:0;}'+customCss.join('\n'), document);=0A=
            }=0A=
            //=E8=A7=A3=E6=9E=90=E5=86=85=E5=AE=B9=0A=
            var needParseTagName =3D {=0A=
                'table' : function(){=0A=
                    cssRule('table',=0A=
                        selector +' table.noBorderTable td,'+selector+' =
table.noBorderTable th,'+selector+' table.noBorderTable =
caption{border:1px dashed #ddd !important}' +=0A=
                            =
//=E6=8F=92=E5=85=A5=E7=9A=84=E8=A1=A8=E6=A0=BC=E7=9A=84=E9=BB=98=E8=AE=A4=
=E6=A0=B7=E5=BC=8F=0A=
                            selector +' =
table{margin-bottom:10px;border-collapse:collapse;display:table;}' +=0A=
                            selector +' td,'+selector+' th{ =
background:white; padding: 5px 10px;border: 1px solid #DDD;}' +=0A=
                            selector +' caption{border:1px dashed =
#DDD;border-bottom:0;padding:3px;text-align:center;}' +=0A=
                            selector +' th{border-top:2px solid =
#BBB;background:#F7F7F7;}' +=0A=
                            selector +' td p{margin:0;padding:0;}',=0A=
                        document);=0A=
                },=0A=
                'ol' : checkList,=0A=
                'ul' : checkList,=0A=
                'pre': function(nodes){=0A=
                    =
//=E9=81=BF=E5=85=8D=E9=87=8D=E5=A4=8D=E5=8A=A0=E8=BD=BD=E9=AB=98=E4=BA=AE=
=E6=96=87=E4=BB=B6=0A=
                    if(typeof XRegExp =3D=3D "undefined"){=0A=
                        loadFile(document,{=0A=
                            id : "syntaxhighlighter_js",=0A=
                            src : defaultOption.highlightJsUrl,=0A=
                            tag : "script",=0A=
                            type : "text/javascript",=0A=
                            defer : "defer"=0A=
                        },function(){=0A=
                            _each(nodes,function(pi){=0A=
                                if(/brush/i.test(pi.className)){=0A=
                                    SyntaxHighlighter.highlight(pi);=0A=
                                    var tables =3D =
document.getElementsByTagName('table');=0A=
                                       for(var t=3D =
0,ti;ti=3Dtables[t++];){=0A=
                                           =
if(/SyntaxHighlighter/i.test(ti.className)){=0A=
                                               var tds =3D =
ti.getElementsByTagName('td');=0A=
                                               for(var =
i=3D0,li,ri;li=3Dtds[0].childNodes[i];i++){=0A=
                                                   ri =3D =
tds[1].firstChild.childNodes[i];=0A=
                                                   if(ri){=0A=
                                                      ri.style.height =
=3D li.style.height =3D ri.offsetHeight + 'px';=0A=
                                                   }=0A=
                                               }=0A=
                                           }=0A=
                                       }=0A=
                                }=0A=
                            });=0A=
                        });=0A=
                    }=0A=
                    =
if(!document.getElementById("syntaxhighlighter_css")){=0A=
                        loadFile(document,{=0A=
                            id : "syntaxhighlighter_css",=0A=
                            tag : "link",=0A=
                            rel : "stylesheet",=0A=
                            type : "text/css",=0A=
                            href : defaultOption.highlightCssUrl=0A=
                        });=0A=
                    }=0A=
=0A=
                }=0A=
            };=0A=
            =
//=E5=85=88=E6=8F=92=E5=85=A5=E9=BB=98=E8=AE=A4=E7=9A=84=E5=B1=9E=E6=80=A7=0A=
=0A=
            for(var tag in needParseTagName){=0A=
                var nodes =3D content.getElementsByTagName(tag);=0A=
                if(nodes.length){=0A=
                    needParseTagName[tag](nodes)=0A=
                }=0A=
            }=0A=
            defaultOption.customRule(content);=0A=
        });=0A=
=0A=
=0A=
=0A=
    })=0A=
};=0A=
/**/=0A=
// XRegExp 1.5.1=0A=
// (c) 2007-2012 Steven Levithan=0A=
// MIT License=0A=
// <http://xregexp.com>=0A=
// Provides an augmented, extensible, cross-browser implementation of =
regular expressions,=0A=
// including support for additional syntax, flags, and methods=0A=
=0A=
var XRegExp;=0A=
=0A=
if (XRegExp) {=0A=
    // Avoid running twice, since that would break references to native =
globals=0A=
    throw Error("can't load XRegExp twice in the same frame");=0A=
}=0A=
=0A=
// Run within an anonymous function to protect variables and avoid new =
globals=0A=
(function (undefined) {=0A=
=0A=
    //---------------------------------=0A=
    //  Constructor=0A=
    //---------------------------------=0A=
=0A=
    // Accepts a pattern and flags; returns a new, extended `RegExp` =
object. Differs from a native=0A=
    // regular expression in that additional syntax and flags are =
supported and cross-browser=0A=
    // syntax inconsistencies are ameliorated. `XRegExp(/regex/)` clones =
an existing regex and=0A=
    // converts to type XRegExp=0A=
    XRegExp =3D function (pattern, flags) {=0A=
        var output =3D [],=0A=
            currScope =3D XRegExp.OUTSIDE_CLASS,=0A=
            pos =3D 0,=0A=
            context, tokenResult, match, chr, regex;=0A=
=0A=
        if (XRegExp.isRegExp(pattern)) {=0A=
            if (flags !=3D=3D undefined)=0A=
                throw TypeError("can't supply flags when constructing =
one RegExp from another");=0A=
            return clone(pattern);=0A=
        }=0A=
        // Tokens become part of the regex construction process, so =
protect against infinite=0A=
        // recursion when an XRegExp is constructed within a token =
handler or trigger=0A=
        if (isInsideConstructor)=0A=
            throw Error("can't call the XRegExp constructor within token =
definition functions");=0A=
=0A=
        flags =3D flags || "";=0A=
        context =3D { // `this` object for custom tokens=0A=
            hasNamedCapture: false,=0A=
            captureNames: [],=0A=
            hasFlag: function (flag) {return flags.indexOf(flag) > -1;},=0A=
            setFlag: function (flag) {flags +=3D flag;}=0A=
        };=0A=
=0A=
        while (pos < pattern.length) {=0A=
            // Check for custom tokens at the current position=0A=
            tokenResult =3D runTokens(pattern, pos, currScope, context);=0A=
=0A=
            if (tokenResult) {=0A=
                output.push(tokenResult.output);=0A=
                pos +=3D (tokenResult.match[0].length || 1);=0A=
            } else {=0A=
                // Check for native multicharacter metasequences =
(excluding character classes) at=0A=
                // the current position=0A=
                if (match =3D nativ.exec.call(nativeTokens[currScope], =
pattern.slice(pos))) {=0A=
                    output.push(match[0]);=0A=
                    pos +=3D match[0].length;=0A=
                } else {=0A=
                    chr =3D pattern.charAt(pos);=0A=
                    if (chr =3D=3D=3D "[")=0A=
                        currScope =3D XRegExp.INSIDE_CLASS;=0A=
                    else if (chr =3D=3D=3D "]")=0A=
                        currScope =3D XRegExp.OUTSIDE_CLASS;=0A=
                    // Advance position one character=0A=
                    output.push(chr);=0A=
                    pos++;=0A=
                }=0A=
            }=0A=
        }=0A=
=0A=
        regex =3D RegExp(output.join(""), nativ.replace.call(flags, =
flagClip, ""));=0A=
        regex._xregexp =3D {=0A=
            source: pattern,=0A=
            captureNames: context.hasNamedCapture ? context.captureNames =
: null=0A=
        };=0A=
        return regex;=0A=
    };=0A=
=0A=
=0A=
    //---------------------------------=0A=
    //  Public properties=0A=
    //---------------------------------=0A=
=0A=
    XRegExp.version =3D "1.5.1";=0A=
=0A=
    // Token scope bitflags=0A=
    XRegExp.INSIDE_CLASS =3D 1;=0A=
    XRegExp.OUTSIDE_CLASS =3D 2;=0A=
=0A=
=0A=
    //---------------------------------=0A=
    //  Private variables=0A=
    //---------------------------------=0A=
=0A=
    var replacementToken =3D /\$(?:(\d\d?|[$&`'])|{([$\w]+)})/g,=0A=
        flagClip =3D /[^gimy]+|([\s\S])(?=3D[\s\S]*\1)/g, // Nonnative =
and duplicate flags=0A=
        quantifier =3D /^(?:[?*+]|{\d+(?:,\d*)?})\??/,=0A=
        isInsideConstructor =3D false,=0A=
        tokens =3D [],=0A=
    // Copy native globals for reference ("native" is an ES3 reserved =
keyword)=0A=
        nativ =3D {=0A=
            exec: RegExp.prototype.exec,=0A=
            test: RegExp.prototype.test,=0A=
            match: String.prototype.match,=0A=
            replace: String.prototype.replace,=0A=
            split: String.prototype.split=0A=
        },=0A=
        compliantExecNpcg =3D nativ.exec.call(/()??/, "")[1] =3D=3D=3D =
undefined, // check `exec` handling of nonparticipating capturing groups=0A=
        compliantLastIndexIncrement =3D function () {=0A=
            var x =3D /^/g;=0A=
            nativ.test.call(x, "");=0A=
            return !x.lastIndex;=0A=
        }(),=0A=
        hasNativeY =3D RegExp.prototype.sticky !=3D=3D undefined,=0A=
        nativeTokens =3D {};=0A=
=0A=
    // `nativeTokens` match native multicharacter metasequences only =
(including deprecated octals,=0A=
    // excluding character classes)=0A=
    nativeTokens[XRegExp.INSIDE_CLASS] =3D =
/^(?:\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|c[A-Z=
a-z]|[\s\S]))/;=0A=
    nativeTokens[XRegExp.OUTSIDE_CLASS] =3D =
/^(?:\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u[\dA=
-Fa-f]{4}|c[A-Za-z]|[\s\S])|\(\?[:=3D!]|[?*+]\?|{\d+(?:,\d*)?}\??)/;=0A=
=0A=
=0A=
    //---------------------------------=0A=
    //  Public methods=0A=
    //---------------------------------=0A=
=0A=
    // Lets you extend or change XRegExp syntax and create custom flags. =
This is used internally by=0A=
    // the XRegExp library and can be used to create XRegExp plugins. =
This function is intended for=0A=
    // users with advanced knowledge of JavaScript's regular expression =
syntax and behavior. It can=0A=
    // be disabled by `XRegExp.freezeTokens`=0A=
    XRegExp.addToken =3D function (regex, handler, scope, trigger) {=0A=
        tokens.push({=0A=
            pattern: clone(regex, "g" + (hasNativeY ? "y" : "")),=0A=
            handler: handler,=0A=
            scope: scope || XRegExp.OUTSIDE_CLASS,=0A=
            trigger: trigger || null=0A=
        });=0A=
    };=0A=
=0A=
    // Accepts a pattern and flags; returns an extended `RegExp` object. =
If the pattern and flag=0A=
    // combination has previously been cached, the cached copy is =
returned; otherwise the newly=0A=
    // created regex is cached=0A=
    XRegExp.cache =3D function (pattern, flags) {=0A=
        var key =3D pattern + "/" + (flags || "");=0A=
        return XRegExp.cache[key] || (XRegExp.cache[key] =3D =
XRegExp(pattern, flags));=0A=
    };=0A=
=0A=
    // Accepts a `RegExp` instance; returns a copy with the `/g` flag =
set. The copy has a fresh=0A=
    // `lastIndex` (set to zero). If you want to copy a regex without =
forcing the `global`=0A=
    // property, use `XRegExp(regex)`. Do not use `RegExp(regex)` =
because it will not preserve=0A=
    // special properties required for named capture=0A=
    XRegExp.copyAsGlobal =3D function (regex) {=0A=
        return clone(regex, "g");=0A=
    };=0A=
=0A=
    // Accepts a string; returns the string with regex metacharacters =
escaped. The returned string=0A=
    // can safely be used at any point within a regex to match the =
provided literal string. Escaped=0A=
    // characters are [ ] { } ( ) * + ? - . , \ ^ $ | # and whitespace=0A=
    XRegExp.escape =3D function (str) {=0A=
        return str.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");=0A=
    };=0A=
=0A=
    // Accepts a string to search, regex to search with, position to =
start the search within the=0A=
    // string (default: 0), and an optional Boolean indicating whether =
matches must start at-or-=0A=
    // after the position or at the specified position only. This =
function ignores the `lastIndex`=0A=
    // of the provided regex in its own handling, but updates the =
property for compatibility=0A=
    XRegExp.execAt =3D function (str, regex, pos, anchored) {=0A=
        var r2 =3D clone(regex, "g" + ((anchored && hasNativeY) ? "y" : =
"")),=0A=
            match;=0A=
        r2.lastIndex =3D pos =3D pos || 0;=0A=
        match =3D r2.exec(str); // Run the altered `exec` (required for =
`lastIndex` fix, etc.)=0A=
        if (anchored && match && match.index !=3D=3D pos)=0A=
            match =3D null;=0A=
        if (regex.global)=0A=
            regex.lastIndex =3D match ? r2.lastIndex : 0;=0A=
        return match;=0A=
    };=0A=
=0A=
    // Breaks the unrestorable link to XRegExp's private list of tokens, =
thereby preventing=0A=
    // syntax and flag changes. Should be run after XRegExp and any =
plugins are loaded=0A=
    XRegExp.freezeTokens =3D function () {=0A=
        XRegExp.addToken =3D function () {=0A=
            throw Error("can't run addToken after freezeTokens");=0A=
        };=0A=
    };=0A=
=0A=
    // Accepts any value; returns a Boolean indicating whether the =
argument is a `RegExp` object.=0A=
    // Note that this is also `true` for regex literals and regexes =
created by the `XRegExp`=0A=
    // constructor. This works correctly for variables created in =
another frame, when `instanceof`=0A=
    // and `constructor` checks would fail to work as intended=0A=
    XRegExp.isRegExp =3D function (o) {=0A=
        return Object.prototype.toString.call(o) =3D=3D=3D "[object =
RegExp]";=0A=
    };=0A=
=0A=
    // Executes `callback` once per match within `str`. Provides a =
simpler and cleaner way to=0A=
    // iterate over regex matches compared to the traditional approaches =
of subverting=0A=
    // `String.prototype.replace` or repeatedly calling `exec` within a =
`while` loop=0A=
    XRegExp.iterate =3D function (str, regex, callback, context) {=0A=
        var r2 =3D clone(regex, "g"),=0A=
            i =3D -1, match;=0A=
        while (match =3D r2.exec(str)) { // Run the altered `exec` =
(required for `lastIndex` fix, etc.)=0A=
            if (regex.global)=0A=
                regex.lastIndex =3D r2.lastIndex; // Doing this to =
follow expectations if `lastIndex` is checked within `callback`=0A=
            callback.call(context, match, ++i, str, regex);=0A=
            if (r2.lastIndex =3D=3D=3D match.index)=0A=
                r2.lastIndex++;=0A=
        }=0A=
        if (regex.global)=0A=
            regex.lastIndex =3D 0;=0A=
    };=0A=
=0A=
    // Accepts a string and an array of regexes; returns the result of =
using each successive regex=0A=
    // to search within the matches of the previous regex. The array of =
regexes can also contain=0A=
    // objects with `regex` and `backref` properties, in which case the =
named or numbered back-=0A=
    // references specified are passed forward to the next regex or =
returned. E.g.:=0A=
    // var xregexpImgFileNames =3D XRegExp.matchChain(html, [=0A=
    //     {regex: /<img\b([^>]+)>/i, backref: 1}, // <img> tag =
attributes=0A=
    //     {regex: XRegExp('(?ix) \\s src=3D" (?<src> [^"]+ )'), =
backref: "src"}, // src attribute values=0A=
    //     {regex: XRegExp("^http://xregexp\\.com(/[^#?]+)", "i"), =
backref: 1}, // xregexp.com paths=0A=
    //     /[^\/]+$/ // filenames (strip directory paths)=0A=
    // ]);=0A=
    XRegExp.matchChain =3D function (str, chain) {=0A=
        return function recurseChain (values, level) {=0A=
            var item =3D chain[level].regex ? chain[level] : {regex: =
chain[level]},=0A=
                regex =3D clone(item.regex, "g"),=0A=
                matches =3D [], i;=0A=
            for (i =3D 0; i < values.length; i++) {=0A=
                XRegExp.iterate(values[i], regex, function (match) {=0A=
                    matches.push(item.backref ? (match[item.backref] || =
"") : match[0]);=0A=
                });=0A=
            }=0A=
            return ((level =3D=3D=3D chain.length - 1) || =
!matches.length) ?=0A=
                matches : recurseChain(matches, level + 1);=0A=
        }([str], 0);=0A=
    };=0A=
=0A=
=0A=
    //---------------------------------=0A=
    //  New RegExp prototype methods=0A=
    //---------------------------------=0A=
=0A=
    // Accepts a context object and arguments array; returns the result =
of calling `exec` with the=0A=
    // first value in the arguments array. the context is ignored but is =
accepted for congruity=0A=
    // with `Function.prototype.apply`=0A=
    RegExp.prototype.apply =3D function (context, args) {=0A=
        return this.exec(args[0]);=0A=
    };=0A=
=0A=
    // Accepts a context object and string; returns the result of =
calling `exec` with the provided=0A=
    // string. the context is ignored but is accepted for congruity with =
`Function.prototype.call`=0A=
    RegExp.prototype.call =3D function (context, str) {=0A=
        return this.exec(str);=0A=
    };=0A=
=0A=
=0A=
    //---------------------------------=0A=
    //  Overriden native methods=0A=
    //---------------------------------=0A=
=0A=
    // Adds named capture support (with backreferences returned as =
`result.name`), and fixes two=0A=
    // cross-browser issues per ES3:=0A=
    // - Captured values for nonparticipating capturing groups should be =
returned as `undefined`,=0A=
    //   rather than the empty string.=0A=
    // - `lastIndex` should not be incremented after zero-length matches.=0A=
    RegExp.prototype.exec =3D function (str) {=0A=
        var match, name, r2, origLastIndex;=0A=
        if (!this.global)=0A=
            origLastIndex =3D this.lastIndex;=0A=
        match =3D nativ.exec.apply(this, arguments);=0A=
        if (match) {=0A=
            // Fix browsers whose `exec` methods don't consistently =
return `undefined` for=0A=
            // nonparticipating capturing groups=0A=
            if (!compliantExecNpcg && match.length > 1 && indexOf(match, =
"") > -1) {=0A=
                r2 =3D RegExp(this.source, =
nativ.replace.call(getNativeFlags(this), "g", ""));=0A=
                // Using `str.slice(match.index)` rather than `match[0]` =
in case lookahead allowed=0A=
                // matching due to characters outside the match=0A=
                nativ.replace.call((str + "").slice(match.index), r2, =
function () {=0A=
                    for (var i =3D 1; i < arguments.length - 2; i++) {=0A=
                        if (arguments[i] =3D=3D=3D undefined)=0A=
                            match[i] =3D undefined;=0A=
                    }=0A=
                });=0A=
            }=0A=
            // Attach named capture properties=0A=
            if (this._xregexp && this._xregexp.captureNames) {=0A=
                for (var i =3D 1; i < match.length; i++) {=0A=
                    name =3D this._xregexp.captureNames[i - 1];=0A=
                    if (name)=0A=
                        match[name] =3D match[i];=0A=
                }=0A=
            }=0A=
            // Fix browsers that increment `lastIndex` after zero-length =
matches=0A=
            if (!compliantLastIndexIncrement && this.global && =
!match[0].length && (this.lastIndex > match.index))=0A=
                this.lastIndex--;=0A=
        }=0A=
        if (!this.global)=0A=
            this.lastIndex =3D origLastIndex; // Fix IE, Opera bug (last =
tested IE 9.0.5, Opera 11.61 on Windows)=0A=
        return match;=0A=
    };=0A=
=0A=
    // Fix browser bugs in native method=0A=
    RegExp.prototype.test =3D function (str) {=0A=
        // Use the native `exec` to skip some processing overhead, even =
though the altered=0A=
        // `exec` would take care of the `lastIndex` fixes=0A=
        var match, origLastIndex;=0A=
        if (!this.global)=0A=
            origLastIndex =3D this.lastIndex;=0A=
        match =3D nativ.exec.call(this, str);=0A=
        // Fix browsers that increment `lastIndex` after zero-length =
matches=0A=
        if (match && !compliantLastIndexIncrement && this.global && =
!match[0].length && (this.lastIndex > match.index))=0A=
            this.lastIndex--;=0A=
        if (!this.global)=0A=
            this.lastIndex =3D origLastIndex; // Fix IE, Opera bug (last =
tested IE 9.0.5, Opera 11.61 on Windows)=0A=
        return !!match;=0A=
    };=0A=
=0A=
    // Adds named capture support and fixes browser bugs in native method=0A=
    String.prototype.match =3D function (regex) {=0A=
        if (!XRegExp.isRegExp(regex))=0A=
            regex =3D RegExp(regex); // Native `RegExp`=0A=
        if (regex.global) {=0A=
            var result =3D nativ.match.apply(this, arguments);=0A=
            regex.lastIndex =3D 0; // Fix IE bug=0A=
            return result;=0A=
        }=0A=
        return regex.exec(this); // Run the altered `exec`=0A=
    };=0A=
=0A=
    // Adds support for `${n}` tokens for named and numbered =
backreferences in replacement text,=0A=
    // and provides named backreferences to replacement functions as =
`arguments[0].name`. Also=0A=
    // fixes cross-browser differences in replacement text syntax when =
performing a replacement=0A=
    // using a nonregex search value, and the value of replacement =
regexes' `lastIndex` property=0A=
    // during replacement iterations. Note that this doesn't support =
SpiderMonkey's proprietary=0A=
    // third (`flags`) parameter=0A=
    String.prototype.replace =3D function (search, replacement) {=0A=
        var isRegex =3D XRegExp.isRegExp(search),=0A=
            captureNames, result, str, origLastIndex;=0A=
=0A=
        // There are too many combinations of search/replacement =
types/values and browser bugs that=0A=
        // preclude passing to native `replace`, so don't try=0A=
        //if (...)=0A=
        //    return nativ.replace.apply(this, arguments);=0A=
=0A=
        if (isRegex) {=0A=
            if (search._xregexp)=0A=
                captureNames =3D search._xregexp.captureNames; // Array =
or `null`=0A=
            if (!search.global)=0A=
                origLastIndex =3D search.lastIndex;=0A=
        } else {=0A=
            search =3D search + ""; // Type conversion=0A=
        }=0A=
=0A=
        if (Object.prototype.toString.call(replacement) =3D=3D=3D =
"[object Function]") {=0A=
            result =3D nativ.replace.call(this + "", search, function () =
{=0A=
                if (captureNames) {=0A=
                    // Change the `arguments[0]` string primitive to a =
String object which can store properties=0A=
                    arguments[0] =3D new String(arguments[0]);=0A=
                    // Store named backreferences on `arguments[0]`=0A=
                    for (var i =3D 0; i < captureNames.length; i++) {=0A=
                        if (captureNames[i])=0A=
                            arguments[0][captureNames[i]] =3D =
arguments[i + 1];=0A=
                    }=0A=
                }=0A=
                // Update `lastIndex` before calling `replacement` (fix =
browsers)=0A=
                if (isRegex && search.global)=0A=
                    search.lastIndex =3D arguments[arguments.length - 2] =
+ arguments[0].length;=0A=
                return replacement.apply(null, arguments);=0A=
            });=0A=
        } else {=0A=
            str =3D this + ""; // Type conversion, so `args[args.length =
- 1]` will be a string (given nonstring `this`)=0A=
            result =3D nativ.replace.call(str, search, function () {=0A=
                var args =3D arguments; // Keep this function's =
`arguments` available through closure=0A=
                return nativ.replace.call(replacement + "", =
replacementToken, function ($0, $1, $2) {=0A=
                    // Numbered backreference (without delimiters) or =
special variable=0A=
                    if ($1) {=0A=
                        switch ($1) {=0A=
                            case "$": return "$";=0A=
                            case "&": return args[0];=0A=
                            case "`": return args[args.length - =
1].slice(0, args[args.length - 2]);=0A=
                            case "'": return args[args.length - =
1].slice(args[args.length - 2] + args[0].length);=0A=
                            // Numbered backreference=0A=
                            default:=0A=
                                // What does "$10" mean?=0A=
                                // - Backreference 10, if 10 or more =
capturing groups exist=0A=
                                // - Backreference 1 followed by "0", if =
1-9 capturing groups exist=0A=
                                // - Otherwise, it's the string "$10"=0A=
                                // Also note:=0A=
                                // - Backreferences cannot be more than =
two digits (enforced by `replacementToken`)=0A=
                                // - "$01" is equivalent to "$1" if a =
capturing group exists, otherwise it's the string "$01"=0A=
                                // - There is no "$0" token ("$&" is the =
entire match)=0A=
                                var literalNumbers =3D "";=0A=
                                $1 =3D +$1; // Type conversion; drop =
leading zero=0A=
                                if (!$1) // `$1` was "0" or "00"=0A=
                                    return $0;=0A=
                                while ($1 > args.length - 3) {=0A=
                                    literalNumbers =3D =
String.prototype.slice.call($1, -1) + literalNumbers;=0A=
                                    $1 =3D Math.floor($1 / 10); // Drop =
the last digit=0A=
                                }=0A=
                                return ($1 ? args[$1] || "" : "$") + =
literalNumbers;=0A=
                        }=0A=
                        // Named backreference or delimited numbered =
backreference=0A=
                    } else {=0A=
                        // What does "${n}" mean?=0A=
                        // - Backreference to numbered capture n. Two =
differences from "$n":=0A=
                        //   - n can be more than two digits=0A=
                        //   - Backreference 0 is allowed, and is the =
entire match=0A=
                        // - Backreference to named capture n, if it =
exists and is not a number overridden by numbered capture=0A=
                        // - Otherwise, it's the string "${n}"=0A=
                        var n =3D +$2; // Type conversion; drop leading =
zeros=0A=
                        if (n <=3D args.length - 3)=0A=
                            return args[n];=0A=
                        n =3D captureNames ? indexOf(captureNames, $2) : =
-1;=0A=
                        return n > -1 ? args[n + 1] : $0;=0A=
                    }=0A=
                });=0A=
            });=0A=
        }=0A=
=0A=
        if (isRegex) {=0A=
            if (search.global)=0A=
                search.lastIndex =3D 0; // Fix IE, Safari bug (last =
tested IE 9.0.5, Safari 5.1.2 on Windows)=0A=
            else=0A=
                search.lastIndex =3D origLastIndex; // Fix IE, Opera bug =
(last tested IE 9.0.5, Opera 11.61 on Windows)=0A=
        }=0A=
=0A=
        return result;=0A=
    };=0A=
=0A=
    // A consistent cross-browser, ES3 compliant `split`=0A=
    String.prototype.split =3D function (s /* separator */, limit) {=0A=
        // If separator `s` is not a regex, use the native `split`=0A=
        if (!XRegExp.isRegExp(s))=0A=
            return nativ.split.apply(this, arguments);=0A=
=0A=
        var str =3D this + "", // Type conversion=0A=
            output =3D [],=0A=
            lastLastIndex =3D 0,=0A=
            match, lastLength;=0A=
=0A=
        // Behavior for `limit`: if it's...=0A=
        // - `undefined`: No limit=0A=
        // - `NaN` or zero: Return an empty array=0A=
        // - A positive number: Use `Math.floor(limit)`=0A=
        // - A negative number: No limit=0A=
        // - Other: Type-convert, then use the above rules=0A=
        if (limit =3D=3D=3D undefined || +limit < 0) {=0A=
            limit =3D Infinity;=0A=
        } else {=0A=
            limit =3D Math.floor(+limit);=0A=
            if (!limit)=0A=
                return [];=0A=
        }=0A=
=0A=
        // This is required if not `s.global`, and it avoids needing to =
set `s.lastIndex` to zero=0A=
        // and restore it to its original value when we're done using =
the regex=0A=
        s =3D XRegExp.copyAsGlobal(s);=0A=
=0A=
        while (match =3D s.exec(str)) { // Run the altered `exec` =
(required for `lastIndex` fix, etc.)=0A=
            if (s.lastIndex > lastLastIndex) {=0A=
                output.push(str.slice(lastLastIndex, match.index));=0A=
=0A=
                if (match.length > 1 && match.index < str.length)=0A=
                    Array.prototype.push.apply(output, match.slice(1));=0A=
=0A=
                lastLength =3D match[0].length;=0A=
                lastLastIndex =3D s.lastIndex;=0A=
=0A=
                if (output.length >=3D limit)=0A=
                    break;=0A=
            }=0A=
=0A=
            if (s.lastIndex =3D=3D=3D match.index)=0A=
                s.lastIndex++;=0A=
        }=0A=
=0A=
        if (lastLastIndex =3D=3D=3D str.length) {=0A=
            if (!nativ.test.call(s, "") || lastLength)=0A=
                output.push("");=0A=
        } else {=0A=
            output.push(str.slice(lastLastIndex));=0A=
        }=0A=
=0A=
        return output.length > limit ? output.slice(0, limit) : output;=0A=
    };=0A=
=0A=
=0A=
    //---------------------------------=0A=
    //  Private helper functions=0A=
    //---------------------------------=0A=
=0A=
    // Supporting function for `XRegExp`, `XRegExp.copyAsGlobal`, etc. =
Returns a copy of a `RegExp`=0A=
    // instance with a fresh `lastIndex` (set to zero), preserving =
properties required for named=0A=
    // capture. Also allows adding new flags in the process of copying =
the regex=0A=
    function clone (regex, additionalFlags) {=0A=
        if (!XRegExp.isRegExp(regex))=0A=
            throw TypeError("type RegExp expected");=0A=
        var x =3D regex._xregexp;=0A=
        regex =3D XRegExp(regex.source, getNativeFlags(regex) + =
(additionalFlags || ""));=0A=
        if (x) {=0A=
            regex._xregexp =3D {=0A=
                source: x.source,=0A=
                captureNames: x.captureNames ? x.captureNames.slice(0) : =
null=0A=
            };=0A=
        }=0A=
        return regex;=0A=
    }=0A=
=0A=
    function getNativeFlags (regex) {=0A=
        return (regex.global     ? "g" : "") +=0A=
            (regex.ignoreCase ? "i" : "") +=0A=
            (regex.multiline  ? "m" : "") +=0A=
            (regex.extended   ? "x" : "") + // Proposed for ES4; =
included in AS3=0A=
            (regex.sticky     ? "y" : "");=0A=
    }=0A=
=0A=
    function runTokens (pattern, index, scope, context) {=0A=
        var i =3D tokens.length,=0A=
            result, match, t;=0A=
        // Protect against constructing XRegExps within token handler =
and trigger functions=0A=
        isInsideConstructor =3D true;=0A=
        // Must reset `isInsideConstructor`, even if a `trigger` or =
`handler` throws=0A=
        try {=0A=
            while (i--) { // Run in reverse order=0A=
                t =3D tokens[i];=0A=
                if ((scope & t.scope) && (!t.trigger || =
t.trigger.call(context))) {=0A=
                    t.pattern.lastIndex =3D index;=0A=
                    match =3D t.pattern.exec(pattern); // Running the =
altered `exec` here allows use of named backreferences, etc.=0A=
                    if (match && match.index =3D=3D=3D index) {=0A=
                        result =3D {=0A=
                            output: t.handler.call(context, match, =
scope),=0A=
                            match: match=0A=
                        };=0A=
                        break;=0A=
                    }=0A=
                }=0A=
            }=0A=
        } catch (err) {=0A=
            throw err;=0A=
        } finally {=0A=
            isInsideConstructor =3D false;=0A=
        }=0A=
        return result;=0A=
    }=0A=
=0A=
    function indexOf (array, item, from) {=0A=
        if (Array.prototype.indexOf) // Use the native array method if =
available=0A=
            return array.indexOf(item, from);=0A=
        for (var i =3D from || 0; i < array.length; i++) {=0A=
            if (array[i] =3D=3D=3D item)=0A=
                return i;=0A=
        }=0A=
        return -1;=0A=
    }=0A=
=0A=
=0A=
    //---------------------------------=0A=
    //  Built-in tokens=0A=
    //---------------------------------=0A=
=0A=
    // Augment XRegExp's regular expression syntax and flags. Note that =
when adding tokens, the=0A=
    // third (`scope`) argument defaults to `XRegExp.OUTSIDE_CLASS`=0A=
=0A=
    // Comment pattern: (?# )=0A=
    XRegExp.addToken(=0A=
        /\(\?#[^)]*\)/,=0A=
        function (match) {=0A=
            // Keep tokens separated unless the following token is a =
quantifier=0A=
            return nativ.test.call(quantifier, =
match.input.slice(match.index + match[0].length)) ? "" : "(?:)";=0A=
        }=0A=
    );=0A=
=0A=
    // Capturing group (match the opening parenthesis only).=0A=
    // Required for support of named capturing groups=0A=
    XRegExp.addToken(=0A=
        /\((?!\?)/,=0A=
        function () {=0A=
            this.captureNames.push(null);=0A=
            return "(";=0A=
        }=0A=
    );=0A=
=0A=
    // Named capturing group (match the opening delimiter only): (?<name>=0A=
    XRegExp.addToken(=0A=
        /\(\?<([$\w]+)>/,=0A=
        function (match) {=0A=
            this.captureNames.push(match[1]);=0A=
            this.hasNamedCapture =3D true;=0A=
            return "(";=0A=
        }=0A=
    );=0A=
=0A=
    // Named backreference: \k<name>=0A=
    XRegExp.addToken(=0A=
        /\\k<([\w$]+)>/,=0A=
        function (match) {=0A=
            var index =3D indexOf(this.captureNames, match[1]);=0A=
            // Keep backreferences separate from subsequent literal =
numbers. Preserve back-=0A=
            // references to named groups that are undefined at this =
point as literal strings=0A=
            return index > -1 ?=0A=
                "\\" + (index + 1) + =
(isNaN(match.input.charAt(match.index + match[0].length)) ? "" : "(?:)") =
:=0A=
                match[0];=0A=
        }=0A=
    );=0A=
=0A=
    // Empty character class: [] or [^]=0A=
    XRegExp.addToken(=0A=
        /\[\^?]/,=0A=
        function (match) {=0A=
            // For cross-browser compatibility with ES3, convert [] to =
\b\B and [^] to [\s\S].=0A=
            // (?!) should work like \b\B, but is unreliable in Firefox=0A=
            return match[0] =3D=3D=3D "[]" ? "\\b\\B" : "[\\s\\S]";=0A=
        }=0A=
    );=0A=
=0A=
    // Mode modifier at the start of the pattern only, with any =
combination of flags imsx: (?imsx)=0A=
    // Does not support x(?i), (?-i), (?i-m), (?i: ), (?i)(?m), etc.=0A=
    XRegExp.addToken(=0A=
        /^\(\?([imsx]+)\)/,=0A=
        function (match) {=0A=
            this.setFlag(match[1]);=0A=
            return "";=0A=
        }=0A=
    );=0A=
=0A=
    // Whitespace and comments, in free-spacing (aka extended) mode only=0A=
    XRegExp.addToken(=0A=
        /(?:\s+|#.*)+/,=0A=
        function (match) {=0A=
            // Keep tokens separated unless the following token is a =
quantifier=0A=
            return nativ.test.call(quantifier, =
match.input.slice(match.index + match[0].length)) ? "" : "(?:)";=0A=
        },=0A=
        XRegExp.OUTSIDE_CLASS,=0A=
        function () {return this.hasFlag("x");}=0A=
    );=0A=
=0A=
    // Dot, in dotall (aka singleline) mode only=0A=
    XRegExp.addToken(=0A=
        /\./,=0A=
        function () {return "[\\s\\S]";},=0A=
        XRegExp.OUTSIDE_CLASS,=0A=
        function () {return this.hasFlag("s");}=0A=
    );=0A=
=0A=
=0A=
    //---------------------------------=0A=
    //  Backward compatibility=0A=
    //---------------------------------=0A=
=0A=
    // Uncomment the following block for compatibility with XRegExp =
1.0-1.2:=0A=
    /*=0A=
     XRegExp.matchWithinChain =3D XRegExp.matchChain;=0A=
     RegExp.prototype.addFlags =3D function (s) {return clone(this, s);};=0A=
     RegExp.prototype.execAll =3D function (s) {var r =3D []; =
XRegExp.iterate(s, this, function (m) {r.push(m);}); return r;};=0A=
     RegExp.prototype.forEachExec =3D function (s, f, c) {return =
XRegExp.iterate(s, this, f, c);};=0A=
     RegExp.prototype.validate =3D function (s) {var r =3D RegExp("^(?:" =
+ this.source + ")$(?!\\s)", getNativeFlags(this)); if (this.global) =
this.lastIndex =3D 0; return s.search(r) =3D=3D=3D 0;};=0A=
     */=0A=
=0A=
})();=0A=
=0A=
//=0A=
// Begin anonymous function. This is used to contain local scope =
variables without polutting global scope.=0A=
//=0A=
if (typeof(SyntaxHighlighter) =3D=3D 'undefined') var SyntaxHighlighter =
=3D function() {=0A=
=0A=
// CommonJS=0A=
    if (typeof(require) !=3D 'undefined' && typeof(XRegExp) =3D=3D =
'undefined')=0A=
    {=0A=
        XRegExp =3D require('XRegExp').XRegExp;=0A=
    }=0A=
=0A=
// Shortcut object which will be assigned to the SyntaxHighlighter =
variable.=0A=
// This is a shorthand for local reference in order to avoid long =
namespace=0A=
// references to SyntaxHighlighter.whatever...=0A=
    var sh =3D {=0A=
        defaults : {=0A=
            /** Additional CSS class names to be added to highlighter =
elements. */=0A=
            'class-name' : '',=0A=
=0A=
            /** First line number. */=0A=
            'first-line' : 1,=0A=
=0A=
            /**=0A=
             * Pads line numbers. Possible values are:=0A=
             *=0A=
             *   false - don't pad line numbers.=0A=
             *   true  - automaticaly pad numbers with minimum required =
number of leading zeroes.=0A=
             *   [int] - length up to which pad line numbers.=0A=
             */=0A=
            'pad-line-numbers' : false,=0A=
=0A=
            /** Lines to highlight. */=0A=
            'highlight' : false,=0A=
=0A=
            /** Title to be displayed above the code block. */=0A=
            'title' : null,=0A=
=0A=
            /** Enables or disables smart tabs. */=0A=
            'smart-tabs' : true,=0A=
=0A=
            /** Gets or sets tab size. */=0A=
            'tab-size' : 4,=0A=
=0A=
            /** Enables or disables gutter. */=0A=
            'gutter' : true,=0A=
=0A=
            /** Enables or disables toolbar. */=0A=
            'toolbar' : true,=0A=
=0A=
            /** Enables quick code copy and paste from double click. */=0A=
            'quick-code' : true,=0A=
=0A=
            /** Forces code view to be collapsed. */=0A=
            'collapse' : false,=0A=
=0A=
            /** Enables or disables automatic links. */=0A=
            'auto-links' : false,=0A=
=0A=
            /** Gets or sets light mode. Equavalent to turning off =
gutter and toolbar. */=0A=
            'light' : false,=0A=
=0A=
            'unindent' : true,=0A=
=0A=
            'html-script' : false=0A=
        },=0A=
=0A=
        config : {=0A=
            space : '&nbsp;',=0A=
=0A=
            /** Enables use of <SCRIPT type=3D"syntaxhighlighter" /> =
tags. */=0A=
            useScriptTags : true,=0A=
=0A=
            /** Blogger mode flag. */=0A=
            bloggerMode : false,=0A=
=0A=
            stripBrs : false,=0A=
=0A=
            /** Name of the tag that SyntaxHighlighter will =
automatically look for. */=0A=
            tagName : 'pre',=0A=
=0A=
            strings : {=0A=
                expandSource : 'expand source',=0A=
                help : '?',=0A=
                alert: 'SyntaxHighlighter\n\n',=0A=
                noBrush : 'Can\'t find brush for: ',=0A=
                brushNotHtmlScript : 'Brush wasn\'t configured for =
html-script option: ',=0A=
=0A=
                // this is populated by the build script=0A=
                aboutDialog : '@ABOUT@'=0A=
            }=0A=
        },=0A=
=0A=
        /** Internal 'global' variables. */=0A=
        vars : {=0A=
            discoveredBrushes : null,=0A=
            highlighters : {}=0A=
        },=0A=
=0A=
        /** This object is populated by user included external brush =
files. */=0A=
        brushes : {},=0A=
=0A=
        /** Common regular expressions. */=0A=
        regexLib : {=0A=
            multiLineCComments			: /\/\*[\s\S]*?\*\//gm,=0A=
            singleLineCComments			: /\/\/.*$/gm,=0A=
            singleLinePerlComments		: /#.*$/gm,=0A=
            doubleQuotedString			: /"([^\\"\n]|\\.)*"/g,=0A=
            singleQuotedString			: /'([^\\'\n]|\\.)*'/g,=0A=
            multiLineDoubleQuotedString	: new =
XRegExp('"([^\\\\"]|\\\\.)*"', 'gs'),=0A=
            multiLineSingleQuotedString	: new =
XRegExp("'([^\\\\']|\\\\.)*'", 'gs'),=0A=
            xmlComments					: /(&lt;|<)!--[\s\S]*?--(&gt;|>)/gm,=0A=
            url							: /\w+:\/\/[\w-.\/?%&=3D:@;#]*/g,=0A=
=0A=
            /** <?=3D ?> tags. */=0A=
            phpScriptTags 				: { left: /(&lt;|<)\?(?:=3D|php)?/g, =
right: /\?(&gt;|>)/g, 'eof' : true },=0A=
=0A=
            /** <%=3D %> tags. */=0A=
            aspScriptTags				: { left: /(&lt;|<)%=3D?/g, right: =
/%(&gt;|>)/g },=0A=
=0A=
            /** <script> tags. */=0A=
            scriptScriptTags			: { left: =
/(&lt;|<)\s*script.*?(&gt;|>)/gi, right: =
/(&lt;|<)\/\s*script\s*(&gt;|>)/gi }=0A=
        },=0A=
=0A=
        toolbar: {=0A=
            /**=0A=
             * Generates HTML markup for the toolbar.=0A=
             * @param {Highlighter} highlighter Highlighter instance.=0A=
             * @return {String} Returns HTML markup.=0A=
             */=0A=
            getHtml: function(highlighter)=0A=
            {=0A=
                var html =3D '<div class=3D"toolbar">',=0A=
                    items =3D sh.toolbar.items,=0A=
                    list =3D items.list=0A=
                    ;=0A=
=0A=
                function defaultGetHtml(highlighter, name)=0A=
                {=0A=
                    return sh.toolbar.getButtonHtml(highlighter, name, =
sh.config.strings[name]);=0A=
                };=0A=
=0A=
                for (var i =3D 0; i < list.length; i++)=0A=
                    html +=3D (items[list[i]].getHtml || =
defaultGetHtml)(highlighter, list[i]);=0A=
=0A=
                html +=3D '</div>';=0A=
=0A=
                return html;=0A=
            },=0A=
=0A=
            /**=0A=
             * Generates HTML markup for a regular button in the toolbar.=0A=
             * @param {Highlighter} highlighter Highlighter instance.=0A=
             * @param {String} commandName		Command name that would be =
executed.=0A=
             * @param {String} label			Label text to display.=0A=
             * @return {String}					Returns HTML markup.=0A=
             */=0A=
            getButtonHtml: function(highlighter, commandName, label)=0A=
            {=0A=
                return '<span><a href=3D"#" class=3D"toolbar_item'=0A=
                    + ' command_' + commandName=0A=
                    + ' ' + commandName=0A=
                    + '">' + label + '</a></span>'=0A=
                    ;=0A=
            },=0A=
=0A=
            /**=0A=
             * Event handler for a toolbar anchor.=0A=
             */=0A=
            handler: function(e)=0A=
            {=0A=
                var target =3D e.target,=0A=
                    className =3D target.className || ''=0A=
                    ;=0A=
=0A=
                function getValue(name)=0A=
                {=0A=
                    var r =3D new RegExp(name + '_(\\w+)'),=0A=
                        match =3D r.exec(className)=0A=
                        ;=0A=
=0A=
                    return match ? match[1] : null;=0A=
                };=0A=
=0A=
                var highlighter =3D =
getHighlighterById(findParentElement(target, '.syntaxhighlighter').id),=0A=
                    commandName =3D getValue('command')=0A=
                    ;=0A=
=0A=
                // execute the toolbar command=0A=
                if (highlighter && commandName)=0A=
                    sh.toolbar.items[commandName].execute(highlighter);=0A=
=0A=
                // disable default A click behaviour=0A=
                e.preventDefault();=0A=
            },=0A=
=0A=
            /** Collection of toolbar items. */=0A=
            items : {=0A=
                // Ordered lis of items in the toolbar. Can't expect =
`for (var n in items)` to be consistent.=0A=
                list: ['expandSource', 'help'],=0A=
=0A=
                expandSource: {=0A=
                    getHtml: function(highlighter)=0A=
                    {=0A=
                        if (highlighter.getParam('collapse') !=3D true)=0A=
                            return '';=0A=
=0A=
                        var title =3D highlighter.getParam('title');=0A=
                        return sh.toolbar.getButtonHtml(highlighter, =
'expandSource', title ? title : sh.config.strings.expandSource);=0A=
                    },=0A=
=0A=
                    execute: function(highlighter)=0A=
                    {=0A=
                        var div =3D =
getHighlighterDivById(highlighter.id);=0A=
                        removeClass(div, 'collapsed');=0A=
                    }=0A=
                },=0A=
=0A=
                /** Command to display the about dialog window. */=0A=
                help: {=0A=
                    execute: function(highlighter)=0A=
                    {=0A=
                        var wnd =3D popup('', '_blank', 500, 250, =
'scrollbars=3D0'),=0A=
                            doc =3D wnd.document=0A=
                            ;=0A=
=0A=
                        doc.write(sh.config.strings.aboutDialog);=0A=
                        doc.close();=0A=
                        wnd.focus();=0A=
                    }=0A=
                }=0A=
            }=0A=
        },=0A=
=0A=
        /**=0A=
         * Finds all elements on the page which should be processes by =
SyntaxHighlighter.=0A=
         *=0A=
         * @param {Object} globalParams		Optional parameters which =
override element's=0A=
         * 									parameters. Only used if element is specified.=0A=
         *=0A=
         * @param {Object} element	Optional element to highlight. If =
none is=0A=
         * 							provided, all elements in the current document=0A=
         * 							are returned which qualify.=0A=
         *=0A=
         * @return {Array}	Returns list of <code>{ target: DOMElement, =
params: Object }</code> objects.=0A=
         */=0A=
        findElements: function(globalParams, element)=0A=
        {=0A=
            var elements =3D element ? [element] : =
toArray(document.getElementsByTagName(sh.config.tagName)),=0A=
                conf =3D sh.config,=0A=
                result =3D []=0A=
                ;=0A=
=0A=
            // support for <SCRIPT TYPE=3D"syntaxhighlighter" /> feature=0A=
            if (conf.useScriptTags)=0A=
                elements =3D =
elements.concat(getSyntaxHighlighterScriptTags());=0A=
=0A=
            if (elements.length =3D=3D=3D 0)=0A=
                return result;=0A=
=0A=
            for (var i =3D 0; i < elements.length; i++)=0A=
            {=0A=
                var item =3D {=0A=
                    target: elements[i],=0A=
                    // local params take precedence over globals=0A=
                    params: merge(globalParams, =
parseParams(elements[i].className))=0A=
                };=0A=
=0A=
                if (item.params['brush'] =3D=3D null)=0A=
                    continue;=0A=
=0A=
                result.push(item);=0A=
            }=0A=
=0A=
            return result;=0A=
        },=0A=
=0A=
        /**=0A=
         * Shorthand to highlight all elements on the page that are =
marked as=0A=
         * SyntaxHighlighter source code.=0A=
         *=0A=
         * @param {Object} globalParams		Optional parameters which =
override element's=0A=
         * 									parameters. Only used if element is specified.=0A=
         *=0A=
         * @param {Object} element	Optional element to highlight. If =
none is=0A=
         * 							provided, all elements in the current document=0A=
         * 							are highlighted.=0A=
         */=0A=
        highlight: function(globalParams, element)=0A=
        {=0A=
            var elements =3D this.findElements(globalParams, element),=0A=
                propertyName =3D 'innerHTML',=0A=
                highlighter =3D null,=0A=
                conf =3D sh.config=0A=
                ;=0A=
=0A=
            if (elements.length =3D=3D=3D 0)=0A=
                return;=0A=
=0A=
            for (var i =3D 0; i < elements.length; i++)=0A=
            {=0A=
                var element =3D elements[i],=0A=
                    target =3D element.target,=0A=
                    params =3D element.params,=0A=
                    brushName =3D params.brush,=0A=
                    code=0A=
                    ;=0A=
=0A=
                if (brushName =3D=3D null)=0A=
                    continue;=0A=
=0A=
                // Instantiate a brush=0A=
                if (params['html-script'] =3D=3D 'true' || =
sh.defaults['html-script'] =3D=3D true)=0A=
                {=0A=
                    highlighter =3D new sh.HtmlScript(brushName);=0A=
                    brushName =3D 'htmlscript';=0A=
                }=0A=
                else=0A=
                {=0A=
                    var brush =3D findBrush(brushName);=0A=
=0A=
                    if (brush)=0A=
                        highlighter =3D new brush();=0A=
                    else=0A=
                        continue;=0A=
                }=0A=
=0A=
                code =3D target[propertyName];=0A=
=0A=
                // remove CDATA from <SCRIPT/> tags if it's present=0A=
                if (conf.useScriptTags)=0A=
                    code =3D stripCData(code);=0A=
=0A=
                // Inject title if the attribute is present=0A=
                if ((target.title || '') !=3D '')=0A=
                    params.title =3D target.title;=0A=
=0A=
                params['brush'] =3D brushName;=0A=
                highlighter.init(params);=0A=
                element =3D highlighter.getDiv(code);=0A=
=0A=
                // carry over ID=0A=
                if ((target.id || '') !=3D '')=0A=
                    element.id =3D target.id;=0A=
                //by zhanyi =
=E5=8E=BB=E6=8E=89=E5=A4=9A=E4=BD=99=E7=9A=84=E5=A4=96=E5=9B=B4div=0A=
               // var tmp =3D element.firstChild.firstChild;=0A=
                //tmp.className =3D element.firstChild.className;=0A=
=0A=
				//=E8=BF=98=E5=8E=9F =E6=8F=92=E4=BB=B6=E5=8E=9F=E5=A7=8B div by song=0A=
                target.parentNode.replaceChild(element, target);=0A=
            }=0A=
        },=0A=
=0A=
        /**=0A=
         * Main entry point for the SyntaxHighlighter.=0A=
         * @param {Object} params Optional params to apply to all =
highlighted elements.=0A=
         */=0A=
        all: function(params)=0A=
        {=0A=
            attachEvent(=0A=
                window,=0A=
                'load',=0A=
                function() { sh.highlight(params); }=0A=
            );=0A=
        }=0A=
    }; // end of sh=0A=
=0A=
    /**=0A=
     * Checks if target DOM elements has specified CSS class.=0A=
     * @param {DOMElement} target Target DOM element to check.=0A=
     * @param {String} className Name of the CSS class to check for.=0A=
     * @return {Boolean} Returns true if class name is present, false =
otherwise.=0A=
     */=0A=
    function hasClass(target, className)=0A=
    {=0A=
        return target.className.indexOf(className) !=3D -1;=0A=
    };=0A=
=0A=
    /**=0A=
     * Adds CSS class name to the target DOM element.=0A=
     * @param {DOMElement} target Target DOM element.=0A=
     * @param {String} className New CSS class to add.=0A=
     */=0A=
    function addClass(target, className)=0A=
    {=0A=
        if (!hasClass(target, className))=0A=
            target.className +=3D ' ' + className;=0A=
    };=0A=
=0A=
    /**=0A=
     * Removes CSS class name from the target DOM element.=0A=
     * @param {DOMElement} target Target DOM element.=0A=
     * @param {String} className CSS class to remove.=0A=
     */=0A=
    function removeClass(target, className)=0A=
    {=0A=
        target.className =3D target.className.replace(className, '');=0A=
    };=0A=
=0A=
    /**=0A=
     * Converts the source to array object. Mostly used for function =
arguments and=0A=
     * lists returned by getElementsByTagName() which aren't Array =
objects.=0A=
     * @param {List} source Source list.=0A=
     * @return {Array} Returns array.=0A=
     */=0A=
    function toArray(source)=0A=
    {=0A=
        var result =3D [];=0A=
=0A=
        for (var i =3D 0; i < source.length; i++)=0A=
            result.push(source[i]);=0A=
=0A=
        return result;=0A=
    };=0A=
=0A=
    /**=0A=
     * Splits block of text into lines.=0A=
     * @param {String} block Block of text.=0A=
     * @return {Array} Returns array of lines.=0A=
     */=0A=
    function splitLines(block)=0A=
    {=0A=
        return block.split(/\r?\n/);=0A=
    }=0A=
=0A=
    /**=0A=
     * Generates HTML ID for the highlighter.=0A=
     * @param {String} highlighterId Highlighter ID.=0A=
     * @return {String} Returns HTML ID.=0A=
     */=0A=
    function getHighlighterId(id)=0A=
    {=0A=
        var prefix =3D 'highlighter_';=0A=
        return id.indexOf(prefix) =3D=3D 0 ? id : prefix + id;=0A=
    };=0A=
=0A=
    /**=0A=
     * Finds Highlighter instance by ID.=0A=
     * @param {String} highlighterId Highlighter ID.=0A=
     * @return {Highlighter} Returns instance of the highlighter.=0A=
     */=0A=
    function getHighlighterById(id)=0A=
    {=0A=
        return sh.vars.highlighters[getHighlighterId(id)];=0A=
    };=0A=
=0A=
    /**=0A=
     * Finds highlighter's DIV container.=0A=
     * @param {String} highlighterId Highlighter ID.=0A=
     * @return {Element} Returns highlighter's DIV element.=0A=
     */=0A=
    function getHighlighterDivById(id)=0A=
    {=0A=
        return document.getElementById(getHighlighterId(id));=0A=
    };=0A=
=0A=
    /**=0A=
     * Stores highlighter so that getHighlighterById() can do its thing. =
Each=0A=
     * highlighter must call this method to preserve itself.=0A=
     * @param {Highilghter} highlighter Highlighter instance.=0A=
     */=0A=
    function storeHighlighter(highlighter)=0A=
    {=0A=
        sh.vars.highlighters[getHighlighterId(highlighter.id)] =3D =
highlighter;=0A=
    };=0A=
=0A=
    /**=0A=
     * Looks for a child or parent node which has specified classname.=0A=
     * Equivalent to jQuery's $(container).find(".className")=0A=
     * @param {Element} target Target element.=0A=
     * @param {String} search Class name or node name to look for.=0A=
     * @param {Boolean} reverse If set to true, will go up the node tree =
instead of down.=0A=
     * @return {Element} Returns found child or parent element on null.=0A=
     */=0A=
    function findElement(target, search, reverse /* optional */)=0A=
    {=0A=
        if (target =3D=3D null)=0A=
            return null;=0A=
=0A=
        var nodes			=3D reverse !=3D true ? target.childNodes : [ =
target.parentNode ],=0A=
            propertyToFind	=3D { '#' : 'id', '.' : 'className' =
}[search.substr(0, 1)] || 'nodeName',=0A=
            expectedValue,=0A=
            found=0A=
            ;=0A=
=0A=
        expectedValue =3D propertyToFind !=3D 'nodeName'=0A=
            ? search.substr(1)=0A=
            : search.toUpperCase()=0A=
        ;=0A=
=0A=
        // main return of the found node=0A=
        if ((target[propertyToFind] || '').indexOf(expectedValue) !=3D =
-1)=0A=
            return target;=0A=
=0A=
        for (var i =3D 0; nodes && i < nodes.length && found =3D=3D =
null; i++)=0A=
            found =3D findElement(nodes[i], search, reverse);=0A=
=0A=
        return found;=0A=
    };=0A=
=0A=
    /**=0A=
     * Looks for a parent node which has specified classname.=0A=
     * This is an alias to <code>findElement(container, className, =
true)</code>.=0A=
     * @param {Element} target Target element.=0A=
     * @param {String} className Class name to look for.=0A=
     * @return {Element} Returns found parent element on null.=0A=
     */=0A=
    function findParentElement(target, className)=0A=
    {=0A=
        return findElement(target, className, true);=0A=
    };=0A=
=0A=
    /**=0A=
     * Finds an index of element in the array.=0A=
     * @ignore=0A=
     * @param {Object} searchElement=0A=
     * @param {Number} fromIndex=0A=
     * @return {Number} Returns index of element if found; -1 otherwise.=0A=
     */=0A=
    function indexOf(array, searchElement, fromIndex)=0A=
    {=0A=
        fromIndex =3D Math.max(fromIndex || 0, 0);=0A=
=0A=
        for (var i =3D fromIndex; i < array.length; i++)=0A=
            if(array[i] =3D=3D searchElement)=0A=
                return i;=0A=
=0A=
        return -1;=0A=
    };=0A=
=0A=
    /**=0A=
     * Generates a unique element ID.=0A=
     */=0A=
    function guid(prefix)=0A=
    {=0A=
        return (prefix || '') + Math.round(Math.random() * =
1000000).toString();=0A=
    };=0A=
=0A=
    /**=0A=
     * Merges two objects. Values from obj2 override values in obj1.=0A=
     * Function is NOT recursive and works only for one dimensional =
objects.=0A=
     * @param {Object} obj1 First object.=0A=
     * @param {Object} obj2 Second object.=0A=
     * @return {Object} Returns combination of both objects.=0A=
     */=0A=
    function merge(obj1, obj2)=0A=
    {=0A=
        var result =3D {}, name;=0A=
=0A=
        for (name in obj1)=0A=
            result[name] =3D obj1[name];=0A=
=0A=
        for (name in obj2)=0A=
            result[name] =3D obj2[name];=0A=
=0A=
        return result;=0A=
    };=0A=
=0A=
    /**=0A=
     * Attempts to convert string to boolean.=0A=
     * @param {String} value Input string.=0A=
     * @return {Boolean} Returns true if input was "true", false if =
input was "false" and value otherwise.=0A=
     */=0A=
    function toBoolean(value)=0A=
    {=0A=
        var result =3D { "true" : true, "false" : false }[value];=0A=
        return result =3D=3D null ? value : result;=0A=
    };=0A=
=0A=
    /**=0A=
     * Opens up a centered popup window.=0A=
     * @param {String} url		URL to open in the window.=0A=
     * @param {String} name		Popup name.=0A=
     * @param {int} width		Popup width.=0A=
     * @param {int} height		Popup height.=0A=
     * @param {String} options	window.open() options.=0A=
     * @return {Window}			Returns window instance.=0A=
     */=0A=
    function popup(url, name, width, height, options)=0A=
    {=0A=
        var x =3D (screen.width - width) / 2,=0A=
            y =3D (screen.height - height) / 2=0A=
            ;=0A=
=0A=
        options +=3D	', left=3D' + x +=0A=
            ', top=3D' + y +=0A=
            ', width=3D' + width +=0A=
            ', height=3D' + height=0A=
        ;=0A=
        options =3D options.replace(/^,/, '');=0A=
=0A=
        var win =3D window.open(url, name, options);=0A=
        win.focus();=0A=
        return win;=0A=
    };=0A=
=0A=
    /**=0A=
     * Adds event handler to the target object.=0A=
     * @param {Object} obj		Target object.=0A=
     * @param {String} type		Name of the event.=0A=
     * @param {Function} func	Handling function.=0A=
     */=0A=
    function attachEvent(obj, type, func, scope)=0A=
    {=0A=
        function handler(e)=0A=
        {=0A=
            e =3D e || window.event;=0A=
=0A=
            if (!e.target)=0A=
            {=0A=
                e.target =3D e.srcElement;=0A=
                e.preventDefault =3D function()=0A=
                {=0A=
                    this.returnValue =3D false;=0A=
                };=0A=
            }=0A=
=0A=
            func.call(scope || window, e);=0A=
        };=0A=
=0A=
        if (obj.attachEvent)=0A=
        {=0A=
            obj.attachEvent('on' + type, handler);=0A=
        }=0A=
        else=0A=
        {=0A=
            obj.addEventListener(type, handler, false);=0A=
        }=0A=
    };=0A=
=0A=
    /**=0A=
     * Displays an alert.=0A=
     * @param {String} str String to display.=0A=
     */=0A=
    function alert(str)=0A=
    {=0A=
        window.alert(sh.config.strings.alert + str);=0A=
    };=0A=
=0A=
    /**=0A=
     * Finds a brush by its alias.=0A=
     *=0A=
     * @param {String} alias		Brush alias.=0A=
     * @param {Boolean} showAlert	Suppresses the alert if false.=0A=
     * @return {Brush}				Returns bursh constructor if found, null =
otherwise.=0A=
     */=0A=
    function findBrush(alias, showAlert)=0A=
    {=0A=
        var brushes =3D sh.vars.discoveredBrushes,=0A=
            result =3D null=0A=
            ;=0A=
=0A=
        if (brushes =3D=3D null)=0A=
        {=0A=
            brushes =3D {};=0A=
=0A=
            // Find all brushes=0A=
            for (var brush in sh.brushes)=0A=
            {=0A=
                var info =3D sh.brushes[brush],=0A=
                    aliases =3D info.aliases=0A=
                    ;=0A=
=0A=
                if (aliases =3D=3D null)=0A=
                    continue;=0A=
=0A=
                // keep the brush name=0A=
                info.brushName =3D brush.toLowerCase();=0A=
=0A=
                for (var i =3D 0; i < aliases.length; i++)=0A=
                    brushes[aliases[i]] =3D brush;=0A=
            }=0A=
=0A=
            sh.vars.discoveredBrushes =3D brushes;=0A=
        }=0A=
=0A=
        result =3D sh.brushes[brushes[alias]];=0A=
=0A=
        if (result =3D=3D null && showAlert)=0A=
            alert(sh.config.strings.noBrush + alias);=0A=
=0A=
        return result;=0A=
    };=0A=
=0A=
    /**=0A=
     * Executes a callback on each line and replaces each line with =
result from the callback.=0A=
     * @param {Object} str			Input string.=0A=
     * @param {Object} callback		Callback function taking one string =
argument and returning a string.=0A=
     */=0A=
    function eachLine(str, callback)=0A=
    {=0A=
        var lines =3D splitLines(str);=0A=
=0A=
        for (var i =3D 0; i < lines.length; i++)=0A=
            lines[i] =3D callback(lines[i], i);=0A=
=0A=
        // include \r to enable copy-paste on windows (ie8) without =
getting everything on one line=0A=
        return lines.join('\r\n');=0A=
    };=0A=
=0A=
    /**=0A=
     * This is a special trim which only removes first and last empty =
lines=0A=
     * and doesn't affect valid leading space on the first line.=0A=
     *=0A=
     * @param {String} str   Input string=0A=
     * @return {String}      Returns string without empty first and last =
lines.=0A=
     */=0A=
    function trimFirstAndLastLines(str)=0A=
    {=0A=
        return str.replace(/^[ ]*[\n]+|[\n]*[ ]*$/g, '');=0A=
    };=0A=
=0A=
    /**=0A=
     * Parses key/value pairs into hash object.=0A=
     *=0A=
     * Understands the following formats:=0A=
     * - name: word;=0A=
     * - name: [word, word];=0A=
     * - name: "string";=0A=
     * - name: 'string';=0A=
     *=0A=
     * For example:=0A=
     *   name1: value; name2: [value, value]; name3: 'value'=0A=
     *=0A=
     * @param {String} str    Input string.=0A=
     * @return {Object}       Returns deserialized object.=0A=
     */=0A=
    function parseParams(str)=0A=
    {=0A=
        var match,=0A=
            result =3D {},=0A=
            arrayRegex =3D new XRegExp("^\\[(?<values>(.*?))\\]$"),=0A=
            regex =3D new XRegExp(=0A=
                "(?<name>[\\w-]+)" +=0A=
                    "\\s*:\\s*" +=0A=
                    "(?<value>" +=0A=
                    "[\\w-%#]+|" +		// word=0A=
                    "\\[.*?\\]|" +		// [] array=0A=
                    '".*?"|' +			// "" string=0A=
                    "'.*?'" +			// '' string=0A=
                    ")\\s*;?",=0A=
                "g"=0A=
            )=0A=
            ;=0A=
=0A=
        while ((match =3D regex.exec(str)) !=3D null)=0A=
        {=0A=
            var value =3D match.value=0A=
                    .replace(/^['"]|['"]$/g, '') // strip quotes from =
end of strings=0A=
                ;=0A=
=0A=
            // try to parse array value=0A=
            if (value !=3D null && arrayRegex.test(value))=0A=
            {=0A=
                var m =3D arrayRegex.exec(value);=0A=
                value =3D m.values.length > 0 ? =
m.values.split(/\s*,\s*/) : [];=0A=
            }=0A=
=0A=
            result[match.name] =3D value;=0A=
        }=0A=
=0A=
        return result;=0A=
    };=0A=
=0A=
    /**=0A=
     * Wraps each line of the string into <code/> tag with given style =
applied to it.=0A=
     *=0A=
     * @param {String} str   Input string.=0A=
     * @param {String} css   Style name to apply to the string.=0A=
     * @return {String}      Returns input string with each line =
surrounded by <span/> tag.=0A=
     */=0A=
    function wrapLinesWithCode(str, css)=0A=
    {=0A=
        if (str =3D=3D null || str.length =3D=3D 0 || str =3D=3D '\n')=0A=
            return str;=0A=
=0A=
        str =3D str.replace(/</g, '&lt;');=0A=
=0A=
        // Replace two or more sequential spaces with &nbsp; leaving =
last space untouched.=0A=
        str =3D str.replace(/ {2,}/g, function(m)=0A=
        {=0A=
            var spaces =3D '';=0A=
=0A=
            for (var i =3D 0; i < m.length - 1; i++)=0A=
                spaces +=3D sh.config.space;=0A=
=0A=
            return spaces + ' ';=0A=
        });=0A=
=0A=
        // Split each line and apply <span class=3D"...">...</span> to =
them so that=0A=
        // leading spaces aren't included.=0A=
        if (css !=3D null)=0A=
            str =3D eachLine(str, function(line)=0A=
            {=0A=
                if (line.length =3D=3D 0)=0A=
                    return '';=0A=
=0A=
                var spaces =3D '';=0A=
=0A=
                line =3D line.replace(/^(&nbsp;| )+/, function(s)=0A=
                {=0A=
                    spaces =3D s;=0A=
                    return '';=0A=
                });=0A=
=0A=
                if (line.length =3D=3D 0)=0A=
                    return spaces;=0A=
=0A=
                return spaces + '<code class=3D"' + css + '">' + line + =
'</code>';=0A=
            });=0A=
=0A=
        return str;=0A=
    };=0A=
=0A=
    /**=0A=
     * Pads number with zeros until it's length is the same as given =
length.=0A=
     *=0A=
     * @param {Number} number	Number to pad.=0A=
     * @param {Number} length	Max string length with.=0A=
     * @return {String}			Returns a string padded with proper amount of =
'0'.=0A=
     */=0A=
    function padNumber(number, length)=0A=
    {=0A=
        var result =3D number.toString();=0A=
=0A=
        while (result.length < length)=0A=
            result =3D '0' + result;=0A=
=0A=
        return result;=0A=
    };=0A=
=0A=
    /**=0A=
     * Replaces tabs with spaces.=0A=
     *=0A=
     * @param {String} code		Source code.=0A=
     * @param {Number} tabSize	Size of the tab.=0A=
     * @return {String}			Returns code with all tabs replaces by spaces.=0A=
     */=0A=
    function processTabs(code, tabSize)=0A=
    {=0A=
        var tab =3D '';=0A=
=0A=
        for (var i =3D 0; i < tabSize; i++)=0A=
            tab +=3D ' ';=0A=
=0A=
        return code.replace(/\t/g, tab);=0A=
    };=0A=
=0A=
    /**=0A=
     * Replaces tabs with smart spaces.=0A=
     *=0A=
     * @param {String} code    Code to fix the tabs in.=0A=
     * @param {Number} tabSize Number of spaces in a column.=0A=
     * @return {String}        Returns code with all tabs replaces with =
roper amount of spaces.=0A=
     */=0A=
    function processSmartTabs(code, tabSize)=0A=
    {=0A=
        var lines =3D splitLines(code),=0A=
            tab =3D '\t',=0A=
            spaces =3D ''=0A=
            ;=0A=
=0A=
        // Create a string with 1000 spaces to copy spaces from...=0A=
        // It's assumed that there would be no indentation longer than =
that.=0A=
        for (var i =3D 0; i < 50; i++)=0A=
            spaces +=3D '                    '; // 20 spaces * 50=0A=
=0A=
        // This function inserts specified amount of spaces in the string=0A=
        // where a tab is while removing that given tab.=0A=
        function insertSpaces(line, pos, count)=0A=
        {=0A=
            return line.substr(0, pos)=0A=
                + spaces.substr(0, count)=0A=
                + line.substr(pos + 1, line.length) // pos + 1 will get =
rid of the tab=0A=
                ;=0A=
        };=0A=
=0A=
        // Go through all the lines and do the 'smart tabs' magic.=0A=
        code =3D eachLine(code, function(line)=0A=
        {=0A=
            if (line.indexOf(tab) =3D=3D -1)=0A=
                return line;=0A=
=0A=
            var pos =3D 0;=0A=
=0A=
            while ((pos =3D line.indexOf(tab)) !=3D -1)=0A=
            {=0A=
                // This is pretty much all there is to the 'smart tabs' =
logic.=0A=
                // Based on the position within the line and size of a =
tab,=0A=
                // calculate the amount of spaces we need to insert.=0A=
                var spaces =3D tabSize - pos % tabSize;=0A=
                line =3D insertSpaces(line, pos, spaces);=0A=
            }=0A=
=0A=
            return line;=0A=
        });=0A=
=0A=
        return code;=0A=
    };=0A=
=0A=
    /**=0A=
     * Performs various string fixes based on configuration.=0A=
     */=0A=
    function fixInputString(str)=0A=
    {=0A=
        var br =3D /<br\s*\/?>|&lt;br\s*\/?&gt;/gi;=0A=
=0A=
        if (sh.config.bloggerMode =3D=3D true)=0A=
            str =3D str.replace(br, '\n');=0A=
=0A=
        if (sh.config.stripBrs =3D=3D true)=0A=
            str =3D str.replace(br, '');=0A=
=0A=
        return str;=0A=
    };=0A=
=0A=
    /**=0A=
     * Removes all white space at the begining and end of a string.=0A=
     *=0A=
     * @param {String} str   String to trim.=0A=
     * @return {String}      Returns string without leading and =
following white space characters.=0A=
     */=0A=
    function trim(str)=0A=
    {=0A=
        return str.replace(/^\s+|\s+$/g, '');=0A=
    };=0A=
=0A=
    /**=0A=
     * Unindents a block of text by the lowest common indent amount.=0A=
     * @param {String} str   Text to unindent.=0A=
     * @return {String}      Returns unindented text block.=0A=
     */=0A=
    function unindent(str)=0A=
    {=0A=
        var lines =3D splitLines(fixInputString(str)),=0A=
            indents =3D new Array(),=0A=
            regex =3D /^\s*/,=0A=
            min =3D 1000=0A=
            ;=0A=
=0A=
        // go through every line and check for common number of indents=0A=
        for (var i =3D 0; i < lines.length && min > 0; i++)=0A=
        {=0A=
            var line =3D lines[i];=0A=
=0A=
            if (trim(line).length =3D=3D 0)=0A=
                continue;=0A=
=0A=
            var matches =3D regex.exec(line);=0A=
=0A=
            // In the event that just one line doesn't have leading =
white space=0A=
            // we can't unindent anything, so bail completely.=0A=
            if (matches =3D=3D null)=0A=
                return str;=0A=
=0A=
            min =3D Math.min(matches[0].length, min);=0A=
        }=0A=
=0A=
        // trim minimum common number of white space from the begining =
of every line=0A=
        if (min > 0)=0A=
            for (var i =3D 0; i < lines.length; i++)=0A=
                lines[i] =3D lines[i].substr(min);=0A=
=0A=
        return lines.join('\n');=0A=
    };=0A=
=0A=
    /**=0A=
     * Callback method for Array.sort() which sorts matches by=0A=
     * index position and then by length.=0A=
     *=0A=
     * @param {Match} m1	Left object.=0A=
     * @param {Match} m2    Right object.=0A=
     * @return {Number}     Returns -1, 0 or -1 as a comparison result.=0A=
     */=0A=
    function matchesSortCallback(m1, m2)=0A=
    {=0A=
        // sort matches by index first=0A=
        if(m1.index < m2.index)=0A=
            return -1;=0A=
        else if(m1.index > m2.index)=0A=
            return 1;=0A=
        else=0A=
        {=0A=
            // if index is the same, sort by length=0A=
            if(m1.length < m2.length)=0A=
                return -1;=0A=
            else if(m1.length > m2.length)=0A=
                return 1;=0A=
        }=0A=
=0A=
        return 0;=0A=
    };=0A=
=0A=
    /**=0A=
     * Executes given regular expression on provided code and returns all=0A=
     * matches that are found.=0A=
     *=0A=
     * @param {String} code    Code to execute regular expression on.=0A=
     * @param {Object} regex   Regular expression item info from =
<code>regexList</code> collection.=0A=
     * @return {Array}         Returns a list of Match objects.=0A=
     */=0A=
    function getMatches(code, regexInfo)=0A=
    {=0A=
        function defaultAdd(match, regexInfo)=0A=
        {=0A=
            return match[0];=0A=
        };=0A=
=0A=
        var index =3D 0,=0A=
            match =3D null,=0A=
            matches =3D [],=0A=
            func =3D regexInfo.func ? regexInfo.func : defaultAdd=0A=
            ;=0A=
=0A=
        while((match =3D regexInfo.regex.exec(code)) !=3D null)=0A=
        {=0A=
            var resultMatch =3D func(match, regexInfo);=0A=
=0A=
            if (typeof(resultMatch) =3D=3D 'string')=0A=
                resultMatch =3D [new sh.Match(resultMatch, match.index, =
regexInfo.css)];=0A=
=0A=
            matches =3D matches.concat(resultMatch);=0A=
        }=0A=
=0A=
        return matches;=0A=
    };=0A=
=0A=
    /**=0A=
     * Turns all URLs in the code into <a/> tags.=0A=
     * @param {String} code Input code.=0A=
     * @return {String} Returns code with </a> tags.=0A=
     */=0A=
    function processUrls(code)=0A=
    {=0A=
        var gt =3D /(.*)((&gt;|&lt;).*)/;=0A=
=0A=
        return code.replace(sh.regexLib.url, function(m)=0A=
        {=0A=
            var suffix =3D '',=0A=
                match =3D null=0A=
                ;=0A=
=0A=
            // We include &lt; and &gt; in the URL for the common cases =
like <http://google.com>=0A=
            // The problem is that they get transformed into =
&lt;http://google.com&gt;=0A=
            // Where as &gt; easily looks like part of the URL string.=0A=
=0A=
            if (match =3D gt.exec(m))=0A=
            {=0A=
                m =3D match[1];=0A=
                suffix =3D match[2];=0A=
            }=0A=
=0A=
            return '<a href=3D"' + m + '">' + m + '</a>' + suffix;=0A=
        });=0A=
    };=0A=
=0A=
    /**=0A=
     * Finds all <SCRIPT TYPE=3D"syntaxhighlighter" /> elementss.=0A=
     * @return {Array} Returns array of all found SyntaxHighlighter tags.=0A=
     */=0A=
    function getSyntaxHighlighterScriptTags()=0A=
    {=0A=
        var tags =3D document.getElementsByTagName('script'),=0A=
            result =3D []=0A=
            ;=0A=
=0A=
        for (var i =3D 0; i < tags.length; i++)=0A=
            if (tags[i].type =3D=3D 'syntaxhighlighter')=0A=
                result.push(tags[i]);=0A=
=0A=
        return result;=0A=
    };=0A=
=0A=
    /**=0A=
     * Strips <![CDATA[]]> from <SCRIPT /> content because it should be =
used=0A=
     * there in most cases for XHTML compliance.=0A=
     * @param {String} original	Input code.=0A=
     * @return {String} Returns code without leading <![CDATA[]]> tags.=0A=
     */=0A=
    function stripCData(original)=0A=
    {=0A=
        var left =3D '<![CDATA[',=0A=
            right =3D ']]>',=0A=
        // for some reason IE inserts some leading blanks here=0A=
            copy =3D trim(original),=0A=
            changed =3D false,=0A=
            leftLength =3D left.length,=0A=
            rightLength =3D right.length=0A=
            ;=0A=
=0A=
        if (copy.indexOf(left) =3D=3D 0)=0A=
        {=0A=
            copy =3D copy.substring(leftLength);=0A=
            changed =3D true;=0A=
        }=0A=
=0A=
        var copyLength =3D copy.length;=0A=
=0A=
        if (copy.indexOf(right) =3D=3D copyLength - rightLength)=0A=
        {=0A=
            copy =3D copy.substring(0, copyLength - rightLength);=0A=
            changed =3D true;=0A=
        }=0A=
=0A=
        return changed ? copy : original;=0A=
    };=0A=
=0A=
=0A=
    /**=0A=
     * Quick code mouse double click handler.=0A=
     */=0A=
    function quickCodeHandler(e)=0A=
    {=0A=
        var target =3D e.target,=0A=
            highlighterDiv =3D findParentElement(target, =
'.syntaxhighlighter'),=0A=
            container =3D findParentElement(target, '.container'),=0A=
            textarea =3D document.createElement('textarea'),=0A=
            highlighter=0A=
            ;=0A=
=0A=
        if (!container || !highlighterDiv || findElement(container, =
'textarea'))=0A=
            return;=0A=
=0A=
        highlighter =3D getHighlighterById(highlighterDiv.id);=0A=
=0A=
        // add source class name=0A=
        addClass(highlighterDiv, 'source');=0A=
=0A=
        // Have to go over each line and grab it's text, can't just do =
it on the=0A=
        // container because Firefox loses all \n where as Webkit =
doesn't.=0A=
        var lines =3D container.childNodes,=0A=
            code =3D []=0A=
            ;=0A=
=0A=
        for (var i =3D 0; i < lines.length; i++)=0A=
            code.push(lines[i].innerText || lines[i].textContent);=0A=
=0A=
        // using \r instead of \r or \r\n makes this work equally well =
on IE, FF and Webkit=0A=
        code =3D code.join('\r');=0A=
=0A=
        // For Webkit browsers, replace nbsp with a breaking space=0A=
        code =3D code.replace(/\u00a0/g, " ");=0A=
=0A=
        // inject <textarea/> tag=0A=
        textarea.appendChild(document.createTextNode(code));=0A=
        container.appendChild(textarea);=0A=
=0A=
        // preselect all text=0A=
        textarea.focus();=0A=
        textarea.select();=0A=
=0A=
        // set up handler for lost focus=0A=
        attachEvent(textarea, 'blur', function(e)=0A=
        {=0A=
            textarea.parentNode.removeChild(textarea);=0A=
            removeClass(highlighterDiv, 'source');=0A=
        });=0A=
    };=0A=
=0A=
    /**=0A=
     * Match object.=0A=
     */=0A=
    sh.Match =3D function(value, index, css)=0A=
    {=0A=
        this.value =3D value;=0A=
        this.index =3D index;=0A=
        this.length =3D value.length;=0A=
        this.css =3D css;=0A=
        this.brushName =3D null;=0A=
    };=0A=
=0A=
    sh.Match.prototype.toString =3D function()=0A=
    {=0A=
        return this.value;=0A=
    };=0A=
=0A=
    /**=0A=
     * Simulates HTML code with a scripting language embedded.=0A=
     *=0A=
     * @param {String} scriptBrushName Brush name of the scripting =
language.=0A=
     */=0A=
    sh.HtmlScript =3D function(scriptBrushName)=0A=
    {=0A=
        var brushClass =3D findBrush(scriptBrushName),=0A=
            scriptBrush,=0A=
            xmlBrush =3D new sh.brushes.Xml(),=0A=
            bracketsRegex =3D null,=0A=
            ref =3D this,=0A=
            methodsToExpose =3D 'getDiv getHtml init'.split(' ')=0A=
            ;=0A=
=0A=
        if (brushClass =3D=3D null)=0A=
            return;=0A=
=0A=
        scriptBrush =3D new brushClass();=0A=
=0A=
        for(var i =3D 0; i < methodsToExpose.length; i++)=0A=
            // make a closure so we don't lose the name after i changes=0A=
            (function() {=0A=
                var name =3D methodsToExpose[i];=0A=
=0A=
                ref[name] =3D function()=0A=
                {=0A=
                    return xmlBrush[name].apply(xmlBrush, arguments);=0A=
                };=0A=
            })();=0A=
=0A=
        if (scriptBrush.htmlScript =3D=3D null)=0A=
        {=0A=
            alert(sh.config.strings.brushNotHtmlScript + =
scriptBrushName);=0A=
            return;=0A=
        }=0A=
=0A=
        xmlBrush.regexList.push(=0A=
            { regex: scriptBrush.htmlScript.code, func: process }=0A=
        );=0A=
=0A=
        function offsetMatches(matches, offset)=0A=
        {=0A=
            for (var j =3D 0; j < matches.length; j++)=0A=
                matches[j].index +=3D offset;=0A=
        }=0A=
=0A=
        function process(match, info)=0A=
        {=0A=
            var code =3D match.code,=0A=
                matches =3D [],=0A=
                regexList =3D scriptBrush.regexList,=0A=
                offset =3D match.index + match.left.length,=0A=
                htmlScript =3D scriptBrush.htmlScript,=0A=
                result=0A=
                ;=0A=
=0A=
            // add all matches from the code=0A=
            for (var i =3D 0; i < regexList.length; i++)=0A=
            {=0A=
                result =3D getMatches(code, regexList[i]);=0A=
                offsetMatches(result, offset);=0A=
                matches =3D matches.concat(result);=0A=
            }=0A=
=0A=
            // add left script bracket=0A=
            if (htmlScript.left !=3D null && match.left !=3D null)=0A=
            {=0A=
                result =3D getMatches(match.left, htmlScript.left);=0A=
                offsetMatches(result, match.index);=0A=
                matches =3D matches.concat(result);=0A=
            }=0A=
=0A=
            // add right script bracket=0A=
            if (htmlScript.right !=3D null && match.right !=3D null)=0A=
            {=0A=
                result =3D getMatches(match.right, htmlScript.right);=0A=
                offsetMatches(result, match.index + =
match[0].lastIndexOf(match.right));=0A=
                matches =3D matches.concat(result);=0A=
            }=0A=
=0A=
            for (var j =3D 0; j < matches.length; j++)=0A=
                matches[j].brushName =3D brushClass.brushName;=0A=
=0A=
            return matches;=0A=
        }=0A=
    };=0A=
=0A=
    /**=0A=
     * Main Highlither class.=0A=
     * @constructor=0A=
     */=0A=
    sh.Highlighter =3D function()=0A=
    {=0A=
        // not putting any code in here because of the prototype =
inheritance=0A=
    };=0A=
=0A=
    sh.Highlighter.prototype =3D {=0A=
        /**=0A=
         * Returns value of the parameter passed to the highlighter.=0A=
         * @param {String} name				Name of the parameter.=0A=
         * @param {Object} defaultValue		Default value.=0A=
         * @return {Object}					Returns found value or default value =
otherwise.=0A=
         */=0A=
        getParam: function(name, defaultValue)=0A=
        {=0A=
            var result =3D this.params[name];=0A=
            return toBoolean(result =3D=3D null ? defaultValue : result);=0A=
        },=0A=
=0A=
        /**=0A=
         * Shortcut to document.createElement().=0A=
         * @param {String} name		Name of the element to create (DIV, A, =
etc).=0A=
         * @return {HTMLElement}	Returns new HTML element.=0A=
         */=0A=
        create: function(name)=0A=
        {=0A=
            return document.createElement(name);=0A=
        },=0A=
=0A=
        /**=0A=
         * Applies all regular expression to the code and stores all =
found=0A=
         * matches in the `this.matches` array.=0A=
         * @param {Array} regexList		List of regular expressions.=0A=
         * @param {String} code			Source code.=0A=
         * @return {Array}				Returns list of matches.=0A=
         */=0A=
        findMatches: function(regexList, code)=0A=
        {=0A=
            var result =3D [];=0A=
=0A=
            if (regexList !=3D null)=0A=
                for (var i =3D 0; i < regexList.length; i++)=0A=
                    // BUG: length returns len+1 for array if methods =
added to prototype chain (oising@gmail.com)=0A=
                    if (typeof (regexList[i]) =3D=3D "object")=0A=
                        result =3D result.concat(getMatches(code, =
regexList[i]));=0A=
=0A=
            // sort and remove nested the matches=0A=
            return =
this.removeNestedMatches(result.sort(matchesSortCallback));=0A=
        },=0A=
=0A=
        /**=0A=
         * Checks to see if any of the matches are inside of other =
matches.=0A=
         * This process would get rid of highligted strings inside =
comments,=0A=
         * keywords inside strings and so on.=0A=
         */=0A=
        removeNestedMatches: function(matches)=0A=
        {=0A=
            // Optimized by Jose Prado (http://joseprado.com)=0A=
            for (var i =3D 0; i < matches.length; i++)=0A=
            {=0A=
                if (matches[i] =3D=3D=3D null)=0A=
                    continue;=0A=
=0A=
                var itemI =3D matches[i],=0A=
                    itemIEndPos =3D itemI.index + itemI.length=0A=
                    ;=0A=
=0A=
                for (var j =3D i + 1; j < matches.length && matches[i] =
!=3D=3D null; j++)=0A=
                {=0A=
                    var itemJ =3D matches[j];=0A=
=0A=
                    if (itemJ =3D=3D=3D null)=0A=
                        continue;=0A=
                    else if (itemJ.index > itemIEndPos)=0A=
                        break;=0A=
                    else if (itemJ.index =3D=3D itemI.index && =
itemJ.length > itemI.length)=0A=
                        matches[i] =3D null;=0A=
                    else if (itemJ.index >=3D itemI.index && itemJ.index =
< itemIEndPos)=0A=
                        matches[j] =3D null;=0A=
                }=0A=
            }=0A=
=0A=
            return matches;=0A=
        },=0A=
=0A=
        /**=0A=
         * Creates an array containing integer line numbers starting =
from the 'first-line' param.=0A=
         * @return {Array} Returns array of integers.=0A=
         */=0A=
        figureOutLineNumbers: function(code)=0A=
        {=0A=
            var lines =3D [],=0A=
                firstLine =3D parseInt(this.getParam('first-line'))=0A=
                ;=0A=
=0A=
            eachLine(code, function(line, index)=0A=
            {=0A=
                lines.push(index + firstLine);=0A=
            });=0A=
=0A=
            return lines;=0A=
        },=0A=
=0A=
        /**=0A=
         * Determines if specified line number is in the highlighted =
list.=0A=
         */=0A=
        isLineHighlighted: function(lineNumber)=0A=
        {=0A=
            var list =3D this.getParam('highlight', []);=0A=
=0A=
            if (typeof(list) !=3D 'object' && list.push =3D=3D null)=0A=
                list =3D [ list ];=0A=
=0A=
            return indexOf(list, lineNumber.toString()) !=3D -1;=0A=
        },=0A=
=0A=
        /**=0A=
         * Generates HTML markup for a single line of code while =
determining alternating line style.=0A=
         * @param {Integer} lineNumber	Line number.=0A=
         * @param {String} code Line	HTML markup.=0A=
         * @return {String}				Returns HTML markup.=0A=
         */=0A=
        getLineHtml: function(lineIndex, lineNumber, code)=0A=
        {=0A=
            var classes =3D [=0A=
                'line',=0A=
                'number' + lineNumber,=0A=
                'index' + lineIndex,=0A=
                'alt' + (lineNumber % 2 =3D=3D 0 ? 1 : 2).toString()=0A=
            ];=0A=
=0A=
            if (this.isLineHighlighted(lineNumber))=0A=
                classes.push('highlighted');=0A=
=0A=
            if (lineNumber =3D=3D 0)=0A=
                classes.push('break');=0A=
=0A=
            return '<div class=3D"' + classes.join(' ') + '">' + code + =
'</div>';=0A=
        },=0A=
=0A=
        /**=0A=
         * Generates HTML markup for line number column.=0A=
         * @param {String} code			Complete code HTML markup.=0A=
         * @param {Array} lineNumbers	Calculated line numbers.=0A=
         * @return {String}				Returns HTML markup.=0A=
         */=0A=
        getLineNumbersHtml: function(code, lineNumbers)=0A=
        {=0A=
            var html =3D '',=0A=
                count =3D splitLines(code).length,=0A=
                firstLine =3D parseInt(this.getParam('first-line')),=0A=
                pad =3D this.getParam('pad-line-numbers')=0A=
                ;=0A=
=0A=
            if (pad =3D=3D true)=0A=
                pad =3D (firstLine + count - 1).toString().length;=0A=
            else if (isNaN(pad) =3D=3D true)=0A=
                pad =3D 0;=0A=
=0A=
            for (var i =3D 0; i < count; i++)=0A=
            {=0A=
                var lineNumber =3D lineNumbers ? lineNumbers[i] : =
firstLine + i,=0A=
                    code =3D lineNumber =3D=3D 0 ? sh.config.space : =
padNumber(lineNumber, pad)=0A=
                    ;=0A=
=0A=
                html +=3D this.getLineHtml(i, lineNumber, code);=0A=
            }=0A=
=0A=
            return html;=0A=
        },=0A=
=0A=
        /**=0A=
         * Splits block of text into individual DIV lines.=0A=
         * @param {String} code			Code to highlight.=0A=
         * @param {Array} lineNumbers	Calculated line numbers.=0A=
         * @return {String}				Returns highlighted code in HTML form.=0A=
         */=0A=
        getCodeLinesHtml: function(html, lineNumbers)=0A=
        {=0A=
            html =3D trim(html);=0A=
=0A=
            var lines =3D splitLines(html),=0A=
                padLength =3D this.getParam('pad-line-numbers'),=0A=
                firstLine =3D parseInt(this.getParam('first-line')),=0A=
                html =3D '',=0A=
                brushName =3D this.getParam('brush')=0A=
                ;=0A=
=0A=
            for (var i =3D 0; i < lines.length; i++)=0A=
            {=0A=
                var line =3D lines[i],=0A=
                    indent =3D /^(&nbsp;|\s)+/.exec(line),=0A=
                    spaces =3D null,=0A=
                    lineNumber =3D lineNumbers ? lineNumbers[i] : =
firstLine + i;=0A=
                ;=0A=
=0A=
                if (indent !=3D null)=0A=
                {=0A=
                    spaces =3D indent[0].toString();=0A=
                    line =3D line.substr(spaces.length);=0A=
                    spaces =3D spaces.replace(' ', sh.config.space);=0A=
                }=0A=
=0A=
                line =3D trim(line);=0A=
=0A=
                if (line.length =3D=3D 0)=0A=
                    line =3D sh.config.space;=0A=
=0A=
                html +=3D this.getLineHtml(=0A=
                    i,=0A=
                    lineNumber,=0A=
                    (spaces !=3D null ? '<code class=3D"' + brushName + =
' spaces">' + spaces + '</code>' : '') + line=0A=
                );=0A=
            }=0A=
=0A=
            return html;=0A=
        },=0A=
=0A=
        /**=0A=
         * Returns HTML for the table title or empty string if title is =
null.=0A=
         */=0A=
        getTitleHtml: function(title)=0A=
        {=0A=
            return title ? '<caption>' + title + '</caption>' : '';=0A=
        },=0A=
=0A=
        /**=0A=
         * Finds all matches in the source code.=0A=
         * @param {String} code		Source code to process matches in.=0A=
         * @param {Array} matches	Discovered regex matches.=0A=
         * @return {String} Returns formatted HTML with processed mathes.=0A=
         */=0A=
        getMatchesHtml: function(code, matches)=0A=
        {=0A=
            var pos =3D 0,=0A=
                result =3D '',=0A=
                brushName =3D this.getParam('brush', '')=0A=
                ;=0A=
=0A=
            function getBrushNameCss(match)=0A=
            {=0A=
                var result =3D match ? (match.brushName || brushName) : =
brushName;=0A=
                return result ? result + ' ' : '';=0A=
            };=0A=
=0A=
            // Finally, go through the final list of matches and pull =
the all=0A=
            // together adding everything in between that isn't a match.=0A=
            for (var i =3D 0; i < matches.length; i++)=0A=
            {=0A=
                var match =3D matches[i],=0A=
                    matchBrushName=0A=
                    ;=0A=
=0A=
                if (match =3D=3D=3D null || match.length =3D=3D=3D 0)=0A=
                    continue;=0A=
=0A=
                matchBrushName =3D getBrushNameCss(match);=0A=
=0A=
                result +=3D wrapLinesWithCode(code.substr(pos, =
match.index - pos), matchBrushName + 'plain')=0A=
                    + wrapLinesWithCode(match.value, matchBrushName + =
match.css)=0A=
                ;=0A=
=0A=
                pos =3D match.index + match.length + (match.offset || 0);=0A=
            }=0A=
=0A=
            // don't forget to add whatever's remaining in the string=0A=
            result +=3D wrapLinesWithCode(code.substr(pos), =
getBrushNameCss() + 'plain');=0A=
=0A=
            return result;=0A=
        },=0A=
=0A=
        /**=0A=
         * Generates HTML markup for the whole syntax highlighter.=0A=
         * @param {String} code Source code.=0A=
         * @return {String} Returns HTML markup.=0A=
         */=0A=
        getHtml: function(code)=0A=
        {=0A=
            var html =3D '',=0A=
                classes =3D [ 'syntaxhighlighter' ],=0A=
                tabSize,=0A=
                matches,=0A=
                lineNumbers=0A=
                ;=0A=
=0A=
            // process light mode=0A=
            if (this.getParam('light') =3D=3D true)=0A=
                this.params.toolbar =3D this.params.gutter =3D false;=0A=
=0A=
            className =3D 'syntaxhighlighter';=0A=
=0A=
            if (this.getParam('collapse') =3D=3D true)=0A=
                classes.push('collapsed');=0A=
=0A=
            if ((gutter =3D this.getParam('gutter')) =3D=3D false)=0A=
                classes.push('nogutter');=0A=
=0A=
            // add custom user style name=0A=
            classes.push(this.getParam('class-name'));=0A=
=0A=
            // add brush alias to the class name for custom CSS=0A=
            classes.push(this.getParam('brush'));=0A=
=0A=
            code =3D trimFirstAndLastLines(code)=0A=
                .replace(/\r/g, ' ') // IE lets these buggers through=0A=
            ;=0A=
=0A=
            tabSize =3D this.getParam('tab-size');=0A=
=0A=
            // replace tabs with spaces=0A=
            code =3D this.getParam('smart-tabs') =3D=3D true=0A=
                ? processSmartTabs(code, tabSize)=0A=
                : processTabs(code, tabSize)=0A=
            ;=0A=
=0A=
            // unindent code by the common indentation=0A=
            if (this.getParam('unindent'))=0A=
                code =3D unindent(code);=0A=
=0A=
            if (gutter)=0A=
                lineNumbers =3D this.figureOutLineNumbers(code);=0A=
=0A=
            // find matches in the code using brushes regex list=0A=
            matches =3D this.findMatches(this.regexList, code);=0A=
            // processes found matches into the html=0A=
            html =3D this.getMatchesHtml(code, matches);=0A=
            // finally, split all lines so that they wrap well=0A=
            html =3D this.getCodeLinesHtml(html, lineNumbers);=0A=
=0A=
            // finally, process the links=0A=
            if (this.getParam('auto-links'))=0A=
                html =3D processUrls(html);=0A=
=0A=
            if (typeof(navigator) !=3D 'undefined' && =
navigator.userAgent && navigator.userAgent.match(/MSIE/))=0A=
                classes.push('ie');=0A=
=0A=
            html =3D=0A=
                '<div id=3D"' + getHighlighterId(this.id) + '" =
class=3D"' + classes.join(' ') + '">'=0A=
                    + (this.getParam('toolbar') ? =
sh.toolbar.getHtml(this) : '')=0A=
                    + '<table border=3D"0" cellpadding=3D"0" =
cellspacing=3D"0">'=0A=
                    + this.getTitleHtml(this.getParam('title'))=0A=
                    + '<tbody>'=0A=
                    + '<tr>'=0A=
                    + (gutter ? '<td class=3D"gutter">' + =
this.getLineNumbersHtml(code) + '</td>' : '')=0A=
                    + '<td class=3D"code">'=0A=
                    + '<div class=3D"container">'=0A=
                    + html=0A=
                    + '</div>'=0A=
                    + '</td>'=0A=
                    + '</tr>'=0A=
                    + '</tbody>'=0A=
                    + '</table>'=0A=
                    + '</div>'=0A=
            ;=0A=
=0A=
            return html;=0A=
        },=0A=
=0A=
        /**=0A=
         * Highlights the code and returns complete HTML.=0A=
         * @param {String} code     Code to highlight.=0A=
         * @return {Element}        Returns container DIV element with =
all markup.=0A=
         */=0A=
        getDiv: function(code)=0A=
        {=0A=
            if (code =3D=3D=3D null)=0A=
                code =3D '';=0A=
=0A=
            this.code =3D code;=0A=
=0A=
            var div =3D this.create('div');=0A=
=0A=
            // create main HTML=0A=
            div.innerHTML =3D this.getHtml(code);=0A=
=0A=
            // set up click handlers=0A=
            if (this.getParam('toolbar'))=0A=
                attachEvent(findElement(div, '.toolbar'), 'click', =
sh.toolbar.handler);=0A=
=0A=
            if (this.getParam('quick-code'))=0A=
                attachEvent(findElement(div, '.code'), 'dblclick', =
quickCodeHandler);=0A=
=0A=
            return div;=0A=
        },=0A=
=0A=
        /**=0A=
         * Initializes the highlighter/brush.=0A=
         *=0A=
         * Constructor isn't used for initialization so that nothing =
executes during necessary=0A=
         * `new SyntaxHighlighter.Highlighter()` call when setting up =
brush inheritence.=0A=
         *=0A=
         * @param {Hash} params Highlighter parameters.=0A=
         */=0A=
        init: function(params)=0A=
        {=0A=
            this.id =3D guid();=0A=
=0A=
            // register this instance in the highlighters list=0A=
            storeHighlighter(this);=0A=
=0A=
            // local params take precedence over defaults=0A=
            this.params =3D merge(sh.defaults, params || {})=0A=
=0A=
            // process light mode=0A=
            if (this.getParam('light') =3D=3D true)=0A=
                this.params.toolbar =3D this.params.gutter =3D false;=0A=
        },=0A=
=0A=
        /**=0A=
         * Converts space separated list of keywords into a regular =
expression string.=0A=
         * @param {String} str    Space separated keywords.=0A=
         * @return {String}       Returns regular expression string.=0A=
         */=0A=
        getKeywords: function(str)=0A=
        {=0A=
            str =3D str=0A=
                .replace(/^\s+|\s+$/g, '')=0A=
                .replace(/\s+/g, '|')=0A=
            ;=0A=
=0A=
            return '\\b(?:' + str + ')\\b';=0A=
        },=0A=
=0A=
        /**=0A=
         * Makes a brush compatible with the `html-script` functionality.=0A=
         * @param {Object} regexGroup Object containing `left` and =
`right` regular expressions.=0A=
         */=0A=
        forHtmlScript: function(regexGroup)=0A=
        {=0A=
            var regex =3D { 'end' : regexGroup.right.source };=0A=
=0A=
            if(regexGroup.eof)=0A=
                regex.end =3D "(?:(?:" + regex.end + ")|$)";=0A=
=0A=
            this.htmlScript =3D {=0A=
                left : { regex: regexGroup.left, css: 'script' },=0A=
                right : { regex: regexGroup.right, css: 'script' },=0A=
                code : new XRegExp(=0A=
                    "(?<left>" + regexGroup.left.source + ")" +=0A=
                        "(?<code>.*?)" +=0A=
                        "(?<right>" + regex.end + ")",=0A=
                    "sgi"=0A=
                )=0A=
            };=0A=
        }=0A=
    }; // end of Highlighter=0A=
=0A=
    return sh;=0A=
}(); // end of anonymous function=0A=
=0A=
// CommonJS=0A=
typeof(exports) !=3D 'undefined' ? exports.SyntaxHighlighter =3D =
SyntaxHighlighter : null;=0A=
=0A=
;(function()=0A=
{=0A=
    // CommonJS=0A=
    SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
    function Brush()=0A=
    {=0A=
        // Created by Peter Atoria @ http://iAtoria.com=0A=
=0A=
        var inits 	 =3D  'class interface function package';=0A=
=0A=
        var keywords =3D	'-Infinity ...rest Array as AS3 Boolean break =
case catch const continue Date decodeURI ' +=0A=
                'decodeURIComponent default delete do dynamic each else =
encodeURI encodeURIComponent escape ' +=0A=
                'extends false final finally flash_proxy for get if =
implements import in include Infinity ' +=0A=
                'instanceof int internal is isFinite isNaN isXMLName =
label namespace NaN native new null ' +=0A=
                'Null Number Object object_proxy override parseFloat =
parseInt private protected public ' +=0A=
                'return set static String super switch this throw true =
try typeof uint undefined unescape ' +=0A=
                'use void while with'=0A=
            ;=0A=
=0A=
        this.regexList =3D [=0A=
            { regex: SyntaxHighlighter.regexLib.singleLineCComments,	=
css: 'comments' },		// one line comments=0A=
            { regex: SyntaxHighlighter.regexLib.multiLineCComments,		=
css: 'comments' },		// multiline comments=0A=
            { regex: SyntaxHighlighter.regexLib.doubleQuotedString,		=
css: 'string' },		// double quoted strings=0A=
            { regex: SyntaxHighlighter.regexLib.singleQuotedString,		=
css: 'string' },		// single quoted strings=0A=
            { regex: /\b([\d]+(\.[\d]+)?|0x[a-f0-9]+)\b/gi,				css: =
'value' },			// numbers=0A=
            { regex: new RegExp(this.getKeywords(inits), 'gm'),			css: =
'color3' },		// initializations=0A=
            { regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: =
'keyword' },		// keywords=0A=
            { regex: new RegExp('var', 'gm'),							css: 'variable' },		=
// variable=0A=
            { regex: new RegExp('trace', 'gm'),							css: 'color1' }			=
// trace=0A=
        ];=0A=
=0A=
        this.forHtmlScript(SyntaxHighlighter.regexLib.scriptScriptTags);=0A=
    };=0A=
=0A=
    Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
    Brush.aliases	=3D ['actionscript3', 'as3'];=0A=
=0A=
    SyntaxHighlighter.brushes.AS3 =3D Brush;=0A=
=0A=
    // CommonJS=0A=
    typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
=0A=
;(function()=0A=
{=0A=
    // CommonJS=0A=
    SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
    function Brush()=0A=
    {=0A=
        // AppleScript brush by David Chambers=0A=
        // http://davidchambersdesign.com/=0A=
        var keywords   =3D 'after before beginning continue copy each =
end every from return get global in local named of set some that the =
then times to where whose with without';=0A=
        var ordinals   =3D 'first second third fourth fifth sixth =
seventh eighth ninth tenth last front back middle';=0A=
        var specials   =3D 'activate add alias AppleScript ask =
attachment boolean class constant delete duplicate empty exists false id =
integer list make message modal modified new no paragraph pi properties =
quit real record remove rest result reveal reverse run running save =
string true word yes';=0A=
=0A=
        this.regexList =3D [=0A=
=0A=
            { regex: /(--|#).*$/gm,=0A=
                css: 'comments' },=0A=
=0A=
            { regex: /\(\*(?:[\s\S]*?\(\*[\s\S]*?\*\))*[\s\S]*?\*\)/gm, =
// support nested comments=0A=
                css: 'comments' },=0A=
=0A=
            { regex: /"[\s\S]*?"/gm,=0A=
                css: 'string' },=0A=
=0A=
            { regex: /(?:,|:||'s\b|\(|\)|\{|\}||\b\w*)/g,=0A=
                css: 'color1' },=0A=
=0A=
            { regex: /(-)?(\d)+(\.(\d)?)?(E\+(\d)+)?/g, // numbers=0A=
                css: 'color1' },=0A=
=0A=
            { regex: /(?:&(amp;|gt;|lt;)?|=3D| =
|>|<|=E2=89=A5|>=3D|=E2=89=A4|<=3D|\*|\+|-|\/|=C3=B7|\^)/g,=0A=
                css: 'color2' },=0A=
=0A=
            { regex: =
/\b(?:and|as|div|mod|not|or|return(?!\s&)(ing)?|equals|(is(n't| not)? =
)?equal( to)?|does(n't| not) equal|(is(n't| not)? )?(greater|less) than( =
or equal( to)?)?|(comes|does(n't| not) come) (after|before)|is(n't| =
not)?( in)? (back|front) of|is(n't| not)? behind|is(n't| not)?( =
(in|contained by))?|does(n't| not) =
contain|contain(s)?|(start|begin|end)(s)? with|((but|end) =
)?(consider|ignor)ing|prop(erty)?|(a )?ref(erence)?( to)?|repeat =
(until|while|with)|((end|exit) )?repeat|((else|end) )?if|else|(end =
)?(script|tell|try)|(on )?error|(put )?into|(of )?(it|me)|its|my|with =
(timeout( of)?|transaction)|end (timeout|transaction))\b/g,=0A=
                css: 'keyword' },=0A=
=0A=
            { regex: /\b\d+(st|nd|rd|th)\b/g, // ordinals=0A=
                css: 'keyword' },=0A=
=0A=
            { regex: =
/\b(?:about|above|against|around|at|below|beneath|beside|between|by|(apar=
t|aside) from|(instead|out) =
of|into|on(to)?|over|since|thr(ough|u)|under)\b/g,=0A=
                css: 'color3' },=0A=
=0A=
            { regex: /\b(?:adding folder items to|after =
receiving|choose( ((remote )?application|color|folder|from =
list|URL))?|clipboard info|set the clipboard to|(the )?clipboard|entire =
contents|display(ing| (alert|dialog|mode))?|document( (edited|file|nib =
name))?|file( (name|type))?|(info )?for|giving up after|(name =
)?extension|quoted form|return(ed)?|second(?! item)(s)?|list =
(disks|folder)|text item(s| delimiters)?|(Unicode )?text|(disk =
)?item(s)?|((current|list) )?view|((container|key) )?window|with =
(data|icon( =
(caution|note|stop))?|parameter(s)?|prompt|properties|seed|title)|case|di=
acriticals|hyphens|numeric strings|punctuation|white space|folder =
creation|application(s( folder)?| (processes|scripts =
position|support))?|((desktop )?(pictures =
)?|(documents|downloads|favorites|home|keychain|library|movies|music|publ=
ic|scripts|sites|system|users|utilities|workflows) =
)folder|desktop|Folder Action scripts|font(s| panel)?|help|internet =
plugins|modem scripts|(system )?preferences|printer =
descriptions|scripting (additions|components)|shared =
(documents|libraries)|startup (disk|items)|temporary items|trash|on =
server|in AppleTalk zone|((as|long|short) )?user name|user =
(ID|locale)|(with )?password|in (bundle( with =
identifier)?|directory)|(close|open for) access|read|write( =
permission)?|(g|s)et eof|using( delimiters)?|starting at|default =
(answer|button|color|country =
code|entr(y|ies)|identifiers|items|name|location|script editor)|hidden( =
answer)?|open(ed| (location|untitled))?|error (handling|reporting)|(do( =
shell)?|load|run|store) script|administrator privileges|altering line =
endings|get volume settings|(alert|boot|input|mount|output|set) =
volume|output muted|(fax|random )?number|round(ing)?|up|down|toward =
zero|to nearest|as taught in school|system =
(attribute|info)|((AppleScript( Studio)?|system) )?version|(home =
)?directory|(IPv4|primary Ethernet) address|CPU (type|speed)|physical =
memory|time (stamp|to GMT)|replacing|ASCII (character|number)|localized =
string|from table|offset|summarize|beep|delay|say|(empty|multiple) =
selections allowed|(of|preferred) type|invisibles|showing( package =
contents)?|editable URL|(File|FTP|News|Media|Web) [Ss]ervers|Telnet =
hosts|Directory services|Remote applications|waiting until =
completion|saving( (in|to))?|path (for|to( (((current|frontmost) =
)?application|resource))?)|POSIX (file|path)|(background|RGB) =
color|(OK|cancel) button name|cancel button|button(s)?|cubic =
((centi)?met(re|er)s|yards|feet|inches)|square =
((kilo)?met(re|er)s|miles|yards|feet)|(centi|kilo)?met(re|er)s|miles|yard=
s|feet|inches|lit(re|er)s|gallons|quarts|(kilo)?grams|ounces|pounds|degre=
es (Celsius|Fahrenheit|Kelvin)|print( =
(dialog|settings))?|clos(e(able)?|ing)|(de)?miniaturized|miniaturizable|z=
oom(ed|able)|attribute run|action =
(method|property|title)|phone|email|((start|end)ing|home) =
page|((birth|creation|current|custom|modification) )?date|((((phonetic =
)?(first|last|middle))|computer|host|maiden|related) =
|nick)?name|aim|icq|jabber|msn|yahoo|address(es)?|save =
addressbook|should enable action|city|country( code)?|formatte(r|d =
address)|(palette )?label|state|street|zip|AIM [Hh]andle(s)?|my =
card|select(ion| all)?|unsaved|(alpha =
)?value|entr(y|ies)|group|(ICQ|Jabber|MSN) =
handle|person|people|company|department|icon image|job =
title|note|organization|suffix|vcard|url|copies|collating|pages =
(across|down)|request print time|target( printer)?|((GUI =
Scripting|Script menu) )?enabled|show Computer =
scripts|(de)?activated|awake from nib|became (key|main)|call method|of =
(class|object)|center|clicked toolbar item|closed|for =
document|exposed|(can )?hide|idle|keyboard (down|up)|event( =
(number|type))?|launch(ed)?|load (image|movie|nib|sound)|owner|log|mouse =
(down|dragged|entered|exited|moved|up)|move|column|localization|resource|=
script|register|drag (info|types)|resigned =
(active|key|main)|resiz(e(d)?|able)|right mouse (down|dragged|up)|scroll =
wheel|(at )?index|should (close|open( untitled)?|quit( after last window =
closed)?|zoom)|((proposed|screen) )?bounds|show(n)?|behind|in front =
of|size (mode|to fit)|update(d| toolbar item)?|was =
(hidden|miniaturized)|will (become active|close|finish =
launching|hide|miniaturize|move|open|quit|(resign =
)?active|((maximum|minimum|proposed) )?size|show|zoom)|bundle|data =
source|movie|pasteboard|sound|tool(bar| tip)|(color|open|save) =
panel|coordinate system|frontmost|main( =
(bundle|menu|window))?|((services|(excluded from )?windows) =
)?menu|((executable|frameworks|resource|scripts|shared =
(frameworks|support)) )?path|(selected item )?identifier|data|content(s| =
view)?|character(s)?|click count|(command|control|option|shift) key =
down|context|delta (x|y|z)|key( code)?|location|pressure|unmodified =
characters|types|(first )?responder|playing|(allowed|selectable) =
identifiers|allows customization|(auto saves =
)?configuration|visible|image( name)?|menu form =
representation|tag|user(-| )defaults|associated file name|(auto|needs) =
display|current field editor|floating|has (resize =
indicator|shadow)|hides when deactivated|level|minimized =
(image|title)|opaque|position|release when closed|sheet|title(d)?)\b/g,=0A=
                css: 'color3' },=0A=
=0A=
            { regex: new RegExp(this.getKeywords(specials), 'gm'), css: =
'color3' },=0A=
            { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: =
'keyword' },=0A=
            { regex: new RegExp(this.getKeywords(ordinals), 'gm'), css: =
'keyword' }=0A=
        ];=0A=
    };=0A=
=0A=
    Brush.prototype =3D new SyntaxHighlighter.Highlighter();=0A=
    Brush.aliases =3D ['applescript'];=0A=
=0A=
    SyntaxHighlighter.brushes.AppleScript =3D Brush;=0A=
=0A=
    // CommonJS=0A=
    typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		var keywords =3D	'if fi then elif else for do done until while break =
continue case esac function return in eq ne ge le';=0A=
		var commands =3D  'alias apropos awk basename bash bc bg builtin bzip2 =
cal cat cd cfdisk chgrp chmod chown chroot' +=0A=
						'cksum clear cmp comm command cp cron crontab csplit cut date dc =
dd ddrescue declare df ' +=0A=
						'diff diff3 dig dir dircolors dirname dirs du echo egrep eject =
enable env ethtool eval ' +=0A=
						'exec exit expand export expr false fdformat fdisk fg fgrep file =
find fmt fold format ' +=0A=
						'free fsck ftp gawk getopts grep groups gzip hash head history =
hostname id ifconfig ' +=0A=
						'import install join kill less let ln local locate logname logout =
look lpc lpr lprint ' +=0A=
						'lprintd lprintq lprm ls lsof make man mkdir mkfifo mkisofs mknod =
more mount mtools ' +=0A=
						'mv netstat nice nl nohup nslookup open op passwd paste pathchk =
ping popd pr printcap ' +=0A=
						'printenv printf ps pushd pwd quota quotacheck quotactl ram rcp =
read readonly renice ' +=0A=
						'remsync rm rmdir rsync screen scp sdiff sed select seq set sftp =
shift shopt shutdown ' +=0A=
						'sleep sort source split ssh strace su sudo sum symlink sync tail =
tar tee test time ' +=0A=
						'times touch top traceroute trap tr true tsort tty type ulimit =
umask umount unalias ' +=0A=
						'uname unexpand uniq units unset unshar useradd usermod users =
uuencode uudecode v vdir ' +=0A=
						'vi watch wc whereis which who whoami Wget xargs yes'=0A=
						;=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: /^#!.*$/gm,											css: 'preprocessor bold' },=0A=
			{ regex: /\/[\w-\/]+/gm,										css: 'plain' },=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLinePerlComments,		css: =
'comments' },		// one line comments=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,			css: =
'string' },		// double quoted strings=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,			css: =
'string' },		// single quoted strings=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),			css: =
'keyword' },		// keywords=0A=
			{ regex: new RegExp(this.getKeywords(commands), 'gm'),			css: =
'functions' }		// commands=0A=
			];=0A=
	}=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['bash', 'shell', 'sh'];=0A=
=0A=
	SyntaxHighlighter.brushes.Bash =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		// Contributed by Jen=0A=
		// =
http://www.jensbits.com/2009/05/14/coldfusion-brush-for-syntaxhighlighter=
-plus=0A=
	=0A=
		var funcs	=3D	'Abs ACos AddSOAPRequestHeader AddSOAPResponseHeader =
AjaxLink AjaxOnLoad ArrayAppend ArrayAvg ArrayClear ArrayDeleteAt ' + =0A=
						'ArrayInsertAt ArrayIsDefined ArrayIsEmpty ArrayLen ArrayMax =
ArrayMin ArraySet ArraySort ArraySum ArraySwap ArrayToList ' + =0A=
						'Asc ASin Atn BinaryDecode BinaryEncode BitAnd BitMaskClear =
BitMaskRead BitMaskSet BitNot BitOr BitSHLN BitSHRN BitXor ' + =0A=
						'Ceiling CharsetDecode CharsetEncode Chr CJustify Compare =
CompareNoCase Cos CreateDate CreateDateTime CreateObject ' + =0A=
						'CreateODBCDate CreateODBCDateTime CreateODBCTime CreateTime =
CreateTimeSpan CreateUUID DateAdd DateCompare DateConvert ' + =0A=
						'DateDiff DateFormat DatePart Day DayOfWeek DayOfWeekAsString =
DayOfYear DaysInMonth DaysInYear DE DecimalFormat DecrementValue ' + =0A=
						'Decrypt DecryptBinary DeleteClientVariable DeserializeJSON =
DirectoryExists DollarFormat DotNetToCFType Duplicate Encrypt ' + =0A=
						'EncryptBinary Evaluate Exp ExpandPath FileClose FileCopy =
FileDelete FileExists FileIsEOF FileMove FileOpen FileRead ' + =0A=
						'FileReadBinary FileReadLine FileSetAccessMode FileSetAttribute =
FileSetLastModified FileWrite Find FindNoCase FindOneOf ' + =0A=
						'FirstDayOfMonth Fix FormatBaseN GenerateSecretKey GetAuthUser =
GetBaseTagData GetBaseTagList GetBaseTemplatePath ' + =0A=
						'GetClientVariablesList GetComponentMetaData GetContextRoot =
GetCurrentTemplatePath GetDirectoryFromPath GetEncoding ' + =0A=
						'GetException GetFileFromPath GetFileInfo GetFunctionList =
GetGatewayHelper GetHttpRequestData GetHttpTimeString ' + =0A=
						'GetK2ServerDocCount GetK2ServerDocCountLimit GetLocale =
GetLocaleDisplayName GetLocalHostIP GetMetaData GetMetricData ' + =0A=
						'GetPageContext GetPrinterInfo GetProfileSections GetProfileString =
GetReadableImageFormats GetSOAPRequest GetSOAPRequestHeader ' + =0A=
						'GetSOAPResponse GetSOAPResponseHeader GetTempDirectory =
GetTempFile GetTemplatePath GetTickCount GetTimeZoneInfo GetToken ' + =0A=
						'GetUserRoles GetWriteableImageFormats Hash Hour HTMLCodeFormat =
HTMLEditFormat IIf ImageAddBorder ImageBlur ImageClearRect ' + =0A=
						'ImageCopy ImageCrop ImageDrawArc ImageDrawBeveledRect =
ImageDrawCubicCurve ImageDrawLine ImageDrawLines ImageDrawOval ' + =0A=
						'ImageDrawPoint ImageDrawQuadraticCurve ImageDrawRect =
ImageDrawRoundRect ImageDrawText ImageFlip ImageGetBlob =
ImageGetBufferedImage ' + =0A=
						'ImageGetEXIFTag ImageGetHeight ImageGetIPTCTag ImageGetWidth =
ImageGrayscale ImageInfo ImageNegative ImageNew ImageOverlay ImagePaste =
' + =0A=
						'ImageRead ImageReadBase64 ImageResize ImageRotate =
ImageRotateDrawingAxis ImageScaleToFit ImageSetAntialiasing =
ImageSetBackgroundColor ' + =0A=
						'ImageSetDrawingColor ImageSetDrawingStroke =
ImageSetDrawingTransparency ImageSharpen ImageShear =
ImageShearDrawingAxis ImageTranslate ' + =0A=
						'ImageTranslateDrawingAxis ImageWrite ImageWriteBase64 =
ImageXORDrawingMode IncrementValue InputBaseN Insert Int IsArray =
IsBinary ' + =0A=
						'IsBoolean IsCustomFunction IsDate IsDDX IsDebugMode IsDefined =
IsImage IsImageFile IsInstanceOf IsJSON IsLeapYear IsLocalHost ' + =0A=
						'IsNumeric IsNumericDate IsObject IsPDFFile IsPDFObject IsQuery =
IsSimpleValue IsSOAPRequest IsStruct IsUserInAnyRole IsUserInRole ' + =0A=
						'IsUserLoggedIn IsValid IsWDDX IsXML IsXmlAttribute IsXmlDoc =
IsXmlElem IsXmlNode IsXmlRoot JavaCast JSStringFormat LCase Left Len ' + =0A=
						'ListAppend ListChangeDelims ListContains ListContainsNoCase =
ListDeleteAt ListFind ListFindNoCase ListFirst ListGetAt ListInsertAt ' =
+ =0A=
						'ListLast ListLen ListPrepend ListQualify ListRest ListSetAt =
ListSort ListToArray ListValueCount ListValueCountNoCase LJustify Log ' =
+ =0A=
						'Log10 LSCurrencyFormat LSDateFormat LSEuroCurrencyFormat =
LSIsCurrency LSIsDate LSIsNumeric LSNumberFormat LSParseCurrency =
LSParseDateTime ' + =0A=
						'LSParseEuroCurrency LSParseNumber LSTimeFormat LTrim Max Mid Min =
Minute Month MonthAsString Now NumberFormat ParagraphFormat =
ParseDateTime ' + =0A=
						'Pi PrecisionEvaluate PreserveSingleQuotes Quarter QueryAddColumn =
QueryAddRow QueryConvertForGrid QueryNew QuerySetCell QuotedValueList =
Rand ' + =0A=
						'Randomize RandRange REFind REFindNoCase ReleaseComObject REMatch =
REMatchNoCase RemoveChars RepeatString Replace ReplaceList ReplaceNoCase =
' + =0A=
						'REReplace REReplaceNoCase Reverse Right RJustify Round RTrim =
Second SendGatewayMessage SerializeJSON SetEncoding SetLocale =
SetProfileString ' + =0A=
						'SetVariable Sgn Sin Sleep SpanExcluding SpanIncluding Sqr StripCR =
StructAppend StructClear StructCopy StructCount StructDelete StructFind =
' + =0A=
						'StructFindKey StructFindValue StructGet StructInsert =
StructIsEmpty StructKeyArray StructKeyExists StructKeyList StructKeyList =
StructNew ' + =0A=
						'StructSort StructUpdate Tan TimeFormat ToBase64 ToBinary ToScript =
ToString Trim UCase URLDecode URLEncodedFormat URLSessionFormat Val ' + =0A=
						'ValueList VerifyClient Week Wrap Wrap WriteOutput XmlChildPos =
XmlElemNew XmlFormat XmlGetNodeType XmlNew XmlParse XmlSearch =
XmlTransform ' + =0A=
						'XmlValidate Year YesNoFormat';=0A=
=0A=
		var keywords =3D	'cfabort cfajaximport cfajaxproxy cfapplet =
cfapplication cfargument cfassociate cfbreak cfcache cfcalendar ' + =0A=
						'cfcase cfcatch cfchart cfchartdata cfchartseries cfcol =
cfcollection cfcomponent cfcontent cfcookie cfdbinfo ' + =0A=
						'cfdefaultcase cfdirectory cfdiv cfdocument cfdocumentitem =
cfdocumentsection cfdump cfelse cfelseif cferror ' + =0A=
						'cfexchangecalendar cfexchangeconnection cfexchangecontact =
cfexchangefilter cfexchangemail cfexchangetask ' + =0A=
						'cfexecute cfexit cffeed cffile cfflush cfform cfformgroup =
cfformitem cfftp cffunction cfgrid cfgridcolumn ' + =0A=
						'cfgridrow cfgridupdate cfheader cfhtmlhead cfhttp cfhttpparam =
cfif cfimage cfimport cfinclude cfindex ' + =0A=
						'cfinput cfinsert cfinterface cfinvoke cfinvokeargument cflayout =
cflayoutarea cfldap cflocation cflock cflog ' + =0A=
						'cflogin cfloginuser cflogout cfloop cfmail cfmailparam cfmailpart =
cfmenu cfmenuitem cfmodule cfNTauthenticate ' + =0A=
						'cfobject cfobjectcache cfoutput cfparam cfpdf cfpdfform =
cfpdfformparam cfpdfparam cfpdfsubform cfpod cfpop ' + =0A=
						'cfpresentation cfpresentationslide cfpresenter cfprint =
cfprocessingdirective cfprocparam cfprocresult ' + =0A=
						'cfproperty cfquery cfqueryparam cfregistry cfreport cfreportparam =
cfrethrow cfreturn cfsavecontent cfschedule ' + =0A=
						'cfscript cfsearch cfselect cfset cfsetting cfsilent cfslider =
cfsprydataset cfstoredproc cfswitch cftable ' + =0A=
						'cftextarea cfthread cfthrow cftimer cftooltip cftrace =
cftransaction cftree cftreeitem cftry cfupdate cfwddx ' + =0A=
						'cfwindow cfxml cfzip cfzipparam';=0A=
=0A=
		var operators =3D	'all and any between cross in join like not null or =
outer some';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: new RegExp('--(.*)$', 'gm'),						css: 'comments' },  // one =
line and multiline comments=0A=
			{ regex: SyntaxHighlighter.regexLib.xmlComments,			css: 'comments' }, =
   // single quoted strings=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: =
'string' },    // double quoted strings=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: =
'string' },    // single quoted strings=0A=
			{ regex: new RegExp(this.getKeywords(funcs), 'gmi'),		css: =
'functions' }, // functions=0A=
			{ regex: new RegExp(this.getKeywords(operators), 'gmi'),	css: =
'color1' },    // operators and such=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gmi'),		css: =
'keyword' }    // keyword=0A=
			];=0A=
	}=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['coldfusion','cf'];=0A=
	=0A=
	SyntaxHighlighter.brushes.ColdFusion =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		// Copyright 2006 Shin, YoungJin=0A=
	=0A=
		var datatypes =3D	'ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD =
DWORDLONG DWORD_PTR ' +=0A=
						'DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP HBRUSH ' +=0A=
						'HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP HDWP =
' +=0A=
						'HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE =
HKEY ' +=0A=
						'HKL HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN HRESULT =
' +=0A=
						'HRGN HRSRC HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID =
LCTYPE ' +=0A=
						'LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL LPBYTE =
LPCOLORREF ' +=0A=
						'LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG =
LPSTR LPTSTR ' +=0A=
						'LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR =
PCTSTR PCWSTR ' +=0A=
						'PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE =
PHKEY PINT ' +=0A=
						'PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 =
PLONG64 POINTER_32 ' +=0A=
						'POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR =
PUCHAR PUHALF_PTR ' +=0A=
						'PUINT PUINT_PTR PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR =
PULONG32 PULONG64 ' +=0A=
						'PUSHORT PVOID PWCHAR PWORD PWSTR SC_HANDLE SC_LOCK =
SERVICE_STATUS_HANDLE SHORT ' +=0A=
						'SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 =
UINT64 ULONG ' +=0A=
						'ULONGLONG ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD =
WPARAM WPARAM WPARAM ' +=0A=
						'char bool short int __int32 __int64 __int8 __int16 long float =
double __wchar_t ' +=0A=
						'clock_t _complex _dev_t _diskfree_t div_t ldiv_t _exception =
_EXCEPTION_POINTERS ' +=0A=
						'FILE _finddata_t _finddatai64_t _wfinddata_t _wfinddatai64_t =
__finddata64_t ' +=0A=
						'__wfinddata64_t _FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv =
intptr_t ' +=0A=
						'jmp_buf mbstate_t _off_t _onexit_t _PNH ptrdiff_t =
_purecall_handler ' +=0A=
						'sig_atomic_t size_t _stat __stat64 _stati64 terminate_function ' +=0A=
						'time_t __time64_t _timeb __timeb64 tm uintptr_t _utimbuf ' +=0A=
						'va_list wchar_t wctrans_t wctype_t wint_t signed';=0A=
=0A=
		var keywords =3D	'auto break case catch class const decltype __finally =
__exception __try ' +=0A=
						'const_cast continue private public protected __declspec ' +=0A=
						'default delete deprecated dllexport dllimport do dynamic_cast ' +=0A=
						'else enum explicit extern if for friend goto inline ' +=0A=
						'mutable naked namespace new noinline noreturn nothrow ' +=0A=
						'register reinterpret_cast return selectany ' +=0A=
						'sizeof static static_cast struct switch template this ' +=0A=
						'thread throw true false try typedef typeid typename union ' +=0A=
						'using uuid virtual void volatile whcar_t while';=0A=
					=0A=
		var functions =3D	'assert isalnum isalpha iscntrl isdigit isgraph =
islower isprint' +=0A=
						'ispunct isspace isupper isxdigit tolower toupper errno localeconv =
' +=0A=
						'setlocale acos asin atan atan2 ceil cos cosh exp fabs floor fmod =
' +=0A=
						'frexp ldexp log log10 modf pow sin sinh sqrt tan tanh jmp_buf ' +=0A=
						'longjmp setjmp raise signal sig_atomic_t va_arg va_end va_start ' =
+=0A=
						'clearerr fclose feof ferror fflush fgetc fgetpos fgets fopen ' +=0A=
						'fprintf fputc fputs fread freopen fscanf fseek fsetpos ftell ' +=0A=
						'fwrite getc getchar gets perror printf putc putchar puts remove ' =
+=0A=
						'rename rewind scanf setbuf setvbuf sprintf sscanf tmpfile tmpnam =
' +=0A=
						'ungetc vfprintf vprintf vsprintf abort abs atexit atof atoi atol =
' +=0A=
						'bsearch calloc div exit free getenv labs ldiv malloc mblen =
mbstowcs ' +=0A=
						'mbtowc qsort rand realloc srand strtod strtol strtoul system ' +=0A=
						'wcstombs wctomb memchr memcmp memcpy memmove memset strcat strchr =
' +=0A=
						'strcmp strcoll strcpy strcspn strerror strlen strncat strncmp ' +=0A=
						'strncpy strpbrk strrchr strspn strstr strtok strxfrm asctime ' +=0A=
						'clock ctime difftime gmtime localtime mktime strftime time';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLineCComments,	css: =
'comments' },			// one line comments=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineCComments,		css: =
'comments' },			// multiline comments=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: =
'string' },			// strings=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: =
'string' },			// strings=0A=
			{ regex: /^ *#.*/gm,										css: 'preprocessor' },=0A=
			{ regex: new RegExp(this.getKeywords(datatypes), 'gm'),		css: 'color1 =
bold' },=0A=
			{ regex: new RegExp(this.getKeywords(functions), 'gm'),		css: =
'functions bold' },=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: 'keyword =
bold' }=0A=
			];=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['cpp', 'c'];=0A=
=0A=
	SyntaxHighlighter.brushes.Cpp =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		var keywords =3D	'abstract as base bool break byte case catch char =
checked class const ' +=0A=
						'continue decimal default delegate do double else enum event =
explicit volatile ' +=0A=
						'extern false finally fixed float for foreach get goto if implicit =
in int ' +=0A=
						'interface internal is lock long namespace new null object =
operator out ' +=0A=
						'override params private protected public readonly ref return =
sbyte sealed set ' +=0A=
						'short sizeof stackalloc static string struct switch this throw =
true try ' +=0A=
						'typeof uint ulong unchecked unsafe ushort using virtual void =
while var ' +=0A=
						'from group by into select let where orderby join on equals =
ascending descending';=0A=
=0A=
		function fixComments(match, regexInfo)=0A=
		{=0A=
			var css =3D (match[0].indexOf("///") =3D=3D 0)=0A=
				? 'color1'=0A=
				: 'comments'=0A=
				;=0A=
			=0A=
			return [new SyntaxHighlighter.Match(match[0], match.index, css)];=0A=
		}=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLineCComments,	func : =
fixComments },		// one line comments=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineCComments,		css: =
'comments' },			// multiline comments=0A=
			{ regex: /@"(?:[^"]|"")*"/g,								css: 'string' },			// @-quoted =
strings=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: =
'string' },			// strings=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: =
'string' },			// strings=0A=
			{ regex: /^\s*#.*/gm,										css: 'preprocessor' },		// =
preprocessor tags like #region and #endregion=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: =
'keyword' },			// c# keyword=0A=
			{ regex: /\bpartial(?=3D\s+(?:class|interface|struct)\b)/g,	css: =
'keyword' },			// contextual keyword: 'partial'=0A=
			{ regex: /\byield(?=3D\s+(?:return|break)\b)/g,				css: 'keyword' }			=
// contextual keyword: 'yield'=0A=
			];=0A=
		=0A=
		this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags);=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['c#', 'c-sharp', 'csharp'];=0A=
=0A=
	SyntaxHighlighter.brushes.CSharp =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		function getKeywordsCSS(str)=0A=
		{=0A=
			return '\\b([a-z_]|)' + str.replace(/ /g, =
'(?=3D:)\\b|\\b([a-z_\\*]|\\*|)') + '(?=3D:)\\b';=0A=
		};=0A=
	=0A=
		function getValuesCSS(str)=0A=
		{=0A=
			return '\\b' + str.replace(/ /g, '(?!-)(?!:)\\b|\\b()') + '\:\\b';=0A=
		};=0A=
=0A=
		var keywords =3D	'ascent azimuth background-attachment =
background-color background-image background-position ' +=0A=
						'background-repeat background baseline bbox border-collapse =
border-color border-spacing border-style border-top ' +=0A=
						'border-right border-bottom border-left border-top-color =
border-right-color border-bottom-color border-left-color ' +=0A=
						'border-top-style border-right-style border-bottom-style =
border-left-style border-top-width border-right-width ' +=0A=
						'border-bottom-width border-left-width border-width border bottom =
cap-height caption-side centerline clear clip color ' +=0A=
						'content counter-increment counter-reset cue-after cue-before cue =
cursor definition-src descent direction display ' +=0A=
						'elevation empty-cells float font-size-adjust font-family =
font-size font-stretch font-style font-variant font-weight font ' +=0A=
						'height left letter-spacing line-height list-style-image =
list-style-position list-style-type list-style margin-top ' +=0A=
						'margin-right margin-bottom margin-left margin marker-offset marks =
mathline max-height max-width min-height min-width orphans ' +=0A=
						'outline-color outline-style outline-width outline overflow =
padding-top padding-right padding-bottom padding-left padding page ' +=0A=
						'page-break-after page-break-before page-break-inside pause =
pause-after pause-before pitch pitch-range play-during position ' +=0A=
						'quotes right richness size slope src speak-header speak-numeral =
speak-punctuation speak speech-rate stemh stemv stress ' +=0A=
						'table-layout text-align top text-decoration text-indent =
text-shadow text-transform unicode-bidi unicode-range units-per-em ' +=0A=
						'vertical-align visibility voice-family volume white-space widows =
width widths word-spacing x-height z-index';=0A=
=0A=
		var values =3D	'above absolute all always aqua armenian attr aural =
auto avoid baseline behind below bidi-override black blink block blue =
bold bolder '+=0A=
						'both bottom braille capitalize caption center center-left =
center-right circle close-quote code collapse compact condensed '+=0A=
						'continuous counter counters crop cross crosshair cursive dashed =
decimal decimal-leading-zero default digits disc dotted double '+=0A=
						'embed embossed e-resize expanded extra-condensed extra-expanded =
fantasy far-left far-right fast faster fixed format fuchsia '+=0A=
						'gray green groove handheld hebrew help hidden hide high higher =
icon inline-table inline inset inside invert italic '+=0A=
						'justify landscape large larger left-side left leftwards level =
lighter lime line-through list-item local loud lower-alpha '+=0A=
						'lowercase lower-greek lower-latin lower-roman lower low ltr =
marker maroon medium message-box middle mix move narrower '+=0A=
						'navy ne-resize no-close-quote none no-open-quote no-repeat normal =
nowrap n-resize nw-resize oblique olive once open-quote outset '+=0A=
						'outside overline pointer portrait pre print projection purple red =
relative repeat repeat-x repeat-y rgb ridge right right-side '+=0A=
						'rightwards rtl run-in screen scroll semi-condensed semi-expanded =
separate se-resize show silent silver slower slow '+=0A=
						'small small-caps small-caption smaller soft solid speech =
spell-out square s-resize static status-bar sub super sw-resize '+=0A=
						'table-caption table-cell table-column table-column-group =
table-footer-group table-header-group table-row table-row-group teal '+=0A=
						'text-bottom text-top thick thin top transparent tty tv =
ultra-condensed ultra-expanded underline upper-alpha uppercase =
upper-latin '+=0A=
						'upper-roman url visible wait white wider w-resize x-fast x-high =
x-large x-loud x-low x-slow x-small x-soft xx-large xx-small yellow';=0A=
=0A=
		var fonts =3D		'[mM]onospace [tT]ahoma [vV]erdana [aA]rial =
[hH]elvetica [sS]ans-serif [sS]erif [cC]ourier mono sans serif';=0A=
	=0A=
		this.regexList =3D [=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineCComments,		css: =
'comments' },	// multiline comments=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: =
'string' },	// double quoted strings=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: =
'string' },	// single quoted strings=0A=
			{ regex: /\#[a-fA-F0-9]{3,6}/g,								css: 'value' },		// html colors=0A=
			{ regex: /(-?\d+)(\.\d+)?(px|em|pt|\:|\%|)/g,				css: 'value' },		// =
sizes=0A=
			{ regex: /!important/g,										css: 'color3' },	// !important=0A=
			{ regex: new RegExp(getKeywordsCSS(keywords), 'gm'),		css: 'keyword' =
},	// keywords=0A=
			{ regex: new RegExp(getValuesCSS(values), 'g'),				css: 'value' },		=
// values=0A=
			{ regex: new RegExp(this.getKeywords(fonts), 'g'),			css: 'color1' }		=
// fonts=0A=
			];=0A=
=0A=
		this.forHtmlScript({ =0A=
			left: /(&lt;|<)\s*style.*?(&gt;|>)/gi, =0A=
			right: /(&lt;|<)\/\s*style\s*(&gt;|>)/gi =0A=
			});=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['css'];=0A=
=0A=
	SyntaxHighlighter.brushes.CSS =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		var keywords =3D	'abs addr and ansichar ansistring array as asm begin =
boolean byte cardinal ' +=0A=
						'case char class comp const constructor currency destructor div do =
double ' +=0A=
						'downto else end except exports extended false file finalization =
finally ' +=0A=
						'for function goto if implementation in inherited int64 =
initialization ' +=0A=
						'integer interface is label library longint longword mod nil not =
object ' +=0A=
						'of on or packed pansichar pansistring pchar pcurrency pdatetime =
pextended ' +=0A=
						'pint64 pointer private procedure program property pshortstring =
pstring ' +=0A=
						'pvariant pwidechar pwidestring protected public published raise =
real real48 ' +=0A=
						'record repeat set shl shortint shortstring shr single smallint =
string then ' +=0A=
						'threadvar to true try type unit until uses val var varirnt while =
widechar ' +=0A=
						'widestring with word write writeln xor';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: /\(\*[\s\S]*?\*\)/gm,								css: 'comments' },  	// =
multiline comments (* *)=0A=
			{ regex: /{(?!\$)[\s\S]*?}/gm,								css: 'comments' },  	// =
multiline comments { }=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLineCComments,	css: =
'comments' },  	// one line=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: =
'string' },		// strings=0A=
			{ regex: /\{\$[a-zA-Z]+ .+\}/g,								css: 'color1' },		// compiler =
Directives and Region tags=0A=
			{ regex: /\b[\d\.]+\b/g,									css: 'value' },			// numbers 12345=0A=
			{ regex: /\$[a-zA-Z0-9]+\b/g,								css: 'value' },			// numbers =
$F5D3=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gmi'),		css: =
'keyword' }		// keyword=0A=
			];=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['delphi', 'pascal', 'pas'];=0A=
=0A=
	SyntaxHighlighter.brushes.Delphi =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		this.regexList =3D [=0A=
			{ regex: /^\+\+\+ .*$/gm,	css: 'color2' },	// new file=0A=
			{ regex: /^\-\-\- .*$/gm,	css: 'color2' },	// old file=0A=
			{ regex: /^\s.*$/gm,		css: 'color1' },	// unchanged=0A=
			{ regex: /^@@.*@@.*$/gm,	css: 'variable' },	// location=0A=
			{ regex: /^\+.*$/gm,		css: 'string' },	// additions=0A=
			{ regex: /^\-.*$/gm,		css: 'color3' }		// deletions=0A=
			];=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['diff', 'patch'];=0A=
=0A=
	SyntaxHighlighter.brushes.Diff =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		// Contributed by Jean-Lou Dupont=0A=
		// http://jldupont.blogspot.com/2009/06/erlang-syntax-highlighter.html =
 =0A=
=0A=
		// According to: =
http://erlang.org/doc/reference_manual/introduction.html#1.5=0A=
		var keywords =3D 'after and andalso band begin bnot bor bsl bsr bxor '+=0A=
			'case catch cond div end fun if let not of or orelse '+=0A=
			'query receive rem try when xor'+=0A=
			// additional=0A=
			' module export import define';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: new RegExp("[A-Z][A-Za-z0-9_]+", 'g'), 			css: 'constants' },=0A=
			{ regex: new RegExp("\\%.+", 'gm'), 						css: 'comments' },=0A=
			{ regex: new RegExp("\\?[A-Za-z0-9_]+", 'g'), 				css: 'preprocessor' =
},=0A=
			{ regex: new RegExp("[a-z0-9_]+:[a-z0-9_]+", 'g'), 			css: =
'functions' },=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: =
'string' },=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: =
'string' },=0A=
			{ regex: new RegExp(this.getKeywords(keywords),	'gm'),		css: =
'keyword' }=0A=
			];=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['erl', 'erlang'];=0A=
=0A=
	SyntaxHighlighter.brushes.Erland =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		// Contributed by Andres Almiray=0A=
		// =
http://jroller.com/aalmiray/entry/nice_source_code_syntax_highlighter=0A=
=0A=
		var keywords =3D	'as assert break case catch class continue def =
default do else extends finally ' +=0A=
						'if in implements import instanceof interface new package property =
return switch ' +=0A=
						'throw throws try while public protected private static';=0A=
		var types    =3D  'void boolean byte char short int long float double';=0A=
		var constants =3D 'null';=0A=
		var methods   =3D 'allProperties count get size '+=0A=
						'collect each eachProperty eachPropertyName eachWithIndex find =
findAll ' +=0A=
						'findIndexOf grep inject max min reverseEach sort ' +=0A=
						'asImmutable asSynchronized flatten intersect join pop reverse =
subMap toList ' +=0A=
						'padRight padLeft contains eachMatch toCharacter toLong toUrl =
tokenize ' +=0A=
						'eachFile eachFileRecurse eachB yte eachLine readBytes readLine =
getText ' +=0A=
						'splitEachLine withReader append encodeBase64 decodeBase64 =
filterLine ' +=0A=
						'transformChar transformLine withOutputStream withPrintWriter =
withStream ' +=0A=
						'withStreams withWriter withWriterAppend write writeLine '+=0A=
						'dump inspect invokeMethod print println step times upto use =
waitForOrKill '+=0A=
						'getText';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLineCComments,				css: =
'comments' },		// one line comments=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineCComments,					css: =
'comments' },		// multiline comments=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,					css: =
'string' },		// strings=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,					css: =
'string' },		// strings=0A=
			{ regex: /""".*"""/g,													css: 'string' },		// GStrings=0A=
			{ regex: new RegExp('\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b', 'gi'),	=
css: 'value' },			// numbers=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),					css: =
'keyword' },		// goovy keyword=0A=
			{ regex: new RegExp(this.getKeywords(types), 'gm'),						css: =
'color1' },		// goovy/java type=0A=
			{ regex: new RegExp(this.getKeywords(constants), 'gm'),					css: =
'constants' },		// constants=0A=
			{ regex: new RegExp(this.getKeywords(methods), 'gm'),					css: =
'functions' }		// methods=0A=
			];=0A=
=0A=
		this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags);=0A=
	}=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['groovy'];=0A=
=0A=
	SyntaxHighlighter.brushes.Groovy =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		var keywords =3D	'abstract assert boolean break byte case catch char =
class const ' +=0A=
						'continue default do double else enum extends ' +=0A=
						'false final finally float for goto if implements import ' +=0A=
						'instanceof int interface long native new null ' +=0A=
						'package private protected public return ' +=0A=
						'short static strictfp super switch synchronized this throw throws =
true ' +=0A=
						'transient try void volatile while';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLineCComments,	css: =
'comments' },		// one line comments=0A=
			{ regex: /\/\*([^\*][\s\S]*)?\*\//gm,						css: 'comments' },	 	// =
multiline comments=0A=
			{ regex: /\/\*(?!\*\/)\*[\s\S]*?\*\//gm,					css: 'preprocessor' },	=
// documentation comments=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: =
'string' },		// strings=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: =
'string' },		// strings=0A=
			{ regex: /\b([\d]+(\.[\d]+)?|0x[a-f0-9]+)\b/gi,				css: 'value' },			=
// numbers=0A=
			{ regex: /(?!\@interface\b)\@[\$\w]+\b/g,					css: 'color1' },		// =
annotation @anno=0A=
			{ regex: /\@interface\b/g,									css: 'color2' },		// @interface =
keyword=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: =
'keyword' }		// java keyword=0A=
			];=0A=
=0A=
		this.forHtmlScript({=0A=
			left	: /(&lt;|<)%[@!=3D]?/g, =0A=
			right	: /%(&gt;|>)/g =0A=
		});=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['java'];=0A=
=0A=
	SyntaxHighlighter.brushes.Java =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		// Contributed by Patrick Webster=0A=
		// =
http://patrickwebster.blogspot.com/2009/04/javafx-brush-for-syntaxhighlig=
hter.html=0A=
		var datatypes =3D	'Boolean Byte Character Double Duration '=0A=
						+ 'Float Integer Long Number Short String Void'=0A=
						;=0A=
=0A=
		var keywords =3D 'abstract after and as assert at before bind bound =
break catch class '=0A=
						+ 'continue def delete else exclusive extends false finally first =
for from '=0A=
						+ 'function if import in indexof init insert instanceof into =
inverse last '=0A=
						+ 'lazy mixin mod nativearray new not null on or override package =
postinit '=0A=
						+ 'protected public public-init public-read replace return reverse =
sizeof '=0A=
						+ 'step super then this throw true try tween typeof var where =
while with '=0A=
						+ 'attribute let private readonly static trigger'=0A=
						;=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLineCComments,	css: =
'comments' },=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineCComments,		css: =
'comments' },=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: =
'string' },=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: =
'string' },=0A=
			{ regex: =
/(-?\.?)(\b(\d*\.?\d+|\d+\.?\d*)(e[+-]?\d+)?|0x[a-f\d]+)\b\.?/gi, css: =
'color2' },	// numbers=0A=
			{ regex: new RegExp(this.getKeywords(datatypes), 'gm'),		css: =
'variable' },	// datatypes=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: =
'keyword' }=0A=
		];=0A=
		this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags);=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['jfx', 'javafx'];=0A=
=0A=
	SyntaxHighlighter.brushes.JavaFX =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		var keywords =3D	'break case catch continue ' +=0A=
						'default delete do else false  ' +=0A=
						'for function if in instanceof ' +=0A=
						'new null return super switch ' +=0A=
						'this throw true try typeof var while with'=0A=
						;=0A=
=0A=
		var r =3D SyntaxHighlighter.regexLib;=0A=
		=0A=
		this.regexList =3D [=0A=
			{ regex: r.multiLineDoubleQuotedString,					css: 'string' },			// =
double quoted strings=0A=
			{ regex: r.multiLineSingleQuotedString,					css: 'string' },			// =
single quoted strings=0A=
			{ regex: r.singleLineCComments,							css: 'comments' },			// one =
line comments=0A=
			{ regex: r.multiLineCComments,							css: 'comments' },			// =
multiline comments=0A=
			{ regex: /\s*#.*/gm,									css: 'preprocessor' },		// preprocessor =
tags like #region and #endregion=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),	css: 'keyword' =
}			// keywords=0A=
			];=0A=
	=0A=
		this.forHtmlScript(r.scriptScriptTags);=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['js', 'jscript', 'javascript'];=0A=
=0A=
	SyntaxHighlighter.brushes.JScript =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		// Contributed by David Simmons-Duffin and Marty Kube=0A=
	=0A=
		var funcs =3D =0A=
			'abs accept alarm atan2 bind binmode chdir chmod chomp chop chown chr =
' + =0A=
			'chroot close closedir connect cos crypt defined delete each endgrent =
' + =0A=
			'endhostent endnetent endprotoent endpwent endservent eof exec exists =
' + =0A=
			'exp fcntl fileno flock fork format formline getc getgrent getgrgid ' =
+ =0A=
			'getgrnam gethostbyaddr gethostbyname gethostent getlogin =
getnetbyaddr ' + =0A=
			'getnetbyname getnetent getpeername getpgrp getppid getpriority ' + =0A=
			'getprotobyname getprotobynumber getprotoent getpwent getpwnam =
getpwuid ' + =0A=
			'getservbyname getservbyport getservent getsockname getsockopt glob ' =
+ =0A=
			'gmtime grep hex index int ioctl join keys kill lc lcfirst length =
link ' + =0A=
			'listen localtime lock log lstat map mkdir msgctl msgget msgrcv =
msgsnd ' + =0A=
			'oct open opendir ord pack pipe pop pos print printf prototype push ' =
+ =0A=
			'quotemeta rand read readdir readline readlink readpipe recv rename ' =
+ =0A=
			'reset reverse rewinddir rindex rmdir scalar seek seekdir select =
semctl ' + =0A=
			'semget semop send setgrent sethostent setnetent setpgrp setpriority =
' + =0A=
			'setprotoent setpwent setservent setsockopt shift shmctl shmget =
shmread ' + =0A=
			'shmwrite shutdown sin sleep socket socketpair sort splice split =
sprintf ' + =0A=
			'sqrt srand stat study substr symlink syscall sysopen sysread sysseek =
' + =0A=
			'system syswrite tell telldir time times tr truncate uc ucfirst umask =
' + =0A=
			'undef unlink unpack unshift utime values vec wait waitpid warn write =
' +=0A=
			// feature=0A=
			'say';=0A=
    =0A=
		var keywords =3D  =0A=
			'bless caller continue dbmclose dbmopen die do dump else elsif eval =
exit ' +=0A=
			'for foreach goto if import last local my next no our package redo =
ref ' + =0A=
			'require return sub tie tied unless untie until use wantarray while ' =
+=0A=
			// feature=0A=
			'given when default ' +=0A=
			// Try::Tiny=0A=
			'try catch finally ' +=0A=
			// Moose=0A=
			'has extends with before after around override augment';=0A=
    =0A=
		this.regexList =3D [=0A=
			{ regex: /(<<|&lt;&lt;)((\w+)|(['"])(.+?)\4)[\s\S]+?\n\3\5\n/g,	css: =
'string' },	// here doc (maybe html encoded)=0A=
			{ regex: /#.*$/gm,										css: 'comments' },=0A=
			{ regex: /^#!.*\n/g,									css: 'preprocessor' },	// shebang=0A=
			{ regex: /-?\w+(?=3D\s*=3D(>|&gt;))/g,	css: 'string' }, // fat comma=0A=
=0A=
			// is this too much?=0A=
			{ regex: /\bq[qwxr]?\([\s\S]*?\)/g,	css: 'string' }, // quote-like =
operators ()=0A=
			{ regex: /\bq[qwxr]?\{[\s\S]*?\}/g,	css: 'string' }, // quote-like =
operators {}=0A=
			{ regex: /\bq[qwxr]?\[[\s\S]*?\]/g,	css: 'string' }, // quote-like =
operators []=0A=
			{ regex: /\bq[qwxr]?(<|&lt;)[\s\S]*?(>|&gt;)/g,	css: 'string' }, // =
quote-like operators <>=0A=
			{ regex: /\bq[qwxr]?([^\w({<[])[\s\S]*?\1/g,	css: 'string' }, // =
quote-like operators non-paired=0A=
=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,	css: 'string' =
},=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,	css: 'string' =
},=0A=
			// currently ignoring single quote package separator and utf8 names=0A=
			{ regex: /(?:&amp;|[$@%*]|\$#)[a-zA-Z_](\w+|::)*/g,   		css: =
'variable' },=0A=
			{ regex: /\b__(?:END|DATA)__\b[\s\S]*$/g,				css: 'comments' },=0A=
			{ regex: /(^|\n)=3D\w[\s\S]*?(\n=3Dcut\s*\n|$)/g,				css: 'comments' =
},		// pod=0A=
			{ regex: new RegExp(this.getKeywords(funcs), 'gm'),		css: 'functions' =
},=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),	css: 'keyword' =
}=0A=
		];=0A=
=0A=
		this.forHtmlScript(SyntaxHighlighter.regexLib.phpScriptTags);=0A=
	}=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases		=3D ['perl', 'Perl', 'pl'];=0A=
=0A=
	SyntaxHighlighter.brushes.Perl =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		var funcs	=3D	'abs acos acosh addcslashes addslashes ' +=0A=
						'array_change_key_case array_chunk array_combine =
array_count_values array_diff '+=0A=
						'array_diff_assoc array_diff_key array_diff_uassoc array_diff_ukey =
array_fill '+=0A=
						'array_filter array_flip array_intersect array_intersect_assoc =
array_intersect_key '+=0A=
						'array_intersect_uassoc array_intersect_ukey array_key_exists =
array_keys array_map '+=0A=
						'array_merge array_merge_recursive array_multisort array_pad =
array_pop array_product '+=0A=
						'array_push array_rand array_reduce array_reverse array_search =
array_shift '+=0A=
						'array_slice array_splice array_sum array_udiff array_udiff_assoc =
'+=0A=
						'array_udiff_uassoc array_uintersect array_uintersect_assoc '+=0A=
						'array_uintersect_uassoc array_unique array_unshift array_values =
array_walk '+=0A=
						'array_walk_recursive atan atan2 atanh base64_decode base64_encode =
base_convert '+=0A=
						'basename bcadd bccomp bcdiv bcmod bcmul bindec bindtextdomain =
bzclose bzcompress '+=0A=
						'bzdecompress bzerrno bzerror bzerrstr bzflush bzopen bzread =
bzwrite ceil chdir '+=0A=
						'checkdate checkdnsrr chgrp chmod chop chown chr chroot =
chunk_split class_exists '+=0A=
						'closedir closelog copy cos cosh count count_chars date decbin =
dechex decoct '+=0A=
						'deg2rad delete ebcdic2ascii echo empty end ereg ereg_replace =
eregi eregi_replace error_log '+=0A=
						'error_reporting escapeshellarg escapeshellcmd eval exec exit exp =
explode extension_loaded '+=0A=
						'feof fflush fgetc fgetcsv fgets fgetss file_exists =
file_get_contents file_put_contents '+=0A=
						'fileatime filectime filegroup fileinode filemtime fileowner =
fileperms filesize filetype '+=0A=
						'floatval flock floor flush fmod fnmatch fopen fpassthru fprintf =
fputcsv fputs fread fscanf '+=0A=
						'fseek fsockopen fstat ftell ftok getallheaders getcwd getdate =
getenv gethostbyaddr gethostbyname '+=0A=
						'gethostbynamel getimagesize getlastmod getmxrr getmygid =
getmyinode getmypid getmyuid getopt '+=0A=
						'getprotobyname getprotobynumber getrandmax getrusage =
getservbyname getservbyport gettext '+=0A=
						'gettimeofday gettype glob gmdate gmmktime ini_alter ini_get =
ini_get_all ini_restore ini_set '+=0A=
						'interface_exists intval ip2long is_a is_array is_bool is_callable =
is_dir is_double '+=0A=
						'is_executable is_file is_finite is_float is_infinite is_int =
is_integer is_link is_long '+=0A=
						'is_nan is_null is_numeric is_object is_readable is_real =
is_resource is_scalar is_soap_fault '+=0A=
						'is_string is_subclass_of is_uploaded_file is_writable =
is_writeable mkdir mktime nl2br '+=0A=
						'parse_ini_file parse_str parse_url passthru pathinfo print =
readlink realpath rewind rewinddir rmdir '+=0A=
						'round str_ireplace str_pad str_repeat str_replace str_rot13 =
str_shuffle str_split '+=0A=
						'str_word_count strcasecmp strchr strcmp strcoll strcspn strftime =
strip_tags stripcslashes '+=0A=
						'stripos stripslashes stristr strlen strnatcasecmp strnatcmp =
strncasecmp strncmp strpbrk '+=0A=
						'strpos strptime strrchr strrev strripos strrpos strspn strstr =
strtok strtolower strtotime '+=0A=
						'strtoupper strtr strval substr substr_compare';=0A=
=0A=
		var keywords =3D	'abstract and array as break case catch cfunction =
class clone const continue declare default die do ' +=0A=
						'else elseif enddeclare endfor endforeach endif endswitch endwhile =
extends final for foreach ' +=0A=
						'function global goto if implements include include_once interface =
instanceof insteadof namespace new ' +=0A=
						'old_function or private protected public return require =
require_once static switch ' +=0A=
						'trait throw try use var while xor ';=0A=
		=0A=
		var constants	=3D '__FILE__ __LINE__ __METHOD__ __FUNCTION__ =
__CLASS__';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLineCComments,	css: =
'comments' },			// one line comments=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineCComments,		css: =
'comments' },			// multiline comments=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: =
'string' },			// double quoted strings=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: =
'string' },			// single quoted strings=0A=
			{ regex: /\$\w+/g,											css: 'variable' },			// variables=0A=
			{ regex: new RegExp(this.getKeywords(funcs), 'gmi'),		css: =
'functions' },			// common functions=0A=
			{ regex: new RegExp(this.getKeywords(constants), 'gmi'),	css: =
'constants' },			// constants=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: =
'keyword' }			// keyword=0A=
			];=0A=
=0A=
		this.forHtmlScript(SyntaxHighlighter.regexLib.phpScriptTags);=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['php'];=0A=
=0A=
	SyntaxHighlighter.brushes.Php =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['text', 'plain'];=0A=
=0A=
	SyntaxHighlighter.brushes.Plain =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		// Contributed by Joel 'Jaykul' Bennett, http://PoshCode.org | =
http://HuddledMasses.org=0A=
		var keywords =3D	'while validateset validaterange validatepattern =
validatelength validatecount ' +=0A=
						'until trap switch return ref process param parameter in if =
global: '+=0A=
						'function foreach for finally filter end elseif else dynamicparam =
do default ' +=0A=
						'continue cmdletbinding break begin alias \\? % #script #private =
#local #global '+=0A=
						'mandatory parametersetname position valuefrompipeline ' +=0A=
						'valuefrompipelinebypropertyname valuefromremainingarguments =
helpmessage ';=0A=
=0A=
		var operators =3D	' and as band bnot bor bxor casesensitive ccontains =
ceq cge cgt cle ' +=0A=
						'clike clt cmatch cne cnotcontains cnotlike cnotmatch contains ' +=0A=
						'creplace eq exact f file ge gt icontains ieq ige igt ile ilike =
ilt ' +=0A=
						'imatch ine inotcontains inotlike inotmatch ireplace is isnot le =
like ' +=0A=
						'lt match ne not notcontains notlike notmatch or regex replace =
wildcard';=0A=
						=0A=
		var verbs =3D		'write where wait use update unregister undo trace test =
tee take suspend ' +=0A=
						'stop start split sort skip show set send select scroll resume =
restore ' +=0A=
						'restart resolve resize reset rename remove register receive read =
push ' +=0A=
						'pop ping out new move measure limit join invoke import group get =
format ' +=0A=
						'foreach export expand exit enter enable disconnect disable debug =
cxnew ' +=0A=
						'copy convertto convertfrom convert connect complete compare clear =
' +=0A=
						'checkpoint aggregate add';=0A=
=0A=
		// I can't find a way to match the comment based help in multi-line =
comments, because SH won't highlight in highlights, and javascript =
doesn't support lookbehind=0A=
		var commenthelp =3D ' component description example externalhelp =
forwardhelpcategory forwardhelptargetname forwardhelptargetname =
functionality inputs link notes outputs parameter remotehelprunspace =
role synopsis';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: new =
RegExp('^\\s*#[#\\s]*\\.('+this.getKeywords(commenthelp)+').*$', 'gim'),	=
		css: 'preprocessor help bold' },		// comment-based help=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLinePerlComments,										=
css: 'comments' },						// one line comments=0A=
			{ regex: /(&lt;|<)#[\s\S]*?#(&gt;|>)/gm,														css: 'comments =
here' },					// multi-line comments=0A=
			=0A=
			{ regex: new RegExp('@"\\n[\\s\\S]*?\\n"@', 'gm'),												css: =
'script string here' },			// double quoted here-strings=0A=
			{ regex: new RegExp("@'\\n[\\s\\S]*?\\n'@", 'gm'),												css: =
'script string single here' },		// single quoted here-strings=0A=
			{ regex: new RegExp('"(?:\\$\\([^\\)]*\\)|[^"]|`"|"")*[^`]"','g'),				=
				css: 'string' },						// double quoted strings=0A=
			{ regex: new RegExp("'(?:[^']|'')*'", 'g'),														css: 'string =
single' },					// single quoted strings=0A=
			=0A=
			{ regex: new =
RegExp('[\\$|@|@@](?:(?:global|script|private|env):)?[A-Z0-9_]+', 'gi'),	=
		css: 'variable' },						// $variables=0A=
			{ regex: new RegExp('(?:\\b'+verbs.replace(/ /g, =
'\\b|\\b')+')-[a-zA-Z_][a-zA-Z0-9_]*', 'gmi'),	css: 'functions' },						=
// functions and cmdlets=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gmi'),											=
css: 'keyword' },						// keywords=0A=
			{ regex: new RegExp('-'+this.getKeywords(operators), 'gmi'),									=
css: 'operator value' },				// operators=0A=
			{ regex: new RegExp('\\[[A-Z_\\[][A-Z0-9_. `,\\[\\]]*\\]', 'gi'),					=
			css: 'constants' },						// .Net [Type]s=0A=
			{ regex: new =
RegExp('\\s+-(?!'+this.getKeywords(operators)+')[a-zA-Z_][a-zA-Z0-9_]*', =
'gmi'),	css: 'color1' },						// parameters	  =0A=
		];=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['powershell', 'ps', 'posh'];=0A=
=0A=
	SyntaxHighlighter.brushes.PowerShell =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		// Contributed by Gheorghe Milas and Ahmad Sherif=0A=
	=0A=
		var keywords =3D  'and assert break class continue def del elif else ' =
+=0A=
						'except exec finally for from global if import in is ' +=0A=
						'lambda not or pass print raise return try yield while';=0A=
=0A=
		var funcs =3D '__import__ abs all any apply basestring bin bool buffer =
callable ' +=0A=
					'chr classmethod cmp coerce compile complex delattr dict dir ' +=0A=
					'divmod enumerate eval execfile file filter float format frozenset =
' +=0A=
					'getattr globals hasattr hash help hex id input int intern ' +=0A=
					'isinstance issubclass iter len list locals long map max min next ' =
+=0A=
					'object oct open ord pow print property range raw_input reduce ' +=0A=
					'reload repr reversed round set setattr slice sorted staticmethod ' =
+=0A=
					'str sum super tuple type type unichr unicode vars xrange zip';=0A=
=0A=
		var special =3D  'None True False self cls class_';=0A=
=0A=
		this.regexList =3D [=0A=
				{ regex: SyntaxHighlighter.regexLib.singleLinePerlComments, css: =
'comments' },=0A=
				{ regex: /^\s*@\w+/gm, 										css: 'decorator' },=0A=
				{ regex: /(['\"]{3})([^\1])*?\1/gm, 						css: 'comments' },=0A=
				{ regex: /"(?!")(?:\.|\\\"|[^\""\n])*"/gm, 					css: 'string' },=0A=
				{ regex: /'(?!')(?:\.|(\\\')|[^\''\n])*'/gm, 				css: 'string' },=0A=
				{ regex: /\+|\-|\*|\/|\%|=3D|=3D=3D/gm, 							css: 'keyword' },=0A=
				{ regex: /\b\d+\.?\w*/g, 									css: 'value' },=0A=
				{ regex: new RegExp(this.getKeywords(funcs), 'gmi'),		css: =
'functions' },=0A=
				{ regex: new RegExp(this.getKeywords(keywords), 'gm'), 		css: =
'keyword' },=0A=
				{ regex: new RegExp(this.getKeywords(special), 'gm'), 		css: =
'color1' }=0A=
				];=0A=
			=0A=
		this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags);=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['py', 'python'];=0A=
=0A=
	SyntaxHighlighter.brushes.Python =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		// Contributed by Erik Peterson.=0A=
	=0A=
		var keywords =3D	'alias and BEGIN begin break case class def =
define_method defined do each else elsif ' +=0A=
						'END end ensure false for if in module new next nil not or raise =
redo rescue retry return ' +=0A=
						'self super then throw true undef unless until when while yield';=0A=
=0A=
		var builtins =3D	'Array Bignum Binding Class Continuation Dir =
Exception FalseClass File::Stat File Fixnum Fload ' +=0A=
						'Hash Integer IO MatchData Method Module NilClass Numeric Object =
Proc Range Regexp String Struct::TMS Symbol ' +=0A=
						'ThreadGroup Thread Time TrueClass';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLinePerlComments,	css: =
'comments' },		// one line comments=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: =
'string' },		// double quoted strings=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: =
'string' },		// single quoted strings=0A=
			{ regex: /\b[A-Z0-9_]+\b/g,									css: 'constants' },		// constants=0A=
			{ regex: /:[a-z][A-Za-z0-9_]*/g,							css: 'color2' },		// symbols=0A=
			{ regex: /(\$|@@|@)\w+/g,									css: 'variable bold' },	// $global, =
@instance, and @@class variables=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: =
'keyword' },		// keywords=0A=
			{ regex: new RegExp(this.getKeywords(builtins), 'gm'),		css: 'color1' =
}			// builtins=0A=
			];=0A=
=0A=
		this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags);=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['ruby', 'rails', 'ror', 'rb'];=0A=
=0A=
	SyntaxHighlighter.brushes.Ruby =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		function getKeywordsCSS(str)=0A=
		{=0A=
			return '\\b([a-z_]|)' + str.replace(/ /g, =
'(?=3D:)\\b|\\b([a-z_\\*]|\\*|)') + '(?=3D:)\\b';=0A=
		};=0A=
	=0A=
		function getValuesCSS(str)=0A=
		{=0A=
			return '\\b' + str.replace(/ /g, '(?!-)(?!:)\\b|\\b()') + '\:\\b';=0A=
		};=0A=
=0A=
		var keywords =3D	'ascent azimuth background-attachment =
background-color background-image background-position ' +=0A=
						'background-repeat background baseline bbox border-collapse =
border-color border-spacing border-style border-top ' +=0A=
						'border-right border-bottom border-left border-top-color =
border-right-color border-bottom-color border-left-color ' +=0A=
						'border-top-style border-right-style border-bottom-style =
border-left-style border-top-width border-right-width ' +=0A=
						'border-bottom-width border-left-width border-width border bottom =
cap-height caption-side centerline clear clip color ' +=0A=
						'content counter-increment counter-reset cue-after cue-before cue =
cursor definition-src descent direction display ' +=0A=
						'elevation empty-cells float font-size-adjust font-family =
font-size font-stretch font-style font-variant font-weight font ' +=0A=
						'height left letter-spacing line-height list-style-image =
list-style-position list-style-type list-style margin-top ' +=0A=
						'margin-right margin-bottom margin-left margin marker-offset marks =
mathline max-height max-width min-height min-width orphans ' +=0A=
						'outline-color outline-style outline-width outline overflow =
padding-top padding-right padding-bottom padding-left padding page ' +=0A=
						'page-break-after page-break-before page-break-inside pause =
pause-after pause-before pitch pitch-range play-during position ' +=0A=
						'quotes right richness size slope src speak-header speak-numeral =
speak-punctuation speak speech-rate stemh stemv stress ' +=0A=
						'table-layout text-align top text-decoration text-indent =
text-shadow text-transform unicode-bidi unicode-range units-per-em ' +=0A=
						'vertical-align visibility voice-family volume white-space widows =
width widths word-spacing x-height z-index';=0A=
		=0A=
		var values =3D	'above absolute all always aqua armenian attr aural =
auto avoid baseline behind below bidi-override black blink block blue =
bold bolder '+=0A=
						'both bottom braille capitalize caption center center-left =
center-right circle close-quote code collapse compact condensed '+=0A=
						'continuous counter counters crop cross crosshair cursive dashed =
decimal decimal-leading-zero digits disc dotted double '+=0A=
						'embed embossed e-resize expanded extra-condensed extra-expanded =
fantasy far-left far-right fast faster fixed format fuchsia '+=0A=
						'gray green groove handheld hebrew help hidden hide high higher =
icon inline-table inline inset inside invert italic '+=0A=
						'justify landscape large larger left-side left leftwards level =
lighter lime line-through list-item local loud lower-alpha '+=0A=
						'lowercase lower-greek lower-latin lower-roman lower low ltr =
marker maroon medium message-box middle mix move narrower '+=0A=
						'navy ne-resize no-close-quote none no-open-quote no-repeat normal =
nowrap n-resize nw-resize oblique olive once open-quote outset '+=0A=
						'outside overline pointer portrait pre print projection purple red =
relative repeat repeat-x repeat-y rgb ridge right right-side '+=0A=
						'rightwards rtl run-in screen scroll semi-condensed semi-expanded =
separate se-resize show silent silver slower slow '+=0A=
						'small small-caps small-caption smaller soft solid speech =
spell-out square s-resize static status-bar sub super sw-resize '+=0A=
						'table-caption table-cell table-column table-column-group =
table-footer-group table-header-group table-row table-row-group teal '+=0A=
						'text-bottom text-top thick thin top transparent tty tv =
ultra-condensed ultra-expanded underline upper-alpha uppercase =
upper-latin '+=0A=
						'upper-roman url visible wait white wider w-resize x-fast x-high =
x-large x-loud x-low x-slow x-small x-soft xx-large xx-small yellow';=0A=
		=0A=
		var fonts =3D		'[mM]onospace [tT]ahoma [vV]erdana [aA]rial =
[hH]elvetica [sS]ans-serif [sS]erif [cC]ourier mono sans serif';=0A=
		=0A=
		var statements		=3D '!important !default';=0A=
		var preprocessor	=3D '@import @extend @debug @warn @if @for @while =
@mixin @include';=0A=
		=0A=
		var r =3D SyntaxHighlighter.regexLib;=0A=
		=0A=
		this.regexList =3D [=0A=
			{ regex: r.multiLineCComments,								css: 'comments' },		// =
multiline comments=0A=
			{ regex: r.singleLineCComments,								css: 'comments' },		// =
singleline comments=0A=
			{ regex: r.doubleQuotedString,								css: 'string' },		// double =
quoted strings=0A=
			{ regex: r.singleQuotedString,								css: 'string' },		// single =
quoted strings=0A=
			{ regex: /\#[a-fA-F0-9]{3,6}/g,								css: 'value' },			// html =
colors=0A=
			{ regex: /\b(-?\d+)(\.\d+)?(px|em|pt|\:|\%|)\b/g,			css: 'value' },			=
// sizes=0A=
			{ regex: /\$\w+/g,											css: 'variable' },		// variables=0A=
			{ regex: new RegExp(this.getKeywords(statements), 'g'),		css: =
'color3' },		// statements=0A=
			{ regex: new RegExp(this.getKeywords(preprocessor), 'g'),	css: =
'preprocessor' },	// preprocessor=0A=
			{ regex: new RegExp(getKeywordsCSS(keywords), 'gm'),		css: 'keyword' =
},		// keywords=0A=
			{ regex: new RegExp(getValuesCSS(values), 'g'),				css: 'value' },			=
// values=0A=
			{ regex: new RegExp(this.getKeywords(fonts), 'g'),			css: 'color1' }		=
	// fonts=0A=
			];=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['sass', 'scss'];=0A=
=0A=
	SyntaxHighlighter.brushes.Sass =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		// Contributed by Yegor Jbanov and David Bernard.=0A=
	=0A=
		var keywords =3D	'val sealed case def true trait implicit forSome =
import match object null finally super ' +=0A=
						'override try lazy for var catch throw type extends class while =
with new final yield abstract ' +=0A=
						'else do if return protected private this package false';=0A=
=0A=
		var keyops =3D	'[_:=3D><%#@]+';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: SyntaxHighlighter.regexLib.singleLineCComments,			css: =
'comments' },	// one line comments=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineCComments,				css: =
'comments' },	// multiline comments=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineSingleQuotedString,	css: =
'string' },	// multi-line strings=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineDoubleQuotedString,    =
css: 'string' },	// double-quoted string=0A=
			{ regex: SyntaxHighlighter.regexLib.singleQuotedString,				css: =
'string' },	// strings=0A=
			{ regex: /0x[a-f0-9]+|\d+(\.\d+)?/gi,								css: 'value' },		// =
numbers=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),				css: =
'keyword' },	// keywords=0A=
			{ regex: new RegExp(keyops, 'gm'),									css: 'keyword' }	// scala =
keyword=0A=
			];=0A=
	}=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['scala'];=0A=
=0A=
	SyntaxHighlighter.brushes.Scala =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		var funcs	=3D	'abs avg case cast coalesce convert count =
current_timestamp ' +=0A=
						'current_user day isnull left lower month nullif replace right ' +=0A=
						'session_user space substring sum system_user upper user year';=0A=
=0A=
		var keywords =3D	'absolute action add after alter as asc at =
authorization begin bigint ' +=0A=
						'binary bit by cascade char character check checkpoint close =
collate ' +=0A=
						'column commit committed connect connection constraint contains =
continue ' +=0A=
						'create cube current current_date current_time cursor database =
date ' +=0A=
						'deallocate dec decimal declare default delete desc distinct =
double drop ' +=0A=
						'dynamic else end end-exec escape except exec execute false fetch =
first ' +=0A=
						'float for force foreign forward free from full function global =
goto grant ' +=0A=
						'group grouping having hour ignore index inner insensitive insert =
instead ' +=0A=
						'int integer intersect into is isolation key last level load local =
max min ' +=0A=
						'minute modify move name national nchar next no numeric of off on =
only ' +=0A=
						'open option order out output partial password precision prepare =
primary ' +=0A=
						'prior privileges procedure public read real references relative =
repeatable ' +=0A=
						'restrict return returns revoke rollback rollup rows rule schema =
scroll ' +=0A=
						'second section select sequence serializable set size smallint =
static ' +=0A=
						'statistics table temp temporary then time timestamp to top =
transaction ' +=0A=
						'translation trigger true truncate uncommitted union unique update =
values ' +=0A=
						'varchar varying view when where with work';=0A=
=0A=
		var operators =3D	'all and any between cross in join like not null or =
outer some';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: /--(.*)$/gm,												css: 'comments' },			// one line and =
multiline comments=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineDoubleQuotedString,	css: =
'string' },			// double quoted strings=0A=
			{ regex: SyntaxHighlighter.regexLib.multiLineSingleQuotedString,	css: =
'string' },			// single quoted strings=0A=
			{ regex: new RegExp(this.getKeywords(funcs), 'gmi'),				css: 'color2' =
},			// functions=0A=
			{ regex: new RegExp(this.getKeywords(operators), 'gmi'),			css: =
'color1' },			// operators and such=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gmi'),				css: =
'keyword' }			// keyword=0A=
			];=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['sql'];=0A=
=0A=
	SyntaxHighlighter.brushes.Sql =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		var keywords =3D	'AddHandler AddressOf AndAlso Alias And Ansi As =
Assembly Auto ' +=0A=
						'Boolean ByRef Byte ByVal Call Case Catch CBool CByte CChar CDate =
' +=0A=
						'CDec CDbl Char CInt Class CLng CObj Const CShort CSng CStr CType =
' +=0A=
						'Date Decimal Declare Default Delegate Dim DirectCast Do Double =
Each ' +=0A=
						'Else ElseIf End Enum Erase Error Event Exit False Finally For =
Friend ' +=0A=
						'Function Get GetType GoSub GoTo Handles If Implements Imports In =
' +=0A=
						'Inherits Integer Interface Is Let Lib Like Long Loop Me Mod =
Module ' +=0A=
						'MustInherit MustOverride MyBase MyClass Namespace New Next Not =
Nothing ' +=0A=
						'NotInheritable NotOverridable Object On Option Optional Or OrElse =
' +=0A=
						'Overloads Overridable Overrides ParamArray Preserve Private =
Property ' +=0A=
						'Protected Public RaiseEvent ReadOnly ReDim REM RemoveHandler =
Resume ' +=0A=
						'Return Select Set Shadows Shared Short Single Static Step Stop =
String ' +=0A=
						'Structure Sub SyncLock Then Throw To True Try TypeOf Unicode =
Until ' +=0A=
						'Variant When While With WithEvents WriteOnly Xor';=0A=
=0A=
		this.regexList =3D [=0A=
			{ regex: /'.*$/gm,										css: 'comments' },			// one line comments=0A=
			{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,	css: 'string' =
},			// strings=0A=
			{ regex: /^\s*#.*$/gm,									css: 'preprocessor' },		// =
preprocessor tags like #region and #endregion=0A=
			{ regex: new RegExp(this.getKeywords(keywords), 'gm'),	css: 'keyword' =
}			// vb keyword=0A=
			];=0A=
=0A=
		this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags);=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['vb', 'vbnet'];=0A=
=0A=
	SyntaxHighlighter.brushes.Vb =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
;(function()=0A=
{=0A=
	// CommonJS=0A=
	SyntaxHighlighter =3D SyntaxHighlighter || (typeof require !=3D=3D =
'undefined'? require('shCore').SyntaxHighlighter : null);=0A=
=0A=
	function Brush()=0A=
	{=0A=
		function process(match, regexInfo)=0A=
		{=0A=
			var constructor =3D SyntaxHighlighter.Match,=0A=
				code =3D match[0],=0A=
				tag =3D new XRegExp('(&lt;|<)[\\s\\/\\?]*(?<name>[:\\w-\\.]+)', =
'xg').exec(code),=0A=
				result =3D []=0A=
				;=0A=
		=0A=
			if (match.attributes !=3D null) =0A=
			{=0A=
				var attributes,=0A=
					regex =3D new XRegExp('(?<name> [\\w:\\-\\.]+)' +=0A=
										'\\s*=3D\\s*' +=0A=
										'(?<value> ".*?"|\'.*?\'|\\w+)',=0A=
										'xg');=0A=
=0A=
				while ((attributes =3D regex.exec(code)) !=3D null) =0A=
				{=0A=
					result.push(new constructor(attributes.name, match.index + =
attributes.index, 'color1'));=0A=
					result.push(new constructor(attributes.value, match.index + =
attributes.index + attributes[0].indexOf(attributes.value), 'string'));=0A=
				}=0A=
			}=0A=
=0A=
			if (tag !=3D null)=0A=
				result.push(=0A=
					new constructor(tag.name, match.index + tag[0].indexOf(tag.name), =
'keyword')=0A=
				);=0A=
=0A=
			return result;=0A=
		}=0A=
	=0A=
		this.regexList =3D [=0A=
			{ regex: new =
XRegExp('(\\&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](\\&gt;|>)', 'gm'),	=
		css: 'color2' },	// <![ ... [ ... ]]>=0A=
			{ regex: SyntaxHighlighter.regexLib.xmlComments,												css: =
'comments' },	// <!-- ... -->=0A=
			{ regex: new =
XRegExp('(&lt;|<)[\\s\\/\\?]*(\\w+)(?<attributes>.*?)[\\s\\/\\?]*(&gt;|>)=
', 'sg'), func: process }=0A=
		];=0A=
	};=0A=
=0A=
	Brush.prototype	=3D new SyntaxHighlighter.Highlighter();=0A=
	Brush.aliases	=3D ['xml', 'xhtml', 'xslt', 'html'];=0A=
=0A=
	SyntaxHighlighter.brushes.Xml =3D Brush;=0A=
=0A=
	// CommonJS=0A=
	typeof(exports) !=3D 'undefined' ? exports.Brush =3D Brush : null;=0A=
})();=0A=
=0A=
window.onload =3D function(){=0A=
    if($('.editor-side-new').length>0){=0A=
    	uParse('.editor-side-new');=0A=
    	SyntaxHighlighter.highlight();=0A=
    }=0A=
}
------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/marked.min.js?v=1.0.0.5

/**=0A=
 * marked - a markdown parser=0A=
 * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)=0A=
 * https://github.com/chjj/marked=0A=
 */=0A=
(function(){var block=3D{newline:/^\n+/,code:/^( =
{4}[^\n]+\n*)+/,fences:noop,hr:/^( *[-*_]){3,} *(?:\n+|$)/,heading:/^ =
*(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,nptable:noop,lheading:/^([^\n]+)\n =
*(=3D|-){2,} *(?:\n+|$)/,blockquote:/^( =
*>[^\n]+(\n(?!def)[^\n]+)*\n*)+/,list:/^( *)(bull) =
[\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:/^ *(?:comment =
*(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/,def:/^ =
*\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? =
*(?:\n+|$)/,table:noop,paragraph:/^((?:[^\n]+\n?(?!hr|heading|lheading|bl=
ockquote|tag|def))+)\n*/,text:/^[^\n]+/};block.bullet=3D/(?:[*+-]|\d+\.)/=
;block.item=3D/^( *)(bull) [^\n]*(?:\n(?!\1bull =
)[^\n]*)*/;block.item=3Dreplace(block.item,"gm")(/bull/g,block.bullet)();=
block.list=3Dreplace(block.list)(/bull/g,block.bullet)("hr","\\n+(?=3D\\1=
?(?:[-*_] =
*){3,}(?:\\n+|$))")("def","\\n+(?=3D"+block.def.source+")")();block.block=
quote=3Dreplace(block.blockquote)("def",block.def)();block._tag=3D"(?!(?:=
"+"a|em|strong|small|s|cite|q|dfn|abbr|data|time|code"+"|var|samp|kbd|sub=
|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo"+"|span|br|wbr|ins|del|img)\\b)\\w+(?!=
:/|[^\\w\\s@]*@)\\b";block.html=3Dreplace(block.html)("comment",/<!--[\s\=
S]*?-->/)("closed",/<(tag)[\s\S]+?<\/\1>/)("closing",/<tag(?:"[^"]*"|'[^'=
]*'|[^'">])*?>/)(/tag/g,block._tag)();block.paragraph=3Dreplace(block.par=
agraph)("hr",block.hr)("heading",block.heading)("lheading",block.lheading=
)("blockquote",block.blockquote)("tag","<"+block._tag)("def",block.def)()=
;block.normal=3Dmerge({},block);block.gfm=3Dmerge({},block.normal,{fences=
:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\s*\1 =
*(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* =
*(?:\n+|$)/});block.gfm.paragraph=3Dreplace(block.paragraph)("(?!","(?!"+=
block.gfm.fences.source.replace("\\1","\\2")+"|"+block.list.source.replac=
e("\\1","\\3")+"|")();block.tables=3Dmerge({},block.gfm,{nptable:/^ =
*(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,table:/^ =
*\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/});function =
Lexer(options){this.tokens=3D[];this.tokens.links=3D{};this.options=3Dopt=
ions||marked.defaults;this.rules=3Dblock.normal;if(this.options.gfm){if(t=
his.options.tables){this.rules=3Dblock.tables}else{this.rules=3Dblock.gfm=
}}}Lexer.rules=3Dblock;Lexer.lex=3Dfunction(src,options){var lexer=3Dnew =
Lexer(options);return =
lexer.lex(src)};Lexer.prototype.lex=3Dfunction(src){src=3Dsrc.replace(/\r=
\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," =
").replace(/\u2424/g,"\n");return =
this.token(src,true)};Lexer.prototype.token=3Dfunction(src,top,bq){var =
src=3Dsrc.replace(/^ =
+$/gm,""),next,loose,cap,bull,b,item,space,i,l;while(src){if(cap=3Dthis.r=
ules.newline.exec(src)){src=3Dsrc.substring(cap[0].length);if(cap[0].leng=
th>1){this.tokens.push({type:"space"})}}if(cap=3Dthis.rules.code.exec(src=
)){src=3Dsrc.substring(cap[0].length);cap=3Dcap[0].replace(/^ =
{4}/gm,"");this.tokens.push({type:"code",text:!this.options.pedantic?cap.=
replace(/\n+$/,""):cap});continue}if(cap=3Dthis.rules.fences.exec(src)){s=
rc=3Dsrc.substring(cap[0].length);this.tokens.push({type:"code",lang:cap[=
2],text:cap[3]||""});continue}if(cap=3Dthis.rules.heading.exec(src)){src=3D=
src.substring(cap[0].length);this.tokens.push({type:"heading",depth:cap[1=
].length,text:cap[2]});continue}if(top&&(cap=3Dthis.rules.nptable.exec(sr=
c))){src=3Dsrc.substring(cap[0].length);item=3D{type:"table",header:cap[1=
].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:cap[2].replace(/^ =
*|\| *$/g,"").split(/ *\| =
*/),cells:cap[3].replace(/\n$/,"").split("\n")};for(i=3D0;i<item.align.le=
ngth;i++){if(/^ *-+: =
*$/.test(item.align[i])){item.align[i]=3D"right"}else if(/^ *:-+: =
*$/.test(item.align[i])){item.align[i]=3D"center"}else if(/^ *:-+ =
*$/.test(item.align[i])){item.align[i]=3D"left"}else{item.align[i]=3Dnull=
}}for(i=3D0;i<item.cells.length;i++){item.cells[i]=3Ditem.cells[i].split(=
/ *\| =
*/)}this.tokens.push(item);continue}if(cap=3Dthis.rules.lheading.exec(src=
)){src=3Dsrc.substring(cap[0].length);this.tokens.push({type:"heading",de=
pth:cap[2]=3D=3D=3D"=3D"?1:2,text:cap[1]});continue}if(cap=3Dthis.rules.h=
r.exec(src)){src=3Dsrc.substring(cap[0].length);this.tokens.push({type:"h=
r"});continue}if(cap=3Dthis.rules.blockquote.exec(src)){src=3Dsrc.substri=
ng(cap[0].length);this.tokens.push({type:"blockquote_start"});cap=3Dcap[0=
].replace(/^ *> =
?/gm,"");this.token(cap,top,true);this.tokens.push({type:"blockquote_end"=
});continue}if(cap=3Dthis.rules.list.exec(src)){src=3Dsrc.substring(cap[0=
].length);bull=3Dcap[2];this.tokens.push({type:"list_start",ordered:bull.=
length>1});cap=3Dcap[0].match(this.rules.item);next=3Dfalse;l=3Dcap.lengt=
h;i=3D0;for(;i<l;i++){item=3Dcap[i];space=3Ditem.length;item=3Ditem.repla=
ce(/^ *([*+-]|\d+\.) +/,"");if(~item.indexOf("\n =
")){space-=3Ditem.length;item=3D!this.options.pedantic?item.replace(new =
RegExp("^ {1,"+space+"}","gm"),""):item.replace(/^ =
{1,4}/gm,"")}if(this.options.smartLists&&i!=3D=3Dl-1){b=3Dblock.bullet.ex=
ec(cap[i+1])[0];if(bull!=3D=3Db&&!(bull.length>1&&b.length>1)){src=3Dcap.=
slice(i+1).join("\n")+src;i=3Dl-1}}loose=3Dnext||/\n\n(?!\s*$)/.test(item=
);if(i!=3D=3Dl-1){next=3Ditem.charAt(item.length-1)=3D=3D=3D"\n";if(!loos=
e)loose=3Dnext}this.tokens.push({type:loose?"loose_item_start":"list_item=
_start"});this.token(item,false,bq);this.tokens.push({type:"list_item_end=
"})}this.tokens.push({type:"list_end"});continue}if(cap=3Dthis.rules.html=
.exec(src)){src=3Dsrc.substring(cap[0].length);this.tokens.push({type:thi=
s.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&(cap[1=
]=3D=3D=3D"pre"||cap[1]=3D=3D=3D"script"||cap[1]=3D=3D=3D"style"),text:ca=
p[0]});continue}if(!bq&&top&&(cap=3Dthis.rules.def.exec(src))){src=3Dsrc.=
substring(cap[0].length);this.tokens.links[cap[1].toLowerCase()]=3D{href:=
cap[2],title:cap[3]};continue}if(top&&(cap=3Dthis.rules.table.exec(src)))=
{src=3Dsrc.substring(cap[0].length);item=3D{type:"table",header:cap[1].re=
place(/^ *| *\| *$/g,"").split(/ *\| */),align:cap[2].replace(/^ *|\| =
*$/g,"").split(/ *\| */),cells:cap[3].replace(/(?: *\| =
*)?\n$/,"").split("\n")};for(i=3D0;i<item.align.length;i++){if(/^ *-+: =
*$/.test(item.align[i])){item.align[i]=3D"right"}else if(/^ *:-+: =
*$/.test(item.align[i])){item.align[i]=3D"center"}else if(/^ *:-+ =
*$/.test(item.align[i])){item.align[i]=3D"left"}else{item.align[i]=3Dnull=
}}for(i=3D0;i<item.cells.length;i++){item.cells[i]=3Ditem.cells[i].replac=
e(/^ *\| *| *\| *$/g,"").split(/ *\| =
*/)}this.tokens.push(item);continue}if(top&&(cap=3Dthis.rules.paragraph.e=
xec(src))){src=3Dsrc.substring(cap[0].length);this.tokens.push({type:"par=
agraph",text:cap[1].charAt(cap[1].length-1)=3D=3D=3D"\n"?cap[1].slice(0,-=
1):cap[1]});continue}if(cap=3Dthis.rules.text.exec(src)){src=3Dsrc.substr=
ing(cap[0].length);this.tokens.push({type:"text",text:cap[0]});continue}i=
f(src){throw new Error("Infinite loop on byte: =
"+src.charCodeAt(0))}}return this.tokens};var =
inline=3D{escape:/^\\([\\`*{}\[\]()#+\-.!_>])/,autolink:/^<([^ =
>]+(@|:\/)[^ =
>]+)>/,url:noop,tag:/^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*=
?>/,link:/^!?\[(inside)\]\(href\)/,reflink:/^!?\[(inside)\]\s*\[([^\]]*)\=
]/,nolink:/^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,strong:/^__([\s\S]+?)__(?!_)=
|^\*\*([\s\S]+?)\*\*(?!\*)/,em:/^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S]=
)+?)\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,br:/^ =
{2,}\n(?!\s*$)/,del:noop,text:/^[\s\S]+?(?=3D[\\<!\[_*`]| =
{2,}\n|$)/};inline._inside=3D/(?:\[[^\]]*\]|[^\[\]]|\](?=3D[^\[]*\]))*/;i=
nline._href=3D/\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/;inline.lin=
k=3Dreplace(inline.link)("inside",inline._inside)("href",inline._href)();=
inline.reflink=3Dreplace(inline.reflink)("inside",inline._inside)();inlin=
e.normal=3Dmerge({},inline);inline.pedantic=3Dmerge({},inline.normal,{str=
ong:/^__(?=3D\S)([\s\S]*?\S)__(?!_)|^\*\*(?=3D\S)([\s\S]*?\S)\*\*(?!\*)/,=
em:/^_(?=3D\S)([\s\S]*?\S)_(?!_)|^\*(?=3D\S)([\s\S]*?\S)\*(?!\*)/});inlin=
e.gfm=3Dmerge({},inline.normal,{escape:replace(inline.escape)("])","~|])"=
)(),url:/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,del:/^~~(?=3D\S)([\s\S]*?\=
S)~~/,text:replace(inline.text)("]|","~]|")("|","|https?://|")()});inline=
.breaks=3Dmerge({},inline.gfm,{br:replace(inline.br)("{2,}","*")(),text:r=
eplace(inline.gfm.text)("{2,}","*")()});function =
InlineLexer(links,options){this.options=3Doptions||marked.defaults;this.l=
inks=3Dlinks;this.rules=3Dinline.normal;this.renderer=3Dthis.options.rend=
erer||new =
Renderer;this.renderer.options=3Dthis.options;if(!this.links){throw new =
Error("Tokens array requires a `links` =
property.")}if(this.options.gfm){if(this.options.breaks){this.rules=3Dinl=
ine.breaks}else{this.rules=3Dinline.gfm}}else =
if(this.options.pedantic){this.rules=3Dinline.pedantic}}InlineLexer.rules=
=3Dinline;InlineLexer.output=3Dfunction(src,links,options){var =
inline=3Dnew InlineLexer(links,options);return =
inline.output(src)};InlineLexer.prototype.output=3Dfunction(src){var =
out=3D"",link,text,href,cap;while(src){if(cap=3Dthis.rules.escape.exec(sr=
c)){src=3Dsrc.substring(cap[0].length);out+=3Dcap[1];continue}if(cap=3Dth=
is.rules.autolink.exec(src)){src=3Dsrc.substring(cap[0].length);if(cap[2]=
=3D=3D=3D"@"){text=3Dcap[1].charAt(6)=3D=3D=3D":"?this.mangle(cap[1].subs=
tring(7)):this.mangle(cap[1]);href=3Dthis.mangle("mailto:")+text}else{tex=
t=3Descape(cap[1]);href=3Dtext}out+=3Dthis.renderer.link(href,null,text);=
continue}if(!this.inLink&&(cap=3Dthis.rules.url.exec(src))){src=3Dsrc.sub=
string(cap[0].length);text=3Descape(cap[1]);href=3Dtext;out+=3Dthis.rende=
rer.link(href,null,text);continue}if(cap=3Dthis.rules.tag.exec(src)){if(!=
this.inLink&&/^<a /i.test(cap[0])){this.inLink=3Dtrue}else =
if(this.inLink&&/^<\/a>/i.test(cap[0])){this.inLink=3Dfalse}src=3Dsrc.sub=
string(cap[0].length);out+=3Dthis.options.sanitize?this.options.sanitizer=
?this.options.sanitizer(cap[0]):escape(cap[0]):cap[0];continue}if(cap=3Dt=
his.rules.link.exec(src)){src=3Dsrc.substring(cap[0].length);this.inLink=3D=
true;out+=3Dthis.outputLink(cap,{href:cap[2],title:cap[3]});this.inLink=3D=
false;continue}if((cap=3Dthis.rules.reflink.exec(src))||(cap=3Dthis.rules=
.nolink.exec(src))){src=3Dsrc.substring(cap[0].length);link=3D(cap[2]||ca=
p[1]).replace(/\s+/g," =
");link=3Dthis.links[link.toLowerCase()];if(!link||!link.href){out+=3Dcap=
[0].charAt(0);src=3Dcap[0].substring(1)+src;continue}this.inLink=3Dtrue;o=
ut+=3Dthis.outputLink(cap,link);this.inLink=3Dfalse;continue}if(cap=3Dthi=
s.rules.strong.exec(src)){src=3Dsrc.substring(cap[0].length);out+=3Dthis.=
renderer.strong(this.output(cap[2]||cap[1]));continue}if(cap=3Dthis.rules=
.em.exec(src)){src=3Dsrc.substring(cap[0].length);out+=3Dthis.renderer.em=
(this.output(cap[2]||cap[1]));continue}if(cap=3Dthis.rules.code.exec(src)=
){src=3Dsrc.substring(cap[0].length);out+=3Dthis.renderer.codespan(escape=
(cap[2],true));continue}if(cap=3Dthis.rules.br.exec(src)){src=3Dsrc.subst=
ring(cap[0].length);out+=3Dthis.renderer.br();continue}if(cap=3Dthis.rule=
s.del.exec(src)){src=3Dsrc.substring(cap[0].length);out+=3Dthis.renderer.=
del(this.output(cap[1]));continue}if(cap=3Dthis.rules.text.exec(src)){src=
=3Dsrc.substring(cap[0].length);out+=3Dthis.renderer.text(escape(this.sma=
rtypants(cap[0])));continue}if(src){throw new Error("Infinite loop on =
byte: "+src.charCodeAt(0))}}return =
out};InlineLexer.prototype.outputLink=3Dfunction(cap,link){var =
href=3Descape(link.href),title=3Dlink.title?escape(link.title):null;retur=
n =
cap[0].charAt(0)!=3D=3D"!"?this.renderer.link(href,title,this.output(cap[=
1])):this.renderer.image(href,title,escape(cap[1]))};InlineLexer.prototyp=
e.smartypants=3Dfunction(text){if(!this.options.smartypants)return =
text;return =
text.replace(/---/g,"=E2=80=94").replace(/--/g,"=E2=80=93").replace(/(^|[=
-\u2014/(\[{"\s])'/g,"$1=E2=80=98").replace(/'/g,"=E2=80=99").replace(/(^=
|[-\u2014/(\[{\u2018\s])"/g,"$1=E2=80=9C").replace(/"/g,"=E2=80=9D").repl=
ace(/\.{3}/g,"=E2=80=A6")};InlineLexer.prototype.mangle=3Dfunction(text){=
if(!this.options.mangle)return text;var =
out=3D"",l=3Dtext.length,i=3D0,ch;for(;i<l;i++){ch=3Dtext.charCodeAt(i);i=
f(Math.random()>.5){ch=3D"x"+ch.toString(16)}out+=3D"&#"+ch+";"}return =
out};function =
Renderer(options){this.options=3Doptions||{}}Renderer.prototype.code=3Dfu=
nction(code,lang,escaped){if(this.options.highlight){var =
out=3Dthis.options.highlight(code,lang);if(out!=3Dnull&&out!=3D=3Dcode){e=
scaped=3Dtrue;code=3Dout}}if(!lang){return"<pre><code>"+(escaped?code:esc=
ape(code,true))+"\n</code></pre>"}return'<pre><code =
class=3D"'+this.options.langPrefix+escape(lang,true)+'">'+(escaped?code:e=
scape(code,true))+"\n</code></pre>\n"};Renderer.prototype.blockquote=3Dfu=
nction(quote){return"<blockquote>\n"+quote+"</blockquote>\n"};Renderer.pr=
ototype.html=3Dfunction(html){return =
html};Renderer.prototype.heading=3Dfunction(text,level,raw){return"<h"+le=
vel+' =
id=3D"'+this.options.headerPrefix+raw.toLowerCase().replace(/[^\w]+/g,"-"=
)+'">'+text+"</h"+level+">\n"};Renderer.prototype.hr=3Dfunction(){return =
this.options.xhtml?"<hr/>\n":"<hr>\n"};Renderer.prototype.list=3Dfunction=
(body,ordered){var =
type=3Dordered?"ol":"ul";return"<"+type+">\n"+body+"</"+type+">\n"};Rende=
rer.prototype.listitem=3Dfunction(text){return"<li>"+text+"</li>\n"};Rend=
erer.prototype.paragraph=3Dfunction(text){return"<p>"+text+"</p>\n"};Rend=
erer.prototype.table=3Dfunction(header,body){return"<table>\n"+"<thead>\n=
"+header+"</thead>\n"+"<tbody>\n"+body+"</tbody>\n"+"</table>\n"};Rendere=
r.prototype.tablerow=3Dfunction(content){return"<tr>\n"+content+"</tr>\n"=
};Renderer.prototype.tablecell=3Dfunction(content,flags){var =
type=3Dflags.header?"th":"td";var tag=3Dflags.align?"<"+type+' =
style=3D"text-align:'+flags.align+'">':"<"+type+">";return =
tag+content+"</"+type+">\n"};Renderer.prototype.strong=3Dfunction(text){r=
eturn"<strong>"+text+"</strong>"};Renderer.prototype.em=3Dfunction(text){=
return"<em>"+text+"</em>"};Renderer.prototype.codespan=3Dfunction(text){r=
eturn"<code>"+text+"</code>"};Renderer.prototype.br=3Dfunction(){return =
this.options.xhtml?"<br/>":"<br>"};Renderer.prototype.del=3Dfunction(text=
){return"<del>"+text+"</del>"};Renderer.prototype.link=3Dfunction(href,ti=
tle,text){if(this.options.sanitize){try{var =
prot=3DdecodeURIComponent(unescape(href)).replace(/[^\w:]/g,"").toLowerCa=
se()}catch(e){return""}if(prot.indexOf("javascript:")=3D=3D=3D0||prot.ind=
exOf("vbscript:")=3D=3D=3D0){return""}}var out=3D'<a href=3D"'+href+'" =
target=3D"_blank"';if(title){out+=3D' =
title=3D"'+title+'"'}out+=3D">"+text+"</a>";return =
out};Renderer.prototype.image=3Dfunction(href,title,text){var =
out=3D'<img src=3D"'+href+'" alt=3D"'+text+'"';if(title){out+=3D' =
title=3D"'+title+'"'}out+=3Dthis.options.xhtml?"/>":">";return =
out};Renderer.prototype.text=3Dfunction(text){return text};function =
Parser(options){this.tokens=3D[];this.token=3Dnull;this.options=3Doptions=
||marked.defaults;this.options.renderer=3Dthis.options.renderer||new =
Renderer;this.renderer=3Dthis.options.renderer;this.renderer.options=3Dth=
is.options}Parser.parse=3Dfunction(src,options,renderer){var =
parser=3Dnew Parser(options,renderer);return =
parser.parse(src)};Parser.prototype.parse=3Dfunction(src){this.inline=3Dn=
ew =
InlineLexer(src.links,this.options,this.renderer);this.tokens=3Dsrc.rever=
se();var out=3D"";while(this.next()){out+=3Dthis.tok()}return =
out};Parser.prototype.next=3Dfunction(){return =
this.token=3Dthis.tokens.pop()};Parser.prototype.peek=3Dfunction(){return=
 =
this.tokens[this.tokens.length-1]||0};Parser.prototype.parseText=3Dfuncti=
on(){var =
body=3Dthis.token.text;while(this.peek().type=3D=3D=3D"text"){body+=3D"\n=
"+this.next().text}return =
this.inline.output(body)};Parser.prototype.tok=3Dfunction(){switch(this.t=
oken.type){case"space":{return""}case"hr":{return =
this.renderer.hr()}case"heading":{return =
this.renderer.heading(this.inline.output(this.token.text),this.token.dept=
h,this.token.text)}case"code":{return =
this.renderer.code(this.token.text,this.token.lang,this.token.escaped)}ca=
se"table":{var =
header=3D"",body=3D"",i,row,cell,flags,j;cell=3D"";for(i=3D0;i<this.token=
.header.length;i++){flags=3D{header:true,align:this.token.align[i]};cell+=
=3Dthis.renderer.tablecell(this.inline.output(this.token.header[i]),{head=
er:true,align:this.token.align[i]})}header+=3Dthis.renderer.tablerow(cell=
);for(i=3D0;i<this.token.cells.length;i++){row=3Dthis.token.cells[i];cell=
=3D"";for(j=3D0;j<row.length;j++){cell+=3Dthis.renderer.tablecell(this.in=
line.output(row[j]),{header:false,align:this.token.align[j]})}body+=3Dthi=
s.renderer.tablerow(cell)}return =
this.renderer.table(header,body)}case"blockquote_start":{var =
body=3D"";while(this.next().type!=3D=3D"blockquote_end"){body+=3Dthis.tok=
()}return this.renderer.blockquote(body)}case"list_start":{var =
body=3D"",ordered=3Dthis.token.ordered;while(this.next().type!=3D=3D"list=
_end"){body+=3Dthis.tok()}return =
this.renderer.list(body,ordered)}case"list_item_start":{var =
body=3D"";while(this.next().type!=3D=3D"list_item_end"){body+=3Dthis.toke=
n.type=3D=3D=3D"text"?this.parseText():this.tok()}return =
this.renderer.listitem(body)}case"loose_item_start":{var =
body=3D"";while(this.next().type!=3D=3D"list_item_end"){body+=3Dthis.tok(=
)}return this.renderer.listitem(body)}case"html":{var =
html=3D!this.token.pre&&!this.options.pedantic?this.inline.output(this.to=
ken.text):this.token.text;return =
this.renderer.html(html)}case"paragraph":{return =
this.renderer.paragraph(this.inline.output(this.token.text))}case"text":{=
return this.renderer.paragraph(this.parseText())}}};function =
escape(html,encode){return =
html.replace(!encode?/&(?!#?\w+;)/g:/&/g,"&amp;").replace(/</g,"&lt;").re=
place(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function =
unescape(html){return =
html.replace(/&([#\w]+);/g,function(_,n){n=3Dn.toLowerCase();if(n=3D=3D=3D=
"colon")return":";if(n.charAt(0)=3D=3D=3D"#"){return =
n.charAt(1)=3D=3D=3D"x"?String.fromCharCode(parseInt(n.substring(2),16)):=
String.fromCharCode(+n.substring(1))}return""})}function =
replace(regex,opt){regex=3Dregex.source;opt=3Dopt||"";return function =
self(name,val){if(!name)return new =
RegExp(regex,opt);val=3Dval.source||val;val=3Dval.replace(/(^|[^\[])\^/g,=
"$1");regex=3Dregex.replace(name,val);return self}}function =
noop(){}noop.exec=3Dnoop;function merge(obj){var =
i=3D1,target,key;for(;i<arguments.length;i++){target=3Darguments[i];for(k=
ey in =
target){if(Object.prototype.hasOwnProperty.call(target,key)){obj[key]=3Dt=
arget[key]}}}return obj}function =
marked(src,opt,callback){if(callback||typeof =
opt=3D=3D=3D"function"){if(!callback){callback=3Dopt;opt=3Dnull}opt=3Dmer=
ge({},marked.defaults,opt||{});var =
highlight=3Dopt.highlight,tokens,pending,i=3D0;try{tokens=3DLexer.lex(src=
,opt)}catch(e){return callback(e)}pending=3Dtokens.length;var =
done=3Dfunction(err){if(err){opt.highlight=3Dhighlight;return =
callback(err)}var =
out;try{out=3DParser.parse(tokens,opt)}catch(e){err=3De}opt.highlight=3Dh=
ighlight;return =
err?callback(err):callback(null,out)};if(!highlight||highlight.length<3){=
return done()}delete opt.highlight;if(!pending)return =
done();for(;i<tokens.length;i++){(function(token){if(token.type!=3D=3D"co=
de"){return--pending||done()}return =
highlight(token.text,token.lang,function(err,code){if(err)return =
done(err);if(code=3D=3Dnull||code=3D=3D=3Dtoken.text){return--pending||do=
ne()}token.text=3Dcode;token.escaped=3Dtrue;--pending||done()})})(tokens[=
i])}return}try{if(opt)opt=3Dmerge({},marked.defaults,opt);return =
Parser.parse(Lexer.lex(src,opt),opt)}catch(e){e.message+=3D"\nPlease =
report this to =
https://github.com/chjj/marked.";if((opt||marked.defaults).silent){return=
"<p>An error occured:</p><pre>"+escape(e.message+"",true)+"</pre>"}throw =
e}}marked.options=3Dmarked.setOptions=3Dfunction(opt){merge(marked.defaul=
ts,opt);return =
marked};marked.defaults=3D{gfm:true,tables:true,breaks:false,pedantic:fal=
se,sanitize:false,sanitizer:null,mangle:true,smartLists:false,silent:fals=
e,highlight:null,langPrefix:"lang-",smartypants:false,headerPrefix:"",ren=
derer:new =
Renderer,xhtml:false};marked.Parser=3DParser;marked.parser=3DParser.parse=
;marked.Renderer=3DRenderer;marked.Lexer=3DLexer;marked.lexer=3DLexer.lex=
;marked.InlineLexer=3DInlineLexer;marked.inlineLexer=3DInlineLexer.output=
;marked.parse=3Dmarked;if(typeof module!=3D=3D"undefined"&&typeof =
exports=3D=3D=3D"object"){module.exports=3Dmarked}else if(typeof =
define=3D=3D=3D"function"&&define.amd){define(function(){return =
marked})}else{this.marked=3Dmarked}}).call(function(){return =
this||(typeof window!=3D=3D"undefined"?window:global)}());
------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/highlight.js

/*! highlight.js v9.11.0 | BSD3 License | git.io/hljslicense */=0A=
!function(e){var t=3D"object"=3D=3Dtypeof =
window&&window||"object"=3D=3Dtypeof self&&self;"undefined"!=3Dtypeof =
exports?e(exports):t&&(t.hljs=3De({}),"function"=3D=3Dtypeof =
define&&define.amd&&define([],function(){return =
t.hljs}))}(function(e){function t(e){return =
e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}functio=
n r(e){return e.nodeName.toLowerCase()}function a(e,t){var =
r=3De&&e.exec(t);return r&&0=3D=3D=3Dr.index}function n(e){return =
E.test(e)}function i(e){var t,r,a,i,s=3De.className+" =
";if(s+=3De.parentNode?e.parentNode.className:"",r=3DM.exec(s))return =
w(r[1])?r[1]:"no-highlight";for(s=3Ds.split(/\s+/),t=3D0,a=3Ds.length;a>t=
;t++)if(i=3Ds[t],n(i)||w(i))return i}function s(e){var =
t,r=3D{},a=3DArray.prototype.slice.call(arguments,1);for(t in =
e)r[t]=3De[t];return a.forEach(function(e){for(t in =
e)r[t]=3De[t]}),r}function c(e){var t=3D[];return function =
a(e,n){for(var =
i=3De.firstChild;i;i=3Di.nextSibling)3=3D=3D=3Di.nodeType?n+=3Di.nodeValu=
e.length:1=3D=3D=3Di.nodeType&&(t.push({event:"start",offset:n,node:i}),n=
=3Da(i,n),r(i).match(/br|hr|img|input/)||t.push({event:"stop",offset:n,no=
de:i}));return n}(e,0),t}function o(e,a,n){function i(){return =
e.length&&a.length?e[0].offset!=3D=3Da[0].offset?e[0].offset<a[0].offset?=
e:a:"start"=3D=3D=3Da[0].event?e:a:e.length?e:a}function s(e){function =
a(e){return" =
"+e.nodeName+'=3D"'+t(e.value).replace('"',"&quot;")+'"'}u+=3D"<"+r(e)+N.=
map.call(e.attributes,a).join("")+">"}function =
c(e){u+=3D"</"+r(e)+">"}function =
o(e){("start"=3D=3D=3De.event?s:c)(e.node)}for(var =
l=3D0,u=3D"",d=3D[];e.length||a.length;){var =
b=3Di();if(u+=3Dt(n.substring(l,b[0].offset)),l=3Db[0].offset,b=3D=3D=3De=
){d.reverse().forEach(c);do =
o(b.splice(0,1)[0]),b=3Di();while(b=3D=3D=3De&&b.length&&b[0].offset=3D=3D=
=3Dl);d.reverse().forEach(s)}else"start"=3D=3D=3Db[0].event?d.push(b[0].n=
ode):d.pop(),o(b.splice(0,1)[0])}return u+t(n.substr(l))}function =
l(e){return =
e.v&&!e.cached_variants&&(e.cached_variants=3De.v.map(function(t){return =
s(e,{v:null},t)})),e.cached_variants||e.eW&&[s(e)]||[e]}function =
u(e){function t(e){return e&&e.source||e}function r(r,a){return new =
RegExp(t(r),"m"+(e.cI?"i":"")+(a?"g":""))}function =
a(n,i){if(!n.compiled){if(n.compiled=3D!0,n.k=3Dn.k||n.bK,n.k){var =
s=3D{},c=3Dfunction(t,r){e.cI&&(r=3Dr.toLowerCase()),r.split(" =
").forEach(function(e){var =
r=3De.split("|");s[r[0]]=3D[t,r[1]?Number(r[1]):1]})};"string"=3D=3Dtypeo=
f =
n.k?c("keyword",n.k):k(n.k).forEach(function(e){c(e,n.k[e])}),n.k=3Ds}n.l=
R=3Dr(n.l||/\w+/,!0),i&&(n.bK&&(n.b=3D"\\b("+n.bK.split(" =
").join("|")+")\\b"),n.b||(n.b=3D/\B|\b/),n.bR=3Dr(n.b),n.e||n.eW||(n.e=3D=
/\B|\b/),n.e&&(n.eR=3Dr(n.e)),n.tE=3Dt(n.e)||"",n.eW&&i.tE&&(n.tE+=3D(n.e=
?"|":"")+i.tE)),n.i&&(n.iR=3Dr(n.i)),null=3D=3Dn.r&&(n.r=3D1),n.c||(n.c=3D=
[]),n.c=3DArray.prototype.concat.apply([],n.c.map(function(e){return =
l("self"=3D=3D=3De?n:e)})),n.c.forEach(function(e){a(e,n)}),n.starts&&a(n=
.starts,i);var o=3Dn.c.map(function(e){return =
e.bK?"\\.?("+e.b+")\\.?":e.b}).concat([n.tE,n.i]).map(t).filter(Boolean);=
n.t=3Do.length?r(o.join("|"),!0):{exec:function(){return =
null}}}}a(e)}function d(e,r,n,i){function s(e,t){var =
r,n;for(r=3D0,n=3Dt.c.length;n>r;r++)if(a(t.c[r].bR,e))return =
t.c[r]}function =
c(e,t){if(a(e.eR,t)){for(;e.endsParent&&e.parent;)e=3De.parent;return =
e}return e.eW?c(e.parent,t):void 0}function =
o(e,t){return!n&&a(t.iR,e)}function l(e,t){var =
r=3Dv.cI?t[0].toLowerCase():t[0];return =
e.k.hasOwnProperty(r)&&e.k[r]}function p(e,t,r,a){var =
n=3Da?"":L.classPrefix,i=3D'<span class=3D"'+n,s=3Dr?"":R;return =
i+=3De+'">',i+t+s}function m(){var e,r,a,n;if(!N.k)return =
t(E);for(n=3D"",r=3D0,N.lR.lastIndex=3D0,a=3DN.lR.exec(E);a;)n+=3Dt(E.sub=
string(r,a.index)),e=3Dl(N,a),e?(M+=3De[1],n+=3Dp(e[0],t(a[0]))):n+=3Dt(a=
[0]),r=3DN.lR.lastIndex,a=3DN.lR.exec(E);return =
n+t(E.substr(r))}function f(){var e=3D"string"=3D=3Dtypeof =
N.sL;if(e&&!x[N.sL])return t(E);var =
r=3De?d(N.sL,E,!0,k[N.sL]):b(E,N.sL.length?N.sL:void 0);return =
N.r>0&&(M+=3Dr.r),e&&(k[N.sL]=3Dr.top),p(r.language,r.value,!1,!0)}functi=
on g(){C+=3Dnull!=3DN.sL?f():m(),E=3D""}function =
_(e){C+=3De.cN?p(e.cN,"",!0):"",N=3DObject.create(e,{parent:{value:N}})}f=
unction h(e,t){if(E+=3De,null=3D=3Dt)return g(),0;var =
r=3Ds(t,N);if(r)return =
r.skip?E+=3Dt:(r.eB&&(E+=3Dt),g(),r.rB||r.eB||(E=3Dt)),_(r,t),r.rB?0:t.le=
ngth;var a=3Dc(N,t);if(a){var =
n=3DN;n.skip?E+=3Dt:(n.rE||n.eE||(E+=3Dt),g(),n.eE&&(E=3Dt));do =
N.cN&&(C+=3DR),N.skip||(M+=3DN.r),N=3DN.parent;while(N!=3D=3Da.parent);re=
turn a.starts&&_(a.starts,""),n.rE?0:t.length}if(o(t,N))throw new =
Error('Illegal lexeme "'+t+'" for mode =
"'+(N.cN||"<unnamed>")+'"');return E+=3Dt,t.length||1}var =
v=3Dw(e);if(!v)throw new Error('Unknown language: "'+e+'"');u(v);var =
y,N=3Di||v,k=3D{},C=3D"";for(y=3DN;y!=3D=3Dv;y=3Dy.parent)y.cN&&(C=3Dp(y.=
cN,"",!0)+C);var E=3D"",M=3D0;try{for(var =
B,S,$=3D0;;){if(N.t.lastIndex=3D$,B=3DN.t.exec(r),!B)break;S=3Dh(r.substr=
ing($,B.index),B[0]),$=3DB.index+S}for(h(r.substr($)),y=3DN;y.parent;y=3D=
y.parent)y.cN&&(C+=3DR);return{r:M,value:C,language:e,top:N}}catch(A){if(=
A.message&&-1!=3D=3DA.message.indexOf("Illegal"))return{r:0,value:t(r)};t=
hrow A}}function b(e,r){r=3Dr||L.languages||k(x);var =
a=3D{r:0,value:t(e)},n=3Da;return r.filter(w).forEach(function(t){var =
r=3Dd(t,e,!1);r.language=3Dt,r.r>n.r&&(n=3Dr),r.r>a.r&&(n=3Da,a=3Dr)}),n.=
language&&(a.second_best=3Dn),a}function p(e){return =
L.tabReplace||L.useBR?e.replace(B,function(e,t){return =
L.useBR&&"\n"=3D=3D=3De?"<br>":L.tabReplace?t.replace(/\t/g,L.tabReplace)=
:""}):e}function m(e,t,r){var a=3Dt?C[t]:r,n=3D[e.trim()];return =
e.match(/\bhljs\b/)||n.push("hljs"),-1=3D=3D=3De.indexOf(a)&&n.push(a),n.=
join(" ").trim()}function f(e){var =
t,r,a,s,l,u=3Di(e);n(u)||(L.useBR?(t=3Ddocument.createElementNS("http://w=
ww.w3.org/1999/xhtml","div"),t.innerHTML=3De.innerHTML.replace(/\n/g,"").=
replace(/<br[ =
\/]*>/g,"\n")):t=3De,l=3Dt.textContent,a=3Du?d(u,l,!0):b(l),r=3Dc(t),r.le=
ngth&&(s=3Ddocument.createElementNS("http://www.w3.org/1999/xhtml","div")=
,s.innerHTML=3Da.value,a.value=3Do(r,c(s),l)),a.value=3Dp(a.value),e.inne=
rHTML=3Da.value,e.className=3Dm(e.className,u,a.language),e.result=3D{lan=
guage:a.language,re:a.r},a.second_best&&(e.second_best=3D{language:a.seco=
nd_best.language,re:a.second_best.r}))}function g(e){L=3Ds(L,e)}function =
_(){if(!_.called){_.called=3D!0;var e=3Ddocument.querySelectorAll("pre =
code");N.forEach.call(e,f)}}function =
h(){addEventListener("DOMContentLoaded",_,!1),addEventListener("load",_,!=
1)}function v(t,r){var =
a=3Dx[t]=3Dr(e);a.aliases&&a.aliases.forEach(function(e){C[e]=3Dt})}funct=
ion y(){return k(x)}function w(e){return =
e=3D(e||"").toLowerCase(),x[e]||x[C[e]]}var =
N=3D[],k=3DObject.keys,x=3D{},C=3D{},E=3D/^(no-?highlight|plain|text)$/i,=
M=3D/\blang(?:uage)?-([\w-]+)\b/i,B=3D/((^(<[^>]+>|\t|)+|(?:\n)))/gm,R=3D=
"</span>",L=3D{classPrefix:"hljs-",tabReplace:null,useBR:!1,languages:voi=
d 0};return =
e.highlight=3Dd,e.highlightAuto=3Db,e.fixMarkup=3Dp,e.highlightBlock=3Df,=
e.configure=3Dg,e.initHighlighting=3D_,e.initHighlightingOnLoad=3Dh,e.reg=
isterLanguage=3Dv,e.listLanguages=3Dy,e.getLanguage=3Dw,e.inherit=3Ds,e.I=
R=3D"[a-zA-Z]\\w*",e.UIR=3D"[a-zA-Z_]\\w*",e.NR=3D"\\b\\d+(\\.\\d+)?",e.C=
NR=3D"(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+=
)?)",e.BNR=3D"\\b(0b[01]+)",e.RSR=3D"!|!=3D|!=3D=3D|%|%=3D|&|&&|&=3D|\\*|=
\\*=3D|\\+|\\+=3D|,|-|-=3D|/=3D|/|:|;|<<|<<=3D|<=3D|<|=3D=3D=3D|=3D=3D|=3D=
|>>>=3D|>>=3D|>=3D|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=3D|\\||\\|=3D|\\|\\||=
~",e.BE=3D{b:"\\\\[\\s\\S]",r:0},e.ASM=3D{cN:"string",b:"'",e:"'",i:"\\n"=
,c:[e.BE]},e.QSM=3D{cN:"string",b:'"',e:'"',i:"\\n",c:[e.BE]},e.PWM=3D{b:=
/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|sim=
ply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},e.C=3D=
function(t,r,a){var =
n=3De.inherit({cN:"comment",b:t,e:r,c:[]},a||{});return =
n.c.push(e.PWM),n.c.push({cN:"doctag",b:"(?:TODO|FIXME|NOTE|BUG|XXX):",r:=
0}),n},e.CLCM=3De.C("//","$"),e.CBCM=3De.C("/\\*","\\*/"),e.HCM=3De.C("#"=
,"$"),e.NM=3D{cN:"number",b:e.NR,r:0},e.CNM=3D{cN:"number",b:e.CNR,r:0},e=
.BNM=3D{cN:"number",b:e.BNR,r:0},e.CSSNM=3D{cN:"number",b:e.NR+"(%|em|ex|=
ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dp=
i|dpcm|dppx)?",r:0},e.RM=3D{cN:"regexp",b:/\//,e:/\/[gimuy]*/,i:/\n/,c:[e=
.BE,{b:/\[/,e:/\]/,r:0,c:[e.BE]}]},e.TM=3D{cN:"title",b:e.IR,r:0},e.UTM=3D=
{cN:"title",b:e.UIR,r:0},e.METHOD_GUARD=3D{b:"\\.\\s*"+e.UIR,r:0},e.regis=
terLanguage("apache",function(e){var =
t=3D{cN:"number",b:"[\\$%]\\d+"};return{aliases:["apacheconf"],cI:!0,c:[e=
.HCM,{cN:"section",b:"</?",e:">"},{cN:"attribute",b:/\w+/,r:0,k:{nomarkup=
:"order deny allow setenv rewriterule rewriteengine rewritecond =
documentroot sethandler errordocument loadmodule options header listen =
serverroot servername"},starts:{e:/$/,r:0,k:{literal:"on off =
all"},c:[{cN:"meta",b:"\\s\\[",e:"\\]$"},{cN:"variable",b:"[\\$%]\\{",e:"=
\\}",c:["self",t]},t,e.QSM]}}],i:/\S/}}),e.registerLanguage("bash",functi=
on(e){var =
t=3D{cN:"variable",v:[{b:/\$[\w\d#@][\w\d_]*/},{b:/\$\{(.*?)}/}]},r=3D{cN=
:"string",b:/"/,e:/"/,c:[e.BE,t,{cN:"variable",b:/\$\(/,e:/\)/,c:[e.BE]}]=
},a=3D{cN:"string",b:/'/,e:/'/};return{aliases:["sh","zsh"],l:/-?[a-z\._]=
+/,k:{keyword:"if then else elif fi for while in do done case esac =
function",literal:"true false",built_in:"break cd continue eval exec =
exit export getopts hash pwd readonly return shift test times trap umask =
unset alias bind builtin caller command declare echo enable help let =
local logout mapfile printf read readarray source type typeset ulimit =
unalias set shopt autoload bg bindkey bye cap chdir clone comparguments =
compcall compctl compdescribe compfiles compgroups compquote comptags =
comptry compvalues dirs disable disown echotc echoti emulate fc fg float =
functions getcap getln history integer jobs kill limit log noglob popd =
print pushd pushln rehash sched setcap setopt stat suspend ttyctl =
unfunction unhash unlimit unsetopt vared wait whence where which =
zcompile zformat zftp zle zmodload zparseopts zprof zpty zregexparse =
zsocket zstyle ztcp",_:"-ne -eq -lt -gt -f -d -e -s -l =
-a"},c:[{cN:"meta",b:/^#![^\n]+sh\s*$/,r:10},{cN:"function",b:/\w[\w\d_]*=
\s*\(\s*\)\s*\{/,rB:!0,c:[e.inherit(e.TM,{b:/\w[\w\d_]*/})],r:0},e.HCM,r,=
a,t]}}),e.registerLanguage("coffeescript",function(e){var =
t=3D{keyword:"in if for while finally new do return else break catch =
instanceof throw try this switch continue typeof delete debugger super =
yield import export from as default await then unless until loop of by =
when and or is isnt not",literal:"true false null undefined yes no on =
off",built_in:"npm require console print module global window =
document"},r=3D"[A-Za-z$_][0-9A-Za-z$_]*",a=3D{cN:"subst",b:/#\{/,e:/}/,k=
:t},n=3D[e.BNM,e.inherit(e.CNM,{starts:{e:"(\\s*/)?",r:0}}),{cN:"string",=
v:[{b:/'''/,e:/'''/,c:[e.BE]},{b:/'/,e:/'/,c:[e.BE]},{b:/"""/,e:/"""/,c:[=
e.BE,a]},{b:/"/,e:/"/,c:[e.BE,a]}]},{cN:"regexp",v:[{b:"///",e:"///",c:[a=
,e.HCM]},{b:"//[gim]*",r:0},{b:/\/(?![ =
*])(\\\/|.)*?\/[gim]*(?=3D\W|$)/}]},{b:"@"+r},{sL:"javascript",eB:!0,eE:!=
0,v:[{b:"```",e:"```"},{b:"`",e:"`"}]}];a.c=3Dn;var =
i=3De.inherit(e.TM,{b:r}),s=3D"(\\(.*\\))?\\s*\\B[-=3D]>",c=3D{cN:"params=
",b:"\\([^\\(]",rB:!0,c:[{b:/\(/,e:/\)/,k:t,c:["self"].concat(n)}]};retur=
n{aliases:["coffee","cson","iced"],k:t,i:/\/\*/,c:n.concat([e.C("###","##=
#"),e.HCM,{cN:"function",b:"^\\s*"+r+"\\s*=3D\\s*"+s,e:"[-=3D]>",rB:!0,c:=
[i,c]},{b:/[:\(,=3D]\s*/,r:0,c:[{cN:"function",b:s,e:"[-=3D]>",rB:!0,c:[c=
]}]},{cN:"class",bK:"class",e:"$",i:/[:=3D"\[\]]/,c:[{bK:"extends",eW:!0,=
i:/[:=3D"\[\]]/,c:[i]},i]},{b:r+":",e:":",rB:!0,rE:!0,r:0}])}}),e.registe=
rLanguage("cpp",function(e){var =
t=3D{cN:"keyword",b:"\\b[a-z\\d_]*_t\\b"},r=3D{cN:"string",v:[{b:'(u8?|U)=
?L?"',e:'"',i:"\\n",c:[e.BE]},{b:'(u8?|U)?R"',e:'"',c:[e.BE]},{b:"'\\\\?.=
",e:"'",i:"."}]},a=3D{cN:"number",v:[{b:"\\b(0b[01']+)"},{b:"(-?)\\b([\\d=
']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"},{b:"(-?)(\\b0[xX][a=
-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],r=
:0},n=3D{cN:"meta",b:/#\s*[a-z]+\b/,e:/$/,k:{"meta-keyword":"if else =
elif endif define undef warning error line pragma ifdef ifndef =
include"},c:[{b:/\\\n/,r:0},e.inherit(r,{cN:"meta-string"}),{cN:"meta-str=
ing",b:/<[^\n>]*>/,e:/$/,i:"\\n"},e.CLCM,e.CBCM]},i=3De.IR+"\\s*\\(",s=3D=
{keyword:"int float while private char catch import module export =
virtual operator sizeof dynamic_cast|10 typedef const_cast|10 const for =
static_cast|10 union namespace unsigned long volatile static protected =
bool template mutable if public friend do goto auto void enum else break =
extern using asm case typeid short reinterpret_cast|10 default double =
register explicit signed typename try this switch continue inline delete =
alignof constexpr decltype noexcept static_assert thread_local restrict =
_Bool complex _Complex _Imaginary atomic_bool atomic_char atomic_schar =
atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint =
atomic_long atomic_ulong atomic_llong atomic_ullong new throw return and =
or not",built_in:"std string cin cout cerr clog stdin stdout stderr =
stringstream istringstream ostringstream auto_ptr deque list queue stack =
vector map set bitset multiset multimap unordered_set unordered_map =
unordered_multiset unordered_multimap array shared_ptr abort abs acos =
asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf =
fputs free frexp fscanf isalnum isalpha iscntrl isdigit isgraph islower =
isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp =
log10 log malloc realloc memchr memcmp memcpy memset modf pow printf =
putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr =
strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr =
strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list =
unique_ptr",literal:"true false nullptr =
NULL"},c=3D[t,e.CLCM,e.CBCM,a,r];return{aliases:["c","cc","h","c++","h++"=
,"hpp"],k:s,i:"</",c:c.concat([n,{b:"\\b(deque|list|queue|stack|vector|ma=
p|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_mult=
iset|unordered_multimap|array)\\s*<",e:">",k:s,c:["self",t]},{b:e.IR+"::"=
,k:s},{v:[{b:/=3D/,e:/;/},{b:/\(/,e:/\)/},{bK:"new throw return =
else",e:/;/}],k:s,c:c.concat([{b:/\(/,e:/\)/,k:s,c:c.concat(["self"]),r:0=
}]),r:0},{cN:"function",b:"("+e.IR+"[\\*&\\s]+)+"+i,rB:!0,e:/[{;=3D]/,eE:=
!0,k:s,i:/[^\w\s\*&]/,c:[{b:i,rB:!0,c:[e.TM],r:0},{cN:"params",b:/\(/,e:/=
\)/,k:s,r:0,c:[e.CLCM,e.CBCM,r,a,t]},e.CLCM,e.CBCM,n]},{cN:"class",bK:"cl=
ass =
struct",e:/[{;:]/,c:[{b:/</,e:/>/,c:["self"]},e.TM]}]),exports:{preproces=
sor:n,strings:r,k:s}}}),e.registerLanguage("cs",function(e){var =
t=3D{keyword:"abstract as base bool break byte case catch char checked =
const continue decimal default delegate do double else enum event =
explicit extern finally fixed float for foreach goto if implicit in int =
interface internal is lock long object operator out override params =
private protected public readonly ref sbyte sealed short sizeof =
stackalloc static string struct switch this try typeof uint ulong =
unchecked unsafe ushort using virtual void volatile while nameof add =
alias ascending async await by descending dynamic equals from get global =
group into join let on orderby partial remove select set value var where =
yield",literal:"null false =
true"},r=3D{cN:"string",b:'@"',e:'"',c:[{b:'""'}]},a=3De.inherit(r,{i:/\n=
/}),n=3D{cN:"subst",b:"{",e:"}",k:t},i=3De.inherit(n,{i:/\n/}),s=3D{cN:"s=
tring",b:/\$"/,e:'"',i:/\n/,c:[{b:"{{"},{b:"}}"},e.BE,i]},c=3D{cN:"string=
",b:/\$@"/,e:'"',c:[{b:"{{"},{b:"}}"},{b:'""'},n]},o=3De.inherit(c,{i:/\n=
/,c:[{b:"{{"},{b:"}}"},{b:'""'},i]});n.c=3D[c,s,r,e.ASM,e.QSM,e.CNM,e.CBC=
M],i.c=3D[o,s,a,e.ASM,e.QSM,e.CNM,e.inherit(e.CBCM,{i:/\n/})];var =
l=3D{v:[c,s,r,e.ASM,e.QSM]},u=3De.IR+"(<"+e.IR+"(\\s*,\\s*"+e.IR+")*>)?(\=
\[\\])?";return{aliases:["csharp"],k:t,i:/::/,c:[e.C("///","$",{rB:!0,c:[=
{cN:"doctag",v:[{b:"///",r:0},{b:"<!--|-->"},{b:"</?",e:">"}]}]}),e.CLCM,=
e.CBCM,{cN:"meta",b:"#",e:"$",k:{"meta-keyword":"if else elif endif =
define undef warning error line region endregion pragma =
checksum"}},l,e.CNM,{bK:"class =
interface",e:/[{;=3D]/,i:/[^\s:]/,c:[e.TM,e.CLCM,e.CBCM]},{bK:"namespace"=
,e:/[{;=3D]/,i:/[^\s:]/,c:[e.inherit(e.TM,{b:"[a-zA-Z](\\.?\\w)*"}),e.CLC=
M,e.CBCM]},{bK:"new return throw =
await",r:0},{cN:"function",b:"("+u+"\\s+)+"+e.IR+"\\s*\\(",rB:!0,e:/[{;=3D=
]/,eE:!0,k:t,c:[{b:e.IR+"\\s*\\(",rB:!0,c:[e.TM],r:0},{cN:"params",b:/\(/=
,e:/\)/,eB:!0,eE:!0,k:t,r:0,c:[l,e.CNM,e.CBCM]},e.CLCM,e.CBCM]}]}}),e.reg=
isterLanguage("css",function(e){var =
t=3D"[a-zA-Z-][a-zA-Z0-9_-]*",r=3D{b:/[A-Z\_\.\-]+\s*:/,rB:!0,e:";",eW:!0=
,c:[{cN:"attribute",b:/\S/,e:":",eE:!0,starts:{eW:!0,eE:!0,c:[{b:/[\w-]+\=
(/,rB:!0,c:[{cN:"built_in",b:/[\w-]+/},{b:/\(/,e:/\)/,c:[e.ASM,e.QSM]}]},=
e.CSSNM,e.QSM,e.ASM,e.CBCM,{cN:"number",b:"#[0-9A-Fa-f]+"},{cN:"meta",b:"=
!important"}]}}]};return{cI:!0,i:/[=3D\/|'\$]/,c:[e.CBCM,{cN:"selector-id=
",b:/#[A-Za-z0-9_-]+/},{cN:"selector-class",b:/\.[A-Za-z0-9_-]+/},{cN:"se=
lector-attr",b:/\[/,e:/\]/,i:"$"},{cN:"selector-pseudo",b:/:(:)?[a-zA-Z0-=
9\_\-\+\(\)"'.]+/},{b:"@(font-face|page)",l:"[a-z-]+",k:"font-face =
page"},{b:"@",e:"[{;]",i:/:/,c:[{cN:"keyword",b:/\w+/},{b:/\s/,eW:!0,eE:!=
0,r:0,c:[e.ASM,e.QSM,e.CSSNM]}]},{cN:"selector-tag",b:t,r:0},{b:"{",e:"}"=
,i:/\S/,c:[e.CBCM,r]}]}}),e.registerLanguage("diff",function(e){return{al=
iases:["patch"],c:[{cN:"meta",r:10,v:[{b:/^@@ +\-\d+,\d+ +\+\d+,\d+ =
+@@$/},{b:/^\*\*\* +\d+,\d+ +\*\*\*\*$/},{b:/^\-\-\- +\d+,\d+ =
+\-\-\-\-$/}]},{cN:"comment",v:[{b:/Index: =
/,e:/$/},{b:/=3D{3,}/,e:/$/},{b:/^\-{3}/,e:/$/},{b:/^\*{3} =
/,e:/$/},{b:/^\+{3}/,e:/$/},{b:/\*{5}/,e:/\*{5}$/}]},{cN:"addition",b:"^\=
\+",e:"$"},{cN:"deletion",b:"^\\-",e:"$"},{cN:"addition",b:"^\\!",e:"$"}]=
}}),e.registerLanguage("http",function(e){var =
t=3D"HTTP/[0-9\\.]+";return{aliases:["https"],i:"\\S",c:[{b:"^"+t,e:"$",c=
:[{cN:"number",b:"\\b\\d{3}\\b"}]},{b:"^[A-Z]+ (.*?) =
"+t+"$",rB:!0,e:"$",c:[{cN:"string",b:" ",e:" =
",eB:!0,eE:!0},{b:t},{cN:"keyword",b:"[A-Z]+"}]},{cN:"attribute",b:"^\\w"=
,e:": =
",eE:!0,i:"\\n|\\s|=3D",starts:{e:"$",r:0}},{b:"\\n\\n",starts:{sL:[],eW:=
!0}}]}}),e.registerLanguage("ini",function(e){var =
t=3D{cN:"string",c:[e.BE],v:[{b:"'''",e:"'''",r:10},{b:'"""',e:'"""',r:10=
},{b:'"',e:'"'},{b:"'",e:"'"}]};return{aliases:["toml"],cI:!0,i:/\S/,c:[e=
.C(";","$"),e.HCM,{cN:"section",b:/^\s*\[+/,e:/\]+/},{b:/^[a-z0-9\[\]_-]+=
\s*=3D\s*/,e:"$",rB:!0,c:[{cN:"attr",b:/[a-z0-9\[\]_-]+/},{b:/=3D/,eW:!0,=
r:0,c:[{cN:"literal",b:/\bon|off|true|false|yes|no\b/},{cN:"variable",v:[=
{b:/\$[\w\d"][\w\d_]*/},{b:/\$\{(.*?)}/}]},t,{cN:"number",b:/([\+\-]+)?[\=
d]+_[\d_]+/},e.NM]}]}]}}),e.registerLanguage("java",function(e){var =
t=3D"[=C3=80-=CA=B8a-zA-Z_$][=C3=80-=CA=B8a-zA-Z_$0-9]*",r=3Dt+"(<"+t+"(\=
\s*,\\s*"+t+")*>)?",a=3D"false synchronized int abstract float private =
char boolean static null if const for true while long strictfp finally =
protected import native final void enum else break transient catch =
instanceof byte super volatile case assert short package default double =
public try this switch continue throws protected public private module =
requires exports =
do",n=3D"\\b(0[bB]([01]+[01_]+[01]+|[01]+)|0[xX]([a-fA-F0-9]+[a-fA-F0-9_]=
+[a-fA-F0-9]+|[a-fA-F0-9]+)|(([\\d]+[\\d_]+[\\d]+|[\\d]+)(\\.([\\d]+[\\d_=
]+[\\d]+|[\\d]+))?|\\.([\\d]+[\\d_]+[\\d]+|[\\d]+))([eE][-+]?\\d+)?)[lLfF=
]?",i=3D{cN:"number",b:n,r:0};return{aliases:["jsp"],k:a,i:/<\/|#/,c:[e.C=
("/\\*\\*","\\*/",{r:0,c:[{b:/\w+@/,r:0},{cN:"doctag",b:"@[A-Za-z]+"}]}),=
e.CLCM,e.CBCM,e.ASM,e.QSM,{cN:"class",bK:"class =
interface",e:/[{;=3D]/,eE:!0,k:"class =
interface",i:/[:"\[\]]/,c:[{bK:"extends implements"},e.UTM]},{bK:"new =
throw return =
else",r:0},{cN:"function",b:"("+r+"\\s+)+"+e.UIR+"\\s*\\(",rB:!0,e:/[{;=3D=
]/,eE:!0,k:a,c:[{b:e.UIR+"\\s*\\(",rB:!0,r:0,c:[e.UTM]},{cN:"params",b:/\=
(/,e:/\)/,k:a,r:0,c:[e.ASM,e.QSM,e.CNM,e.CBCM]},e.CLCM,e.CBCM]},i,{cN:"me=
ta",b:"@[A-Za-z]+"}]}}),e.registerLanguage("javascript",function(e){var =
t=3D"[A-Za-z$_][0-9A-Za-z$_]*",r=3D{keyword:"in of if for while finally =
var new function do return void else break catch instanceof with throw =
case default try this switch continue typeof delete let yield const =
export super debugger as async await static import from =
as",literal:"true false null undefined NaN Infinity",built_in:"eval =
isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent =
encodeURI encodeURIComponent escape unescape Object Function Boolean =
Error EvalError InternalError RangeError ReferenceError StopIteration =
SyntaxError TypeError URIError Number Math Date String RegExp Array =
Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array =
Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl =
arguments require module console window document Symbol Set Map WeakSet =
WeakMap Proxy Reflect =
Promise"},a=3D{cN:"number",v:[{b:"\\b(0[bB][01]+)"},{b:"\\b(0[oO][0-7]+)"=
},{b:e.CNR}],r:0},n=3D{cN:"subst",b:"\\$\\{",e:"\\}",k:r,c:[]},i=3D{cN:"s=
tring",b:"`",e:"`",c:[e.BE,n]};n.c=3D[e.ASM,e.QSM,i,a,e.RM];var =
s=3Dn.c.concat([e.CBCM,e.CLCM]);return{aliases:["js","jsx"],k:r,c:[{cN:"m=
eta",r:10,b:/^\s*['"]use =
(strict|asm)['"]/},{cN:"meta",b:/^#!/,e:/$/},e.ASM,e.QSM,i,e.CLCM,e.CBCM,=
a,{b:/[{,]\s*/,r:0,c:[{b:t+"\\s*:",rB:!0,r:0,c:[{cN:"attr",b:t,r:0}]}]},{=
b:"("+e.RSR+"|\\b(case|return|throw)\\b)\\s*",k:"return throw =
case",c:[e.CLCM,e.CBCM,e.RM,{cN:"function",b:"(\\(.*?\\)|"+t+")\\s*=3D>",=
rB:!0,e:"\\s*=3D>",c:[{cN:"params",v:[{b:t},{b:/\(\s*\)/},{b:/\(/,e:/\)/,=
eB:!0,eE:!0,k:r,c:s}]}]},{b:/</,e:/(\/\w+|\w+\/)>/,sL:"xml",c:[{b:/<\w+\s=
*\/>/,skip:!0},{b:/<\w+/,e:/(\/\w+|\w+\/)>/,skip:!0,c:[{b:/<\w+\s*\/>/,sk=
ip:!0},"self"]}]}],r:0},{cN:"function",bK:"function",e:/\{/,eE:!0,c:[e.in=
herit(e.TM,{b:t}),{cN:"params",b:/\(/,e:/\)/,eB:!0,eE:!0,c:s}],i:/\[|%/},=
{b:/\$[(.]/},e.METHOD_GUARD,{cN:"class",bK:"class",e:/[{;=3D]/,eE:!0,i:/[=
:"\[\]]/,c:[{bK:"extends"},e.UTM]},{bK:"constructor",e:/\{/,eE:!0}],i:/#(=
?!!)/}}),e.registerLanguage("json",function(e){var t=3D{literal:"true =
false =
null"},r=3D[e.QSM,e.CNM],a=3D{e:",",eW:!0,eE:!0,c:r,k:t},n=3D{b:"{",e:"}"=
,c:[{cN:"attr",b:/"/,e:/"/,c:[e.BE],i:"\\n"},e.inherit(a,{b:/:/})],i:"\\S=
"},i=3D{b:"\\[",e:"\\]",c:[e.inherit(a)],i:"\\S"};return =
r.splice(r.length,0,n,i),{c:r,k:t,i:"\\S"}}),e.registerLanguage("makefile=
",function(e){var =
t=3D{cN:"variable",v:[{b:"\\$\\("+e.UIR+"\\)",c:[e.BE]},{b:/\$[@%<?\^\+\*=
]/}]},r=3D{cN:"string",b:/"/,e:/"/,c:[e.BE,t]},a=3D{cN:"variable",b:/\$\(=
[\w-]+\s/,e:/\)/,k:{built_in:"subst patsubst strip findstring filter =
filter-out sort word wordlist firstword lastword dir notdir suffix =
basename addsuffix addprefix join wildcard realpath abspath error =
warning shell origin flavor foreach if or and call eval file =
value"},c:[t]},n=3D{b:"^"+e.UIR+"\\s*[:+?]?=3D",i:"\\n",rB:!0,c:[{b:"^"+e=
.UIR,e:"[:+?]?=3D",eE:!0}]},i=3D{cN:"meta",b:/^\.PHONY:/,e:/$/,k:{"meta-k=
eyword":".PHONY"},l:/[\.\w]+/},s=3D{cN:"section",b:/^[^\s]+:/,e:/$/,c:[t]=
};return{aliases:["mk","mak"],k:"define endef undefine ifdef ifndef ifeq =
ifneq else endif include -include sinclude override export unexport =
private =
vpath",l:/[\w-]+/,c:[e.HCM,t,r,a,n,i,s]}}),e.registerLanguage("xml",funct=
ion(e){var =
t=3D"[A-Za-z0-9\\._:-]+",r=3D{eW:!0,i:/</,r:0,c:[{cN:"attr",b:t,r:0},{b:/=
=3D\s*/,r:0,c:[{cN:"string",endsParent:!0,v:[{b:/"/,e:/"/},{b:/'/,e:/'/},=
{b:/[^\s"'=3D<>`]+/}]}]}]};return{aliases:["html","xhtml","rss","atom","x=
jb","xsd","xsl","plist"],cI:!0,c:[{cN:"meta",b:"<!DOCTYPE",e:">",r:10,c:[=
{b:"\\[",e:"\\]"}]},e.C("<!--","-->",{r:10}),{b:"<\\!\\[CDATA\\[",e:"\\]\=
\]>",r:10},{b:/<\?(php)?/,e:/\?>/,sL:"php",c:[{b:"/\\*",e:"\\*/",skip:!0}=
]},{cN:"tag",b:"<style(?=3D\\s|>|$)",e:">",k:{name:"style"},c:[r],starts:=
{e:"</style>",rE:!0,sL:["css","xml"]}},{cN:"tag",b:"<script(?=3D\\s|>|$)"=
,e:">",k:{name:"script"},c:[r],starts:{e:"</script>",rE:!0,sL:["actionscr=
ipt","javascript","handlebars","xml"]}},{cN:"meta",v:[{b:/<\?xml/,e:/\?>/=
,r:10},{b:/<\?\w+/,e:/\?>/}]},{cN:"tag",b:"</?",e:"/?>",c:[{cN:"name",b:/=
[^\/><\s]+/,r:0},r]}]}}),e.registerLanguage("markdown",function(e){return=
{aliases:["md","mkdown","mkd"],c:[{cN:"section",v:[{b:"^#{1,6}",e:"$"},{b=
:"^.+?\\n[=3D-]{2,}$"}]},{b:"<",e:">",sL:"xml",r:0},{cN:"bullet",b:"^([*+=
-]|(\\d+\\.))\\s+"},{cN:"strong",b:"[*_]{2}.+?[*_]{2}"},{cN:"emphasis",v:=
[{b:"\\*.+?\\*"},{b:"_.+?_",r:0}]},{cN:"quote",b:"^>\\s+",e:"$"},{cN:"cod=
e",v:[{b:"^```w*s*$",e:"^```s*$"},{b:"`.+?`"},{b:"^( {4}|	=
)",e:"$",r:0}]},{b:"^[-\\*]{3,}",e:"$"},{b:"\\[.+?\\][\\(\\[].*?[\\)\\]]"=
,rB:!0,c:[{cN:"string",b:"\\[",e:"\\]",eB:!0,rE:!0,r:0},{cN:"link",b:"\\]=
\\(",e:"\\)",eB:!0,eE:!0},{cN:"symbol",b:"\\]\\[",e:"\\]",eB:!0,eE:!0}],r=
:10},{b:/^\[[^\n]+\]:/,rB:!0,c:[{cN:"symbol",b:/\[/,e:/\]/,eB:!0,eE:!0},{=
cN:"link",b:/:\s*/,e:/$/,eB:!0}]}]}}),e.registerLanguage("nginx",function=
(e){var =
t=3D{cN:"variable",v:[{b:/\$\d+/},{b:/\$\{/,e:/}/},{b:"[\\$\\@]"+e.UIR}]}=
,r=3D{eW:!0,l:"[a-z/_]+",k:{literal:"on off yes no true false none =
blocked debug info notice warn error crit select break last permanent =
redirect kqueue rtsig epoll poll =
/dev/poll"},r:0,i:"=3D>",c:[e.HCM,{cN:"string",c:[e.BE,t],v:[{b:/"/,e:/"/=
},{b:/'/,e:/'/}]},{b:"([a-z]+):/",e:"\\s",eW:!0,eE:!0,c:[t]},{cN:"regexp"=
,c:[e.BE,t],v:[{b:"\\s\\^",e:"\\s|{|;",rE:!0},{b:"~\\*?\\s+",e:"\\s|{|;",=
rE:!0},{b:"\\*(\\.[a-z\\-]+)+"},{b:"([a-z\\-]+\\.)+\\*"}]},{cN:"number",b=
:"\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b"},{cN:"numb=
er",b:"\\b\\d+[kKmMgGdshdwy]*\\b",r:0},t]};return{aliases:["nginxconf"],c=
:[e.HCM,{b:e.UIR+"\\s+{",rB:!0,e:"{",c:[{cN:"section",b:e.UIR}],r:0},{b:e=
.UIR+"\\s",e:";|{",rB:!0,c:[{cN:"attribute",b:e.UIR,starts:r}],r:0}],i:"[=
^\\s\\}]"}}),e.registerLanguage("objectivec",function(e){var =
t=3D{cN:"built_in",b:"\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN=
|SK|UI|WK|XC)\\w+"},r=3D{keyword:"int float while char export sizeof =
typedef const struct for union unsigned long volatile static bool =
mutable if do return goto void enum else break extern asm case short =
default double register explicit signed typename this switch continue =
wchar_t inline readonly assign readwrite self @synchronized id typeof =
nonatomic super unichar IBOutlet IBAction strong weak copy in out inout =
bycopy byref oneway __strong __weak __block __autoreleasing @private =
@protected @public @try @property @end @throw @catch @finally =
@autoreleasepool @synthesize @dynamic @selector @optional @required =
@encode @package @import @defs @compatibility_alias __bridge =
__bridge_transfer __bridge_retained __bridge_retain __covariant =
__contravariant __kindof _Nonnull _Nullable _Null_unspecified =
__FUNCTION__ __PRETTY_FUNCTION__ __attribute__ getter setter retain =
unsafe_unretained nonnull nullable null_unspecified null_resettable =
class instancetype NS_DESIGNATED_INITIALIZER NS_UNAVAILABLE =
NS_REQUIRES_SUPER NS_RETURNS_INNER_POINTER NS_INLINE NS_AVAILABLE =
NS_DEPRECATED NS_ENUM NS_OPTIONS NS_SWIFT_UNAVAILABLE =
NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_REFINED_FOR_SWIFT =
NS_SWIFT_NAME NS_SWIFT_NOTHROW NS_DURING NS_HANDLER NS_ENDHANDLER =
NS_VALUERETURN NS_VOIDRETURN",literal:"false true FALSE TRUE nil YES NO =
NULL",built_in:"BOOL dispatch_once_t dispatch_queue_t dispatch_sync =
dispatch_async =
dispatch_once"},a=3D/[a-zA-Z@][a-zA-Z0-9_]*/,n=3D"@interface @class =
@protocol =
@implementation";return{aliases:["mm","objc","obj-c"],k:r,l:a,i:"</",c:[t=
,e.CLCM,e.CBCM,e.CNM,e.QSM,{cN:"string",v:[{b:'@"',e:'"',i:"\\n",c:[e.BE]=
},{b:"'",e:"[^\\\\]'",i:"[^\\\\][^']"}]},{cN:"meta",b:"#",e:"$",c:[{cN:"m=
eta-string",v:[{b:'"',e:'"'},{b:"<",e:">"}]}]},{cN:"class",b:"("+n.split(=
" =
").join("|")+")\\b",e:"({|$)",eE:!0,k:n,l:a,c:[e.UTM]},{b:"\\."+e.UIR,r:0=
}]}}),e.registerLanguage("perl",function(e){var t=3D"getpwent getservent =
quotemeta msgrcv scalar kill dbmclose undef lc ma syswrite tr send umask =
sysopen shmwrite vec qx utime local oct semctl localtime readpipe do =
return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir =
qqfileno qw endprotoent wait sethostent bless s|0 opendir continue each =
sleep endgrent shutdown dump chomp connect getsockname die socketpair =
close flock exists index shmgetsub for endpwent redo lstat msgctl =
setpgrp abs exit select print ref gethostbyaddr unshift fcntl syscall =
goto getnetbyaddr join gmtime symlink semget splice x|0 getpeername recv =
log setsockopt cos last reverse gethostbyname getgrnam study formline =
endhostent times chop length gethostent getnetent pack getprotoent =
getservbyname rand mkdir pos chmod y|0 substr endnetent printf next open =
msgsnd readdir use unlink getsockopt getpriority rindex wantarray hex =
system getservbyport endservent int chr untie rmdir prototype tell =
listen fork shmread ucfirst setprotoent else sysseek link getgrgid =
shmctl waitpid unpack getnetbyname reset chdir grep split require caller =
lcfirst until warn while values shift telldir getpwuid my =
getprotobynumber delete and sort uc defined srand accept package seekdir =
getprotobyname semop our rename seek if q|0 chroot sysread setpwent no =
crypt getc chown sqrt write setnetent setpriority foreach tie sin msgget =
map stat getlogin unless elsif truncate exec keys glob tied =
closedirioctl socket readlink eval xor readline binmode setservent eof =
ord bind alarm pipe atan2 getgrent exp time push setgrent gt lt or ne =
m|0 break given say state =
when",r=3D{cN:"subst",b:"[$@]\\{",e:"\\}",k:t},a=3D{b:"->{",e:"}"},n=3D{v=
:[{b:/\$\d/},{b:/[\$%@](\^\w\b|#\w+(::\w+)*|{\w+}|\w+(::\w*)*)/},{b:/[\$%=
@][^\s\w{]/,r:0}]},i=3D[e.BE,r,n],s=3D[n,e.HCM,e.C("^\\=3D\\w","\\=3Dcut"=
,{eW:!0}),a,{cN:"string",c:i,v:[{b:"q[qwxr]?\\s*\\(",e:"\\)",r:5},{b:"q[q=
wxr]?\\s*\\[",e:"\\]",r:5},{b:"q[qwxr]?\\s*\\{",e:"\\}",r:5},{b:"q[qwxr]?=
\\s*\\|",e:"\\|",r:5},{b:"q[qwxr]?\\s*\\<",e:"\\>",r:5},{b:"qw\\s+q",e:"q=
",r:5},{b:"'",e:"'",c:[e.BE]},{b:'"',e:'"'},{b:"`",e:"`",c:[e.BE]},{b:"{\=
\w+}",c:[],r:0},{b:"-?\\w+\\s*\\=3D\\>",c:[],r:0}]},{cN:"number",b:"(\\b0=
[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",r:0=
},{b:"(\\/\\/|"+e.RSR+"|\\b(split|return|print|reverse|grep)\\b)\\s*",k:"=
split return print reverse =
grep",r:0,c:[e.HCM,{cN:"regexp",b:"(s|tr|y)/(\\\\.|[^/])*/(\\\\.|[^/])*/[=
a-z]*",r:10},{cN:"regexp",b:"(m|qr)?/",e:"/[a-z]*",c:[e.BE],r:0}]},{cN:"f=
unction",bK:"sub",e:"(\\s*\\(.*?\\))?[;{]",eE:!0,r:5,c:[e.TM]},{b:"-\\w\\=
b",r:0},{b:"^__DATA__$",e:"^__END__$",sL:"mojolicious",c:[{b:"^@@.*",e:"$=
",cN:"comment"}]}];return =
r.c=3Ds,a.c=3Ds,{aliases:["pl","pm"],l:/[\w\.]+/,k:t,c:s}}),e.registerLan=
guage("php",function(e){var =
t=3D{b:"\\$+[a-zA-Z_=7F-=C3=BF][a-zA-Z0-9_=7F-=C3=BF]*"},r=3D{cN:"meta",b=
:/<\?(php)?|\?>/},a=3D{cN:"string",c:[e.BE,r],v:[{b:'b"',e:'"'},{b:"b'",e=
:"'"},e.inherit(e.ASM,{i:null}),e.inherit(e.QSM,{i:null})]},n=3D{v:[e.BNM=
,e.CNM]};return{aliases:["php3","php4","php5","php6"],cI:!0,k:"and =
include_once list abstract global private echo interface as static =
endswitch array null if endwhile or const for endforeach self var while =
isset public protected exit foreach throw elseif include __FILE__ empty =
require_once do xor return parent clone use __CLASS__ __LINE__ else =
break print eval new catch __METHOD__ case exception default die require =
__FUNCTION__ enddeclare final try switch continue endfor endif declare =
unset true false trait goto instanceof insteadof __DIR__ __NAMESPACE__ =
yield =
finally",c:[e.HCM,e.C("//","$",{c:[r]}),e.C("/\\*","\\*/",{c:[{cN:"doctag=
",b:"@[A-Za-z]+"}]}),e.C("__halt_compiler.+?;",!1,{eW:!0,k:"__halt_compil=
er",l:e.UIR}),{cN:"string",b:/<<<['"]?\w+['"]?$/,e:/^\w+;?$/,c:[e.BE,{cN:=
"subst",v:[{b:/\$\w+/},{b:/\{\$/,e:/\}/}]}]},r,{cN:"keyword",b:/\$this\b/=
},t,{b:/(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/},{cN:"function"=
,bK:"function",e:/[;{]/,eE:!0,i:"\\$|\\[|%",c:[e.UTM,{cN:"params",b:"\\("=
,e:"\\)",c:["self",t,e.CBCM,a,n]}]},{cN:"class",bK:"class =
interface",e:"{",eE:!0,i:/[:\(\$"]/,c:[{bK:"extends =
implements"},e.UTM]},{bK:"namespace",e:";",i:/[\.']/,c:[e.UTM]},{bK:"use"=
,e:";",c:[e.UTM]},{b:"=3D>"},a,n]}}),e.registerLanguage("python",function=
(e){var t=3D{keyword:"and elif is global as in if from raise for except =
finally print import pass return exec else break not with class assert =
yield try while continue del or def lambda async await nonlocal|10 None =
True False",built_in:"Ellipsis =
NotImplemented"},r=3D{cN:"meta",b:/^(>>>|\.\.\.) =
/},a=3D{cN:"subst",b:/\{/,e:/\}/,k:t,i:/#/},n=3D{cN:"string",c:[e.BE],v:[=
{b:/(u|b)?r?'''/,e:/'''/,c:[r],r:10},{b:/(u|b)?r?"""/,e:/"""/,c:[r],r:10}=
,{b:/(fr|rf|f)'''/,e:/'''/,c:[r,a]},{b:/(fr|rf|f)"""/,e:/"""/,c:[r,a]},{b=
:/(u|r|ur)'/,e:/'/,r:10},{b:/(u|r|ur)"/,e:/"/,r:10},{b:/(b|br)'/,e:/'/},{=
b:/(b|br)"/,e:/"/},{b:/(fr|rf|f)'/,e:/'/,c:[a]},{b:/(fr|rf|f)"/,e:/"/,c:[=
a]},e.ASM,e.QSM]},i=3D{cN:"number",r:0,v:[{b:e.BNR+"[lLjJ]?"},{b:"\\b(0o[=
0-7]+)[lLjJ]?"},{b:e.CNR+"[lLjJ]?"}]},s=3D{cN:"params",b:/\(/,e:/\)/,c:["=
self",r,i,n]};return =
a.c=3D[n,i,r],{aliases:["py","gyp"],k:t,i:/(<\/|->|\?)|=3D>/,c:[r,i,n,e.H=
CM,{v:[{cN:"function",bK:"def"},{cN:"class",bK:"class"}],e:/:/,i:/[${=3D;=
\n,]/,c:[e.UTM,s,{b:/->/,eW:!0,k:"None"}]},{cN:"meta",b:/^[\t =
]*@/,e:/$/},{b:/\b(print|exec)\(/}]}}),e.registerLanguage("ruby",function=
(e){var =
t=3D"[a-zA-Z_]\\w*[!?=3D]?|[-+~]\\@|<<|>>|=3D~|=3D=3D=3D?|<=3D>|[<>]=3D?|=
\\*\\*|[-/+%^&*~`|]|\\[\\]=3D?",r=3D{=0A=
keyword:"and then defined module in return redo if BEGIN retry end for =
self when next until do begin unless END rescue else break undef not =
super class case require yield alias while ensure elsif or include =
attr_reader attr_writer attr_accessor",literal:"true false =
nil"},a=3D{cN:"doctag",b:"@[A-Za-z]+"},n=3D{b:"#<",e:">"},i=3D[e.C("#","$=
",{c:[a]}),e.C("^\\=3Dbegin","^\\=3Dend",{c:[a],r:10}),e.C("^__END__","\\=
n$")],s=3D{cN:"subst",b:"#\\{",e:"}",k:r},c=3D{cN:"string",c:[e.BE,s],v:[=
{b:/'/,e:/'/},{b:/"/,e:/"/},{b:/`/,e:/`/},{b:"%[qQwWx]?\\(",e:"\\)"},{b:"=
%[qQwWx]?\\[",e:"\\]"},{b:"%[qQwWx]?{",e:"}"},{b:"%[qQwWx]?<",e:">"},{b:"=
%[qQwWx]?/",e:"/"},{b:"%[qQwWx]?%",e:"%"},{b:"%[qQwWx]?-",e:"-"},{b:"%[qQ=
wWx]?\\|",e:"\\|"},{b:/\B\?(\\\d{1,3}|\\x[A-Fa-f0-9]{1,2}|\\u[A-Fa-f0-9]{=
4}|\\?\S)\b/},{b:/<<(-?)\w+$/,e:/^\s*\w+$/}]},o=3D{cN:"params",b:"\\(",e:=
"\\)",endsParent:!0,k:r},l=3D[c,n,{cN:"class",bK:"class =
module",e:"$|;",i:/=3D/,c:[e.inherit(e.TM,{b:"[A-Za-z_]\\w*(::\\w+)*(\\?|=
\\!)?"}),{b:"<\\s*",c:[{b:"("+e.IR+"::)?"+e.IR}]}].concat(i)},{cN:"functi=
on",bK:"def",e:"$|;",c:[e.inherit(e.TM,{b:t}),o].concat(i)},{b:e.IR+"::"}=
,{cN:"symbol",b:e.UIR+"(\\!|\\?)?:",r:0},{cN:"symbol",b:":(?!\\s)",c:[c,{=
b:t}],r:0},{cN:"number",b:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0=
-9_]*(\\.[0-9_]+)?)|[0_]\\b",r:0},{b:"(\\$\\W)|((\\$|\\@\\@?)(\\w+))"},{c=
N:"params",b:/\|/,e:/\|/,k:r},{b:"("+e.RSR+"|unless)\\s*",k:"unless",c:[n=
,{cN:"regexp",c:[e.BE,s],i:/\n/,v:[{b:"/",e:"/[a-z]*"},{b:"%r{",e:"}[a-z]=
*"},{b:"%r\\(",e:"\\)[a-z]*"},{b:"%r!",e:"![a-z]*"},{b:"%r\\[",e:"\\][a-z=
]*"}]}].concat(i),r:0}].concat(i);s.c=3Dl,o.c=3Dl;var =
u=3D"[>?]>",d=3D"[\\w#]+\\(\\w+\\):\\d+:\\d+>",b=3D"(\\w+-)?\\d+\\.\\d+\\=
.\\d(p\\d+)?[^>]+>",p=3D[{b:/^\s*=3D>/,starts:{e:"$",c:l}},{cN:"meta",b:"=
^("+u+"|"+d+"|"+b+")",starts:{e:"$",c:l}}];return{aliases:["rb","gemspec"=
,"podspec","thor","irb"],k:r,i:/\/\*/,c:i.concat(p).concat(l)}}),e.regist=
erLanguage("shell",function(e){return{aliases:["console"],c:[{cN:"meta",b=
:"^\\s{0,3}[\\w\\d\\[\\]()@-]*[>%$#]",starts:{e:"$",sL:"bash"}}]}}),e.reg=
isterLanguage("sql",function(e){var =
t=3De.C("--","$");return{cI:!0,i:/[<>{}*#]/,c:[{bK:"begin end start =
commit rollback savepoint lock alter create drop rename call delete do =
handler insert load replace select truncate update set show pragma grant =
merge describe use explain help declare prepare execute deallocate =
release unlock purge reset change stop analyze cache flush optimize =
repair kill install uninstall checksum restore check backup revoke =
comment",e:/;/,eW:!0,l:/[\w\.]+/,k:{keyword:"abort abs absolute acc acce =
accep accept access accessed accessible account acos action activate add =
addtime admin administer advanced advise aes_decrypt aes_encrypt after =
agent aggregate ali alia alias allocate allow alter always analyze =
ancillary and any anydata anydataset anyschema anytype apply archive =
archived archivelog are as asc ascii asin assembly assertion associate =
asynchronous at atan atn2 attr attri attrib attribu attribut attribute =
attributes audit authenticated authentication authid authors auto =
autoallocate autodblink autoextend automatic availability avg backup =
badfile basicfile before begin beginning benchmark between bfile =
bfile_base big bigfile bin binary_double binary_float binlog bit_and =
bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize =
body both bound buffer_cache buffer_pool build bulk by byte =
byteordermark bytes cache caching call calling cancel capacity cascade =
cascaded case cast catalog category ceil ceiling chain change changed =
char_base char_length character_length characters characterset charindex =
charset charsetform charsetid check checksum checksum_agg child choose =
chr chunk class cleanup clear client clob clob_base clone close =
cluster_id cluster_probability cluster_set clustering coalesce =
coercibility col collate collation collect colu colum column =
column_value columns columns_updated comment commit compact =
compatibility compiled complete composite_limit compound compress =
compute concat concat_ws concurrent confirm conn connec connect =
connect_by_iscycle connect_by_isleaf connect_by_root connect_time =
connection consider consistent constant constraint constraints =
constructor container content contents context contributors controlfile =
conv convert convert_tz corr corr_k corr_s corresponding corruption cos =
cost count count_big counted covar_pop covar_samp cpu_per_call =
cpu_per_session crc32 create creation critical cross cube cume_dist =
curdate current current_date current_time current_timestamp current_user =
cursor curtime customdatum cycle data database databases datafile =
datafiles datalength date_add date_cache date_format date_sub dateadd =
datediff datefromparts datename datepart datetime2fromparts day =
day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change =
dbtimezone ddl deallocate declare decode decompose decrement decrypt =
deduplicate def defa defau defaul default defaults deferred defi defin =
define degrees delayed delegate delete delete_all delimited demand =
dense_rank depth dequeue des_decrypt des_encrypt des_key_file desc descr =
descri describ describe descriptor deterministic diagnostics difference =
dimension direct_load directory disable disable_all disallow =
disassociate discardfile disconnect diskgroup distinct distinctrow =
distribute distributed div do document domain dotnet double downgrade =
drop dumpfile duplicate duration each edition editionable editions =
element ellipsis else elsif elt empty enable enable_all enclosed encode =
encoding encrypt end end-exec endian enforced engine engines enqueue =
enterprise entityescaping eomonth error errors escaped evalname evaluate =
event eventdata events except exception exceptions exchange exclude =
excluding execu execut execute exempt exists exit exp expire explain =
export export_set extended extent external external_1 external_2 =
externally extract failed failed_login_attempts failover failure far =
fast feature_set feature_value fetch field fields file file_name_convert =
filesystem_like_logging final finish first first_value fixed flash_cache =
flashback floor flush following follows for forall force form forma =
format found found_rows freelist freelists freepools fresh from =
from_base64 from_days ftp full function general generated get get_format =
get_lock getdate getutcdate global global_name globally go goto grant =
grants greatest group group_concat group_id grouping grouping_id groups =
gtid_subtract guarantee guard handler hash hashkeys having hea head =
headi headin heading heap help hex hierarchy high high_priority hosts =
hour http id ident_current ident_incr ident_seed identified identity =
idle_time if ifnull ignore iif ilike ilm immediate import in include =
including increment index indexes indexing indextype indicator indices =
inet6_aton inet6_ntoa inet_aton inet_ntoa infile initial initialized =
initially initrans inmemory inner innodb input insert install instance =
instantiable instr interface interleaved intersect into invalidate =
invisible is is_free_lock is_ipv4 is_ipv4_compat is_not is_not_null =
is_used_lock isdate isnull isolation iterate java join json json_exists =
keep keep_duplicates key keys kill language large last last_day =
last_insert_id last_value lax lcase lead leading least leaves left len =
lenght length less level levels library like like2 like4 likec limit =
lines link list listagg little ln load load_file lob lobs local =
localtime localtimestamp locate locator lock locked log log10 log2 =
logfile logfiles logging logical logical_reads_per_call logoff logon =
logs long loop low low_priority lower lpad lrtrim ltrim main make_set =
makedate maketime managed management manual map mapping mask master =
master_pos_wait match matched materialized max maxextents maximize =
maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize =
maxtrans md5 measures median medium member memcompress memory merge =
microsecond mid migration min minextents minimum mining minus minute =
minvalue missing mod mode model modification modify module monitoring =
month months mount move movement multiset mutex name name_const names =
nan national native natural nav nchar nclob nested never new newline =
next nextval no no_write_to_binlog noarchivelog noaudit nobadfile =
nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping =
noguarantee nokeep nologfile nomapping nomaxvalue nominimize nominvalue =
nomonitoring none noneditionable nonschema noorder nopr nopro noprom =
nopromp noprompt norely noresetlogs noreverse normal norowdependencies =
noschemacheck noswitch not nothing notice notrim novalidate now nowait =
nth_value nullif nulls num numb numbe nvarchar nvarchar2 object ocicoll =
ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber =
ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off =
offline offset oid oidindex old on online only opaque open operations =
operator optimal optimize option optionally or oracle oracle_date =
oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo =
organization orlany orlvary out outer outfile outline output over =
overflow overriding package pad parallel parallel_enable parameters =
parent parse partial partition partitions pascal passing password =
password_grace_time password_lock_time password_reuse_max =
password_reuse_time password_verify_function patch path patindex =
pctincrease pctthreshold pctused pctversion percent percent_rank =
percentile_cont percentile_disc performance period period_add =
period_diff permanent physical pi pipe pipelined pivot pluggable plugin =
policy position post_transaction pow power pragma prebuilt precedes =
preceding precision prediction prediction_cost prediction_details =
prediction_probability prediction_set prepare present preserve prior =
priority private private_sga privileges procedural procedure =
procedure_analyze processlist profiles project prompt protection public =
publishingservername purge quarter query quick quiesce quota quotename =
radians raise rand range rank raw read reads readsize rebuild record =
records recover recovery recursive recycle redo reduced ref reference =
referenced references referencing refresh regexp_like register regr_avgx =
regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy =
reject rekey relational relative relaylog release release_lock relies_on =
relocate rely rem remainder rename repair repeat replace replicate =
replication required reset resetlogs resize resource respect restore =
restricted result result_cache resumable resume retention return =
returning returns reuse reverse revoke right rlike role roles rollback =
rolling rollup round row row_count rowdependencies rowid rownum rows =
rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema =
schemacheck scn scope scroll sdo_georaster sdo_topo_geometry search =
sec_to_time second section securefile security seed segment select self =
sequence sequential serializable server servererror session session_user =
sessions_per_user set sets settings sha sha1 sha2 share shared =
shared_pool short show shrink shutdown si_averagecolor si_colorhistogram =
si_featurelist si_positionalcolor si_stillimage si_texture siblings sid =
sign sin size size_t sizes skip slave sleep smalldatetimefromparts =
smallfile snapshot some soname sort soundex source space sparse spfile =
split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows =
sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname =
sqlstate sqrt square standalone standby start starting startup statement =
static statistics stats_binomial_test stats_crosstab stats_ks_test =
stats_mode stats_mw_test stats_one_way_anova stats_t_test_ =
stats_t_test_indep stats_t_test_one stats_t_test_paired stats_wsr_test =
status std stddev stddev_pop stddev_samp stdev stop storage store stored =
str str_to_date straight_join strcmp strict string struct stuff style =
subdate subpartition subpartitions substitutable substr substring =
subtime subtring_index subtype success sum suspend switch switchoffset =
switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate =
sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime table =
tables tablespace tan tdo template temporary terminated tertiary_weights =
test than then thread through tier ties time time_format time_zone =
timediff timefromparts timeout timestamp timestampadd timestampdiff =
timezone_abbr timezone_minute timezone_region to to_base64 to_date =
to_days to_seconds todatetimeoffset trace tracking transaction =
transactional translate translation treat trigger trigger_nestlevel =
triggers trim truncate try_cast try_convert try_parse type ub1 ub2 ub4 =
ucase unarchived unbounded uncompress under undo unhex unicode uniform =
uninstall union unique unix_timestamp unknown unlimited unlock unpivot =
unrecoverable unsafe unsigned until untrusted unusable unused update =
updated upgrade upped upper upsert url urowid usable usage use =
use_stored_outlines user user_data user_resources users using utc_date =
utc_timestamp uuid uuid_short validate validate_password_strength =
validation valist value values var var_samp varcharc vari varia variab =
variabl variable variables variance varp varraw varrawc varray verify =
version versions view virtual visible void wait wallet warning warnings =
week weekday weekofyear wellformed when whene whenev wheneve whenever =
where while whitespace with within without work wrapped xdb xml xmlagg =
xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest =
xmlindex xmlnamespaces xmlpi xmlquery xmlroot xmlschema xmlserialize =
xmltable xmltype xor year year_to_month years yearweek",literal:"true =
false null",built_in:"array bigint binary bit blob boolean char =
character date dec decimal float int int8 integer interval number =
numeric real record serial serial8 smallint text varchar varying =
void"},c:[{cN:"string",b:"'",e:"'",c:[e.BE,{b:"''"}]},{cN:"string",b:'"',=
e:'"',c:[e.BE,{b:'""'}]},{cN:"string",b:"`",e:"`",c:[e.BE]},e.CNM,e.CBCM,=
t]},e.CBCM,t]}}),e});
------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: https://static1.51cto.com/edu/blog/js/detail_mp.js

Ly8gSDXlkoxQY+WQjOeUqO+8iOino+aekOWNmuaWh+Wxleekuu+8iXpqZjIwMTcxMDExCihmdW5j
dGlvbigpewogIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgICQoIi5tYWluLWNvbnRlbnQiKS5m
aW5kKCdhJykuY3NzKHsnY29sb3InOicjNDI4NWY0J30pCiAgICAkKCIubWFpbi1jb250ZW50Iiku
ZmluZCgnLmNuYmxvZ3NfY29kZV9jb3B5JykucmVtb3ZlKCkKICAgICQoIi5hcnRpY2FsLWNvbnRl
bnQtYmFrIikuZmluZCgnaW1nJykuY3NzKCdjdXJzb3InLCdwb2ludGVyJykKICAgIAogICAgJCgi
LmFydGljYWwtY29udGVudC1iYWsiKS5maW5kKCdpbWcnKS5jbGljayhmdW5jdGlvbigpewogICAg
ICAgIHZhciBocmVmb2JqID0gJCh0aGlzKS5wYXJlbnQoJ2EnKQogICAgICAgIHZhciBocmVmID0g
JycKICAgICAgICBpZihocmVmb2JqLmxlbmd0aCAhPSAwKXsKICAgICAgICAgICAgaHJlZiA9IGhy
ZWZvYmouYXR0cignaHJlZicpCiAgICAgICAgICAgIGlmKHR5cGVvZiBocmVmID09ICd1bmRlZmlu
ZWQnKSBocmVmID0gJyc7IAogICAgICAgIH0KICAgICAgICB2YXIgaW1nX3NyYyA9ICQodGhpcyku
YXR0cignc3JjJykKICAgICAgICBocmVmPT0iIiA/IHdpbmRvdy5vcGVuKGltZ19zcmMpIDogd2lu
ZG93Lm9wZW4oaHJlZikKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9KQogIH0sNTApCiAgaWYo
aXNfb2xkICE9IDEpewogICAgaGxqcy5pbml0SGlnaGxpZ2h0aW5nT25Mb2FkKCk7CiAgfQp9KSgp
OwoKLyoqCiAqIFtpbnNlcnRDb2RlRWxlbWVudCDku6PnoIHpg6jliIbmmK/nlKg8cHJlPuagh+et
vuWMheijueeahO+8jOiAjOS4lGNsYXNz5bGe5oCn5Lit55qE4oCcYnJ1c2g64oCd5ZCO6Z2i5Li6
6L+Z5q615Luj56CB5omA55So55qE6K+t6KiA77yM5Y+q5pyJ5ZyoPGNvZGU+5qCH562+6YeM77yM
5bm25LiUIDxjb2RlPiDmoIfnrb7opoHmnInkuIDkuKrnsbvkvLzkuo4gIOKAnGxhbmd1YWdlLWNz
c+KAnSDkuYvnsbvnmoRjbGFzc++8jOaJjeiDveato+ehruW3peS9nF0KICogQHBhcmFtICB7W3R5
cGVdfSBjb250ZW50ICAgW+WNmuaWh10KICogQHBhcmFtICB7W3R5cGVdfSBjb250YWluZXIgW+aU
vue9rui/meS6m+WGheWuueeahOWuueWZqF0KICovCmZ1bmN0aW9uIGluc2VydENvZGVFbGVtZW50
KGNvbnRlbnQsIGNvbnRhaW5lcil7CiAgY29udGFpbmVyID0gY29udGFpbmVyIHx8IGRvY3VtZW50
OwogIC8vIOWIm+W7uuS4gOS4qiBkaXYg5p2l5pS+572u6I635Y+W5Yiw55qE5YaF5a6577yM6L+Z
5qC35bCx5Y+v5Lul5oqKIGNvbnRlbnQg5a2X56ym5Liy5YaF5a656L2s5o2i5oiQIGRvbQogIC8v
IOaWueS+v+aIkeS7rOWvuei/meS4qiBkb20g6L+b6KGM5pON5L2c77yI5Y+q5piv5Yib5bu6IGRp
du+8jOW5tuayoeacieaPkuWFpeWIsOaWh+aho++8jOS7luWPquWtmOWcqOS6juWGheWtmOS4re+8
iQogIHZhciBwYXJlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICBwYXJlbnQu
aW5uZXJIVE1MID0gY29udGVudDsKCiAgLy8g5om+5YiwIHBhcmVudCDkuK3nmoTmiYDmnIkgcHJl
IOagh+etvu+8jOW5tumBjeWOhgogIHZhciAkcHJlcyA9ICQocGFyZW50KS5maW5kKCdwcmUnKTsK
ICAkcHJlcy5lYWNoKGZ1bmN0aW9uKGluZGV4LCBlbCkgewogICAgdmFyICRlbCA9ICQoZWwpLAog
ICAgICAgIGh0bWwgPSAkZWwuaHRtbCgpLAogICAgICAgIGNvZGUgPSBkb2N1bWVudC5jcmVhdGVF
bGVtZW50KCdjb2RlJyksCiAgICAgICAgZWxDbGFzcyA9ICRlbC5hdHRyKCdjbGFzcycpLAogICAg
ICAgIC8vIOiOt+WPliBwcmUg5qCH562+5Lit77yMY2xhc3Mg5bGe5oCn5Lit5YyF5ZCr55qE5pys
5q615Luj56CB5omA5pyJ55qE57yW56iL6K+t6KiACiAgICAgICAgbGFuZ3VhZ2UgPSBlbENsYXNz
LnN1YnN0cmluZyg2LCBlbENsYXNzLmluZGV4T2YoJzsnKSk7CgogICAgY29kZS5jbGFzc05hbWUg
PSAnbGFuZ3VhZ2UtJyArIGxhbmd1YWdlOwogICAgY29kZS5pbm5lckhUTUwgPSBodG1sOwoKICAg
ICRlbC5odG1sKGNvZGUpOwogIH0pOwoKICAkKGNvbnRhaW5lcikuaHRtbChwYXJlbnQuaW5uZXJI
VE1MKTsKCiAgLy8g5pyA5ZCO77yM6LCD55SoIFByaXNtIOeahOaWueazleadpemrmOS6ruS7o+eg
gQogIFByaXNtLmhpZ2hsaWdodEFsbCgpOwp9Cg==

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/detail.js?v=1.0.6.9

// zjf20171011=0A=
var IntroduceFn =3D function(){this.Init()}=0A=
IntroduceFn.prototype =3D {=0A=
    Init: function(){=0A=
        var _this =3D this,=0A=
            isAlt =3D false,=0A=
            commonBtn =3D true;=0A=
            _this.isInit();=0A=
    },=0A=
    isInit: function(){=0A=
        var _this =3D this=0A=
            _this.Sort()            //=E6=8E=92=E5=BA=8F=0A=
            _this.Favorites()       //=E6=94=B6=E8=97=8F=0A=
            _this.Praise()          //=E8=B5=9E=0A=
            _this.LoadPage()        //=E5=88=86=E9=A1=B5=0A=
            _this.SetReplay()       //=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA=0A=
            _this.SetReplayDown()   =
//ctrl+enter=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA=0A=
            _this.SetReply()        //=E5=9B=9E=E5=A4=8D=E8=AF=84=E8=AE=BA=0A=
            _this.More()            =
//=E6=98=AF=E5=90=A6=E5=B1=95=E5=BC=80=E6=89=80=E6=9C=89=E4=BA=8C=E7=BA=A7=
=E8=AF=84=E8=AE=BA=0A=
            _this.Remove()          //=E5=88=A0=E9=99=A4=0A=
            _this.Focus()=0A=
            _this.Ahref('.b-reply','#comment')=0A=
            _this.Ahref('.comment-num','#comment')=0A=
            setPraise($('.praise span'));//=E7=82=B9=E8=B5=9E=0A=
    },=0A=
    Sort: function(){//=E8=AF=84=E8=AE=BA=E6=8E=92=E5=BA=8F=0A=
        var _this =3D this=0A=
        $(".comment-sort").click(function() {=0A=
            var me =3D $(this)=0A=
            _this.is_load =3D false;=0A=
            comment_sort =3D me.attr("flag");=0A=
            _this.RemoveClass($(".comment-sort"),"on")=0A=
            _this.AddClass(me,"on")=0A=
            $(".comment-sort").attr("page", 1);=0A=
            _this.LoadPage();=0A=
        })=0A=
    },=0A=
    Comment: function(c,index){//=E4=B8=80=E7=BA=A7=E5=9B=9E=E5=A4=8D=0A=
        var _this =3D this=0A=
        var text =3D '<div class=3D"commentList-box cbox-'+c.id+'" =
id=3D"'+c.id+'">'=0A=
            text +=3D '<div class=3D"comment-1 publish_user_id =
reply_id_box comment_number-list" rid=3D"'+c.id+'"><div class=3D"top">'=0A=
            text +=3D '<div class=3D"is-vip-bg-6 fl header-con"><a =
href=3D"'+blog_url+c.domain+'" class=3D"header-img">'=0A=
                if(c.isvip =3D=3D 1){=0A=
                    text +=3D '<img class=3D"is-vip-img-bg is-vip-img-4" =
src=3D"'+c.avatar+'" ><i class=3D"vip-icon vip-icon-4"></i>'=0A=
                }else if(c.isvip =3D=3D 2){=0A=
                    text +=3D '<img class=3D"is-vip-img-bg is-vip-img-4" =
src=3D"'+c.avatar+'" ><i class=3D"vip-icon vip-icon-4 on"></i>'=0A=
                }else{=0A=
                    text +=3D '<img class=3D"is-vip-img-bg is-vip-img-4" =
src=3D"'+c.avatar+'" >'=0A=
                }=0A=
            text +=3D '</a></div>'=0A=
            text +=3D '<div class=3D"head-right jf-list-box"><p =
class=3D"name"><a href=3D"'+blog_url+c.domain+'">'+(c.nickname ? =
c.nickname : c.username)+'</a>'=0A=
                if(c_user_id =3D=3D c.user_id){=0A=
                    text +=3D '<span>=E4=BD=9C=E8=80=85</span>'=0A=
                }=0A=
            text +=3D '</p>'=0A=
                if(c.isPraise =3D=3D 1){=0A=
                    text +=3D '<div class=3D"time on">'=0A=
                }else{=0A=
                    text +=3D '<div class=3D"time">'=0A=
                }=0A=
            text +=3D '<span =
class=3D"fl">'+c.floor+'=E6=A5=BC&nbsp;&nbsp;'+_this.Time(c.create_time)+=
'</span>'=0A=
                if(i_user_id =3D=3D c.user_id) {=0A=
                    text +=3D '<span class=3D"fr remove"></span>'=0A=
                }=0A=
                if(is_comment !=3D 2) {=0A=
                    if(i_user_id !=3D c.user_id)=0A=
                    text +=3D '<span class=3D"reply-btn fr" =
data-type=3D"1">'+(c.reply.length>0 ? c.reply.length : '')+'</span>'=0A=
                }=0A=
            text +=3D '<span class=3D"zan fr" blog_id=3D"'+c.id+'" =
type=3D"2" userid=3D"'+c.user_id+'">'+(c.up_num > 0 ? c.up_num : =
'')+'</span>'=0A=
            text +=3D '<div class=3D"clear"></div></div>'=0A=
            text +=3D '<input type=3D"hidden" class=3D"reply_id" =
value=3D"'+c.id+'"><input type=3D"hidden" class=3D"user_id" =
value=3D"'+c.user_id+'"><input type=3D"hidden" class=3D"first_pid" =
value=3D"'+c.id+'">'=0A=
            text +=3D '</div></div>'=0A=
            text +=3D '<div =
class=3D"con">'+_this.SetBr(c.content)+'</div></div>'=0A=
            if(c.reply) {//=E4=BA=8C=E7=BA=A7=E5=9B=9E=E5=A4=8D=0A=
                text +=3D '<div class=3D"comment-2">'=0A=
                text +=3D '<ul class=3D"comment-2-list" =
flag=3D"'+c.id+'">'=0A=
                for (var i =3D 0; i < c.reply.length; i++) {=0A=
                    var r =3D c.reply[i];=0A=
                    text +=3D _this.CommentChild(i,r)=0A=
                }=0A=
                text +=3D '</ul>'=0A=
                if(c.reply.length > 3){=0A=
                    text +=3D '<div class=3D"new-comment =
open-btn">=E8=BF=98=E6=9C=89'+(c.reply.length-3)+'=E6=9D=A1=E5=9B=9E=E5=A4=
=8D</div>'=0A=
                }=0A=
            }=0A=
            text +=3D '</div></div>';=0A=
            return text;=0A=
    },=0A=
    CommentChild: function(i,r){=0A=
        var _this =3D this,=0A=
            text =3D '';=0A=
        if(i > 2){=0A=
            text +=3D '<li class=3D"comment-2-list-none jf-list-box =
publish_user_id comment_number-list comment-2-cb cbox-'+r.id+'">'=0A=
        }else{=0A=
            text +=3D '<li class=3D"publish_user_id jf-list-box =
reply_id_box comment_number-list comment-2-cb cbox-'+r.id+'">'=0A=
        }=0A=
        text +=3D '<div class=3D"top '+c_user_id +'c_i'+ i_user_id + =
'_r' + r.user_id +'">'=0A=
        if(c_user_id =3D=3D r.user_id) {=0A=
            text +=3D '<a class=3D"author fl">=E4=BD=9C=E8=80=85</a>'=0A=
        }=0A=
        text +=3D '<a class=3D"name fl" =
href=3D"'+blog_url+r.domain+'">'+(r.nickname ? r.nickname : =
r.username)+'</a><a class=3D"name fl" =
href=3D"'+blog_url+r.reDomain+'">:@'+r.replayNickname+'&nbsp;</a><div =
class=3D"clear"></div></div>'=0A=
        text +=3D '<div class=3D"con">'+r.content+'</div>'=0A=
        text +=3D '<div class=3D"bot"><p =
class=3D"time">'+_this.Time(r.create_time)+'</p>'=0A=
        if(is_comment !=3D 2) {=0A=
            if(i_user_id !=3D r.user_id)=0A=
            text +=3D '<p class=3D"reply reply-btn" =
data-type=3D"2">=E5=9B=9E=E5=A4=8D</p>'=0A=
        }=0A=
        if(i_user_id =3D=3D r.user_id) {=0A=
            text +=3D '<p class=3D"remove">=E5=88=A0=E9=99=A4</p>'=0A=
        }=0A=
        text +=3D '<div class=3D"clear"></div></div>'=0A=
        text +=3D '<input type=3D"hidden" class=3D"reply_id" =
value=3D"'+r.id+'"><input type=3D"hidden" class=3D"user_id" =
value=3D"'+r.user_id+'"><input type=3D"hidden" class=3D"first_pid" =
value=3D"'+r.first_pid+'">'=0A=
        text +=3D '</li>'=0A=
        return text;=0A=
    },=0A=
    Focus: function(){=0A=
        var _this =3D this=0A=
        $('.textareadiv-publish').focus(function(){=0A=
            if(isLogin !=3D 1) {=0A=
                _this.Login()=0A=
            }else{=0A=
                $(this).blur(function(){})=0A=
            }=0A=
        })=0A=
    },=0A=
    SetReplay: =
function(){//=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA=E5=8F=82=E6=95=B0=0A=
        var _this =3D this=0A=
        $('.publish-btn').unbind()=0A=
        $('.publish-btn').click(function(){=0A=
            _this.False()=0A=
            var me =3D $(this)=0A=
            var content =3D =
me.parent().parent().find('.textareadiv').val()=0A=
            var user_id =3D =
me.parent().parent().parent().find('.user_id').val()=0A=
            var parent_id =3D =
me.parent().parent().parent().find('.reply_id').val()=0A=
=0A=
            var flag =3D me.attr('flag')=0A=
            var first_pid =3D ''=0A=
            if(flag=3D=3D2){=0A=
                =
if(me.parents('.commentList-box').find('.comment-2-list').html() =3D=3D =
''){=0A=
                    first_pid =3D =
me.parents('.commentList-box').attr('id')=0A=
                }else{=0A=
                    first_pid =3D me.parents().find('.comment-2-cb =
.first_pid').val()=0A=
                }=0A=
            }=0A=
            var data =3D {=0A=
                'resource_id': blog_id,=0A=
                'content': $.trim(content),=0A=
                'parent_id': parent_id,=0A=
                'first_pid': first_pid,=0A=
                'blog_id': blog_id,=0A=
                'user_id': user_id,=0A=
                'url': window.location.href=0A=
            }=0A=
            _this.ReplayAjax(data)=0A=
       })=0A=
    },=0A=
    SetReplayDown: =
function(ev){//ctrl+enter=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA=0A=
        var _this =3D this=0A=
        $('.textareadiv').keydown(function(ev){=0A=
            if(ev.ctrlKey && ev.keyCode =3D=3D 13){=0A=
                if(_this.commonBtn =3D=3D false)return false;=0A=
                _this.commonBtn =3D false=0A=
                setTimeout(function(){_this.commonBtn =3D true},3000)=0A=
                var me =3D $(this)=0A=
                var content =3D me.val()=0A=
                var user_id =3D me.parents().find('.publish_user_id =
.user_id').val()=0A=
                var parent_id =3D =
me.parent().parent().find('.reply_id').val()=0A=
                var flag =3D me.attr('flag')=0A=
                var first_pid =3D =
me.parent().parent().find('.first_pid').val()=0A=
                var data =3D {=0A=
                    'resource_id': blog_id,=0A=
                    'content': $.trim(content),=0A=
                    'parent_id': parent_id,=0A=
                    'first_pid': first_pid,=0A=
                    'blog_id': blog_id,=0A=
                    'user_id': user_id,=0A=
                    'url': window.location.href=0A=
                }=0A=
                _this.ReplayAjax(data)=0A=
            }=0A=
        })=0A=
    },=0A=
    SetReply: function(){=0A=
        var _this =3D this=0A=
        $('.reply-btn').unbind("click")=0A=
        =
$('.reply-btn').click(function(){//=E4=BA=8C=E7=BA=A7=E5=9B=9E=E5=A4=8D=0A=
            var me =3D $(this)=0A=
                type =3D me.attr('data-type')=0A=
            _this.SetReplyCon(me,type)=0A=
        })=0A=
    },=0A=
    SetReplyCon: function(me,type){=0A=
        var _this =3D this=0A=
        var reply_text =3D $('<div class=3D"comment-creat =
fitst-reply"><textarea class=3D"textareadiv" name=3D"" id=3D"" =
cols=3D"30" rows=3D"10" maxlength=3D"500" =
placeholder=3D"=E7=94=A8=E5=BF=83=E7=9A=84=E5=9B=9E=E5=A4=8D=E4=BC=9A=E8=A2=
=AB=E6=9B=B4=E5=A4=9A=E4=BA=BA=E7=9C=8B=E5=88=B0=E5=92=8C=E8=AE=A4=E5=8F=AF=
"></textarea><div class=3D"comment-push"><p class=3D"msg =
fl">Ctrl+Enter&nbsp;=E5=8F=91=E5=B8=83</p><p class=3D"publish-btn =
blue-btn fr" flag=3D"2">=E5=8F=91=E5=B8=83</p><p class=3D"cancel-btn =
cancel-btn-2 fr">=E5=8F=96=E6=B6=88</p><div =
class=3D"clear"></div></div><div class=3D"clear"></div></div>');=0A=
        var first_reply =3D me.parent().parent().find(".textareadiv")=0A=
        if(isLogin !=3D 1) {=0A=
            _this.Login()=0A=
            return false;=0A=
        }=0A=
        if(first_reply.length < 1) {=0A=
            $(".fitst-reply").remove();=0A=
            if(type=3D=3D2){=0A=
                me.parent().after(reply_text);=0A=
            }else if(type=3D=3D1){=0A=
                me.parent().parent().parent().parent().after(reply_text);=0A=
            }=0A=
            _this.CancelBtn()       //=E5=8F=96=E6=B6=88=E5=9B=9E=E5=A4=8D=0A=
            _this.SetReplay()       //=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA=0A=
            _this.SetReplayDown()   =
//ctrl+enter=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA=0A=
            _this.More()            =
//=E6=98=AF=E5=90=A6=E5=B1=95=E5=BC=80=E6=89=80=E6=9C=89=E4=BA=8C=E7=BA=A7=
=E8=AF=84=E8=AE=BA=0A=
            _this.Remove()          //=E5=88=A0=E9=99=A4=0A=
            _this.SetPageClick()    //click page=0A=
            _this.ScrollTop()       =
//=E5=9B=9E=E5=88=B0=E8=AF=84=E8=AE=BA=E9=A1=B6=E9=83=A8=0A=
        }=0A=
        setTimeout(function(){=0A=
            reply_text.find('textarea').focus()=0A=
        },250)=0A=
    },=0A=
    SetPageClick: function() {=0A=
        var _this =3D this;=0A=
        $(".load_page").click(function() {=0A=
            var page =3D $(this).attr('page');=0A=
            $("#sort-"+comment_sort).attr("page", page);=0A=
            _this.LoadPage();=0A=
            setTimeout(function(){=0A=
                _this.ScrollTopFn($('#comment'))=0A=
            },200)=0A=
        })=0A=
    },=0A=
    Alt: function() {//=E9=94=9A=E7=82=B9=E5=AE=9A=E4=BD=8D=0A=
        var _this =3D this;=0A=
        if(rid =3D=3D 0 || _this.isAlt) {=0A=
            return ;=0A=
        }else{=0A=
            var alt_obj =3D $('.cbox-'+rid);=0A=
            _this.ScrollTopFn(alt_obj);=0A=
            _this.isAlt =3D true;=0A=
        }=0A=
    },=0A=
    SetPage: function(cur_page, page_num){=0A=
        cur_page =3D parseInt(cur_page);=0A=
        var page_str =3D '';=0A=
        if(page_num > 1) {=0A=
          page_str =3D '<ul class=3D"pagination">';=0A=
          var pri_page =3D parseInt(cur_page - 1);=0A=
          if(pri_page > 0) {=0A=
            page_str +=3D '<li class=3D"load_page first_page" =
page=3D"'+pri_page+'"><a =
href=3D"javascript:;">=E4=B8=8A=E4=B8=80=E9=A1=B5</a></li>';=0A=
          } else {=0A=
            page_str +=3D '<li class=3D"prev show" page=3D"1"><a =
href=3D"javascript:;">=E4=B8=8A=E4=B8=80=E9=A1=B5</a></li>';=0A=
          }=0A=
          var show_pages =3D 10;=0A=
          var page_start =3D Math.max(1, parseInt(cur_page - 5));=0A=
          var page_end =3D Math.min(page_num, parseInt(page_start + =
show_pages));=0A=
          if(parseInt(page_end - page_start) < show_pages) {=0A=
            page_start =3D Math.max(1, parseInt(page_end - show_pages));=0A=
          }=0A=
          for (var i =3D page_start; i <=3D page_end; i++) {=0A=
            if(i =3D=3D cur_page) {=0A=
              page_str +=3D '<li class=3D"load_page active" =
page=3D"'+i+'"><a href=3D"javascript:;">'+i+'</a></li>';=0A=
            } else {=0A=
              page_str +=3D '<li class=3D"load_page" page=3D"'+i+'"><a =
href=3D"javascript:;">'+i+'</a></li>';=0A=
            }=0A=
          }=0A=
          var next_page =3D parseInt(cur_page + 1);=0A=
          if(cur_page < page_num) {=0A=
            page_str +=3D '<li class=3D"load_page next" =
page=3D"'+next_page+'"><a =
href=3D"javascript:;">=E4=B8=8B=E4=B8=80=E9=A1=B5</a></li>';=0A=
          }else{=0A=
            page_str +=3D '<li class=3D"last_page show" =
page=3D"'+next_page+'"><a =
href=3D"javascript:;">=E4=B8=8B=E4=B8=80=E9=A1=B5</a></li>';=0A=
          }=0A=
          page_str +=3D '</ul>';=0A=
          $(".act_pageList_box").html(page_str);=0A=
        }=0A=
    },=0A=
    LoadPage: function(){//=E5=88=86=E9=A1=B5=0A=
        var _this =3D this=0A=
        if(_this.is_load)return false;=0A=
        $(".commentList").html('<img =
src=3D"'+img_url+'images/loading.gif" style=3D"margin: 200px 370px;">');=0A=
        _this.is_load =3D true;=0A=
        var page =3D $("#sort-"+comment_sort).attr("page");=0A=
        page =3D parseInt(page);=0A=
        pagesize =3D 10;=0A=
        var data =3D {id: blog_id,sort: comment_sort,page: page}=0A=
        $.get(comment_list,data,function(e){=0A=
            _this.is_load =3D false;=0A=
            if(e.status =3D=3D 0){=0A=
                _this.SetPage(e.data.current_page, e.data.page_count);=0A=
                var content_text =3D '';=0A=
                if(e.data.list)=0A=
                for (var i =3D 0; i < e.data.list.length; i++) {=0A=
                    var index =3D (page - 1) * pagesize + i;=0A=
                    content_text +=3D _this.Comment(e.data.list[i], =
index);=0A=
                }=0A=
                $(".commentList").html(content_text);=0A=
                setPraise($('.comment-1 .time .zan'))//=E7=82=B9=E8=B5=9E=0A=
                _this.SetPageClick()    //click page=0A=
                _this.CancelBtn()       =
//=E5=8F=96=E6=B6=88=E5=9B=9E=E5=A4=8D=0A=
                _this.SetReplay()       =
//=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA=0A=
                _this.SetReplayDown()   =
//ctrl+enter=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA=0A=
                _this.SetReply()        =
//=E5=9B=9E=E5=A4=8D=E8=AF=84=E8=AE=BA=0A=
                _this.More()            =
//=E6=98=AF=E5=90=A6=E5=B1=95=E5=BC=80=E6=89=80=E6=9C=89=E4=BA=8C=E7=BA=A7=
=E8=AF=84=E8=AE=BA=0A=
                _this.Remove()          //=E5=88=A0=E9=99=A4=0A=
                _this.ScrollTop()       =
//=E5=9B=9E=E5=88=B0=E8=AF=84=E8=AE=BA=E9=A1=B6=E9=83=A8=0A=
                $("#sort-"+comment_sort).attr("page", page+1);=0A=
                _this.Alt()=0A=
            } else {=0A=
                new AutoBox({content:e.msg,autoClose:3})=0A=
            }=0A=
        },'json')=0A=
    },=0A=
    ReplayAjax: function(data){//=E8=AF=84=E8=AE=BAajax=0A=
        var _this =3D this=0A=
        if(isLogin !=3D 1) {=0A=
            _this.Login()=0A=
            return false;=0A=
        }=0A=
        if(data.content.length=3D=3D0){=0A=
            new =
AutoBox({content:'=E8=AF=84=E8=AE=BA=E5=86=85=E5=AE=B9=E4=B8=8D=E8=83=BD=E4=
=B8=BA=E7=A9=BA~',mask:"#000",autoClose:3})=0A=
        }else{=0A=
            $.ajax({=0A=
                url: addReply_url,=0A=
                data: data,=0A=
                type: 'POST',=0A=
                dataType: 'JSON',=0A=
                success: function(e){=0A=
                    commonBtn =3D true=0A=
                    if(e.status =3D=3D 1){=0A=
                        _this.SetAddReply(e,data)=0A=
                    }else if(e.status =3D=3D -1){=0A=
                        new AutoBox({content:'<div style=3D"padding: 0 =
40px;">'+e.msg+'</div>',mask:"#000",autoClose:3})=0A=
                    }else if(e.status =3D=3D -9){=0A=
                        _this.Login()=0A=
                    }else{=0A=
                        new AutoBox({content:'<div style=3D"padding: 0 =
40px;">'+e.msg+'</div>',mask:"#000",autoClose:3})=0A=
                    }=0A=
                }=0A=
            })=0A=
        }=0A=
    },=0A=
    SetAddReply: =
function(e,data){//=E6=B7=BB=E5=8A=A0=E8=AF=84=E8=AE=BA=E5=92=8C=E5=9B=9E=
=E5=A4=8D=0A=
        var _this =3D this=0A=
        var par =3D '';=0A=
        if(e.data.isReplay =3D=3D 1){//=E5=9B=9E=E5=A4=8D=0A=
            if($('.cbox-'+data.parent_id).hasClass('comment-2-cb')){=0A=
                par =3D $('.cbox-'+data.parent_id).parent()=0A=
                par.html(_this.CommentChild(1,e.data) + par.html())=0A=
                _this.ScrollTopFn($(par))=0A=
            }else{=0A=
                var newReply =3D '' //'<div class=3D"new-comment"><div =
class=3D"top"><a class=3D"fl new =
add-new-publish">=E6=B7=BB=E5=8A=A0=E6=96=B0=E5=9B=9E=E5=A4=8D</a><div =
class=3D"clear"></div></div></div>'=0A=
                par =3D =
$('.cbox-'+data.parent_id).find($('.comment-2-list'))=0A=
                =
if(par.parents('.comment-2').find('.publish_user_id').length > 0){=0A=
                    par.html(_this.CommentChild(1,e.data) + par.html())=0A=
                }else{=0A=
                    par.html(_this.CommentChild(1,e.data) + par.html() + =
newReply)=0A=
                }=0A=
            }=0A=
            var text =3D =
parseInt($(par).parents('.commentList-box').find('.comment_number_1').tex=
t() =3D=3D '' ? 0 : =
$(par).parents('.commentList-box').find('.comment_number_1').text())=0A=
            console.log(text);=0A=
            =
$(par).parents('.commentList-box').find('.comment_number_1').html(text+1)=0A=
            _this.StarBox(par,'.comment-2-cb')=0A=
            _this.CancelCon()=0A=
        }else{//=E8=AF=84=E8=AE=BA=0A=
            par =3D $('.commentList');=0A=
            var index =3D '',comment_sort =3D $('.comment-sort')=0A=
            if(comment_sort.hasClass('on')){=0A=
                index =3D comment_sort.attr('page')=0A=
            }=0A=
            par.html(_this.Comment(e.data,index) + par.html())=0A=
            _this.ScrollTopFn($('#comment'))=0A=
            $('.textareadiv-publish').val('')=0A=
            _this.StarBox(par,'.commentList-box')=0A=
        }=0A=
        if($('.comment-number').length < 1){=0A=
            $('.comment-creat').after('<div class=3D"comment-number" =
id=3D"comment_pl"><p class=3D"number fl"><span =
class=3D"comment_number">0</span>=E6=9D=A1=E8=AF=84=E8=AE=BA</p><a =
class=3D"time-last time fr comment-sort on" id=3D"sort-desc" =
flag=3D"desc"  page=3D"1" href=3D"javascript:;" =
>=E6=8C=89=E6=97=B6=E9=97=B4=E5=80=92=E5=BA=8F</a><a class=3D"time-first =
time fr comment-sort" id=3D"sort-asc" flag=3D"asc"  page=3D"1" =
href=3D"javascript:;">=E6=8C=89=E6=97=B6=E9=97=B4=E6=AD=A3=E5=BA=8F</a><d=
iv class=3D"clear"></div></div>')=0A=
        }=0A=
        $('.comment_number').each(function(n,m){=0A=
            var text =3D parseInt($(this).text())=0A=
            $('.comment_number').eq(n).text(text+1)=0A=
        })=0A=
        setPraise($('.comment-1 .time .zan'))//=E7=82=B9=E8=B5=9E=0A=
        _this.CancelBtn()       //=E5=8F=96=E6=B6=88=E5=9B=9E=E5=A4=8D=0A=
        _this.SetReplay()       //=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA=0A=
        _this.SetReplayDown()   =
//ctrl+enter=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA=0A=
        _this.SetReply()        //=E5=9B=9E=E5=A4=8D=E8=AF=84=E8=AE=BA=0A=
        _this.More()            =
//=E6=98=AF=E5=90=A6=E5=B1=95=E5=BC=80=E6=89=80=E6=9C=89=E4=BA=8C=E7=BA=A7=
=E8=AF=84=E8=AE=BA=0A=
        _this.Remove()          //=E5=88=A0=E9=99=A4=0A=
        _this.SetPageClick()    //click page=0A=
        _this.ScrollTop()       =
//=E5=9B=9E=E5=88=B0=E8=AF=84=E8=AE=BA=E9=A1=B6=E9=83=A8=0A=
        _this.Sort()            //=E6=8E=92=E5=BA=8F=0A=
        _this.isWxbind()=0A=
    },=0A=
    CancelBtn: function(){//=E5=8F=96=E6=B6=88=E5=9B=9E=E5=A4=8D=0A=
        $('.cancel-btn-2').click(function(){=0A=
            $(this).parent().parent().find('#textareadiv').val('')=0A=
            $(this).parent().parent().remove();=0A=
        })=0A=
        =
$('.cancel-btn-1').click(function(){//=E5=8F=96=E6=B6=88=E8=AF=84=E8=AE=BA=0A=
            $(this).parent().parent().find('.textareadiv').val('')=0A=
        })=0A=
    },=0A=
    isWxbind: function(){=0A=
        var mask =3D $('<div class=3D"mask"></div>')=0A=
            msg_index_box =3D $('<div class=3D"msg-index-box"></div>'),=0A=
            cls =3D $('<p class=3D"follow-close"></p>'),=0A=
            top_bg =3D $('<p class=3D"top-bg"></p>'),=0A=
            con_box =3D $('<div class=3D"con-box"></div>'),=0A=
            icon_1 =3D $('<p class=3D"icon-bg icon-1"></p>')=0A=
            icon_2 =3D $('<p class=3D"icon-bg icon-2"></p>')=0A=
            h2 =3D $('<h2>=E5=8F=91=E5=B8=83=E6=88=90=E5=8A=9F</h2>')=0A=
            con =3D $('<div =
class=3D"con">=E5=85=B3=E6=B3=A8=E5=B9=B6=E7=BB=91=E5=AE=9A=E5=AE=98=E6=96=
=B9=E5=BE=AE=E4=BF=A1=E6=9C=8D=E5=8A=A1=E5=8F=B7=E5=8F=AF=E9=9A=8F=E6=97=B6=
=E9=9A=8F=E5=9C=B0</div><div =
class=3D"con">=E6=94=B6=E5=88=B0=E5=9B=9E=E5=A4=8D=E6=8F=90=E9=86=92</div=
>'),=0A=
            code_bg =3D $('<div class=3D"code-bg"><iframe =
id=3D"childframe" =
src=3D"http://home.51cto.com/wechat/get-iframe-qr-code" =
iframeboder=3D"0" scrolling=3D"no" allowtransparency=3D"true" =
style=3D"border: 0 none;margin: 8px 14px;" width=3D"120" height=3D"120" =
name=3D""></iframe></div>')=0A=
            btn_box =3D $('<div class=3D"btn-box"><p =
class=3D"btn-1">=E4=B8=8D=E5=86=8D=E6=8F=90=E9=86=92</p><p =
class=3D"btn-2">=E7=9F=A5=E9=81=93=E4=BA=86</p></div>')=0A=
            $.post('/index/wxbind',{uid:userId},function(res){=0A=
                if(getCookie('follow1'))return false;=0A=
                if(res.status=3D=3D1){=0A=
                    if(res.data.wxBind =3D=3D =
0){//=E6=B2=A1=E7=BB=91=E5=AE=9A=0A=
                        msg_index_box.remove()=0A=
                        $('body').append(mask).append(msg_index_box)=0A=
                        =
msg_index_box.append(cls).append(top_bg).append(con_box)=0A=
                        =
con_box.html('').append(icon_1).append(h2).append(con).append(code_bg).ap=
pend(btn_box)=0A=
                        msg_index_box.css('height','330px')=0A=
                        $('.mask').show()=0A=
                        $('.btn-box .btn-2, .msg-index-box =
.follow-close').bind('click',function(){=0A=
                            $('.msg-index-box').remove()=0A=
                            $('.mask').remove()=0A=
                        })=0A=
                        $('.btn-box .btn-1').bind('click',function(){=0A=
                            setCookie('follow1','follow1',3650)=0A=
                            $('.msg-index-box').remove()=0A=
                            $('.mask').remove()=0A=
                        })=0A=
                    }=0A=
                }=0A=
            },'json')=0A=
    },=0A=
    CancelCon: function(a){=0A=
        $('.fitst-reply').remove()=0A=
    },=0A=
    More: function(){=0A=
        $('.open-btn').unbind("click");=0A=
        $('.open-btn').click(function() {=0A=
            var me =3D $(this)=0A=
            if(me.text() =3D=3D "=E6=94=B6=E8=B5=B7"){=0A=
                =
me.parents(".comment-2").find(".comment-2-list-none").css({"display":"non=
e"});=0A=
                var list_num =3D me.parents('.comment-2').find('ul =
li').length=0A=
                me.text("=E8=BF=98=E6=9C=89" + (list_num-3) + =
"=E6=9D=A1=E5=9B=9E=E5=A4=8D");=0A=
                me.parent().find(".open-more").show();=0A=
            }else{=0A=
                =
me.parents(".comment-2").find(".comment-2-list-none").css({"display":"blo=
ck"});=0A=
                me.text("=E6=94=B6=E8=B5=B7");=0A=
                me.parent().find(".open-more").hide();=0A=
            }=0A=
        })=0A=
    },=0A=
    Remove: function(){//=E5=88=A0=E9=99=A4=E5=9B=9E=E5=A4=8D=0A=
        var _this =3D this=0A=
        $('.remove').unbind("click");=0A=
        $('.remove').click(function(){=0A=
            var _me =3D $(this)=0A=
            var id =3D =
_me.parents('.jf-list-box').find('.reply_id').val();=0A=
            var pobj =3D _me.parents(".commentList-box");=0A=
            var oldLen =3D $('.comment_number-list').length=0A=
            var ridArr =3D '';=0A=
            _this.isLogin()=0A=
            new AutoBox({content:'<div style=3D"padding: 0 30px 30px =
30px;">=E6=98=AF=E5=90=A6=E8=A6=81=E5=88=A0=E9=99=A4=E5=8F=91=E5=B8=83=E7=
=9A=84=E8=AF=84=E8=AE=BA=EF=BC=9F</div>',img:'remind',mask:"#000",Yes:'=E7=
=A1=AE=E5=AE=9A',No:'=E5=8F=96=E6=B6=88',=0A=
                yc:function(){=0A=
                    $.get(removeUrl,{blog_id: blog_id,id: =
id},function(e){=0A=
                        if(e.status =3D=3D 1){=0A=
                            if(e.data) {=0A=
                                for (var i =3D 0; i < e.data.length; =
i++) {=0A=
                                    var class_name =3D "cbox-" + =
e.data[i];=0A=
                                    $("." + class_name).remove();=0A=
                                }=0A=
                            }=0A=
                            =
if(!_me.parent().parent().hasClass("comment-1")) {=0A=
                                var cm_1 =3D =
pobj.find(".comment_number_1").html();=0A=
                                var n_cm =3D parseInt(cm_1) - =
e.data.length;=0A=
                                =
pobj.find(".comment_number_1").html(n_cm);=0A=
                            }=0A=
                            $('.comment_number').each(function(n,m){=0A=
                                var text =3D =
parseInt($(this).text())-parseInt(e.data.length)=0A=
                                $('.comment_number').eq(n).text(text)=0A=
                            })=0A=
=0A=
                        }else{=0A=
                            new =
AutoBox({content:e.msg,img:'remind',mask:"#000",autoClose:3})=0A=
                        }=0A=
                    },'json')=0A=
                }=0A=
            })=0A=
        })=0A=
    },=0A=
    Favorites: function(){//=E6=94=B6=E8=97=8F=0A=
        var _this =3D this=0A=
        $('.favorites-opt').click(function(){=0A=
            var me =3D $(this)=0A=
                bVal =3D parseInt($('.b-favorites b').text())=0A=
            if(isLogin !=3D 1){=0A=
                _this.Login()=0A=
                return false;=0A=
            }=0A=
            if($(this).hasClass('on'))return false;=0A=
            $.get(collect_url+'?blog_id=3D'+blog_id,function(e){=0A=
                if(e.status =3D=3D 0){//=E6=88=90=E5=8A=9F=0A=
                    $('.b-favorites b').text(bVal+1)=0A=
                    $('.favorites-opt').addClass('on')=0A=
                    new AutoBox({content:e.msg,mask:"#000",autoClose:3})=0A=
                }else{//=E5=85=B6=E4=BB=96=0A=
                    new AutoBox({content:e.msg,mask:"#000",autoClose:3})=0A=
                }=0A=
            },'JSON')=0A=
        });=0A=
    },=0A=
    Praise: function(){//=E8=B5=9E=0A=
        var _this =3D this=0A=
        $('.is-praise span').click(function(ev){=0A=
            var me =3D $(this),=0A=
                text =3D parseInt(me.text() =3D=3D '' ? 0 : me.text()),=0A=
                par =3D me.parent(),=0A=
                type =3D me.attr('type'),=0A=
                blog_id =3D me.attr('blog_id'),=0A=
                userid =3D me.attr('userid');=0A=
            if(isLogin !=3D 1){=0A=
                _this.Login()=0A=
                return false;=0A=
            }=0A=
            if(par.hasClass('on'))return false;=0A=
            $('.is-praise span').text(text+1)=0A=
            $('.is-praise').addClass('on')=0A=
            =
$.post(praise_url,{id:blog_id,type:type,userid:userid},function(e){=0A=
                if(e.status =3D=3D 1){=0A=
                    $('.is-praise span').text(text+1)=0A=
                    $('.is-praise').addClass('on')=0A=
                    _this.AddAnimate($(".is-praise"))=0A=
                }else{=0A=
                    new =
AutoBox({content:e.msg,img:'remind',mask:"#000",autoClose:3})=0A=
                }=0A=
            },'JSON')=0A=
        })=0A=
    },=0A=
    Time: function(t){//=E8=AF=84=E8=AE=BA=E6=97=B6=E9=97=B4=0A=
        t =3D t * 1000;=0A=
        var date =3D new Date(t);=0A=
        var y =3D date.getFullYear();=0A=
        var m =3D date.getMonth() + 1;=0A=
        m =3D m < 10 ? ('0' + m) : m;=0A=
        var d =3D date.getDate();=0A=
        d =3D d < 10 ? ('0' + d) : d;=0A=
        var h =3D date.getHours();=0A=
        h =3D h < 10 ? ('0' + h) : h;=0A=
        var minute =3D date.getMinutes();=0A=
        var second =3D date.getSeconds();=0A=
        minute =3D minute < 10 ? ('0' + minute) : minute;=0A=
        second =3D second < 10 ? ('0' + second) : second;=0A=
        return y + '-' + m + '-' + d+' '+h+':'+minute+':'+second;=0A=
    },=0A=
    SetBr: function(content){//=E8=AF=84=E8=AE=BA=E6=8D=A2=E8=A1=8C=0A=
        return content.replace(/[\r\n]/g, '<br />');=0A=
    },=0A=
    False: function(){=0A=
        var _this =3D this=0A=
        if(_this.commonBtn =3D=3D false)return false;=0A=
        _this.commonBtn =3D false=0A=
        setTimeout(function(){_this.commonBtn =3D true;},3000)=0A=
    },=0A=
    isLogin: function(){=0A=
        var _this =3D this=0A=
        if(isLogin !=3D 1) _this.Login()=0A=
    },=0A=
    Login: function(){=0A=
        Login()=0A=
    },=0A=
    StarBox: function(a,b){=0A=
        var parobj =3D a.find(b).eq(0)=0A=
        parobj.css({'background':'#f5f5f5'})=0A=
        setTimeout(function(){=0A=
            parobj.css({'background':'#fff'})=0A=
        },200)=0A=
    },=0A=
    ScrollTop: =
function(){//=E5=90=91=E4=B8=8A=E6=BB=9A=E5=8A=A8=E6=95=88=E6=9E=9C=0A=
        var _this =3D this,a =3D $('.add-new-publish'),b =3D ""=0A=
        a.click(function(){=0A=
            b =3D $(this).parents('.commentList-box')=0A=
            _this.ScrollTopFn(b)=0A=
            _this.SetReplyCon(b.find('.answer'))=0A=
        })=0A=
    },=0A=
    ScrollTopFn:function(b){=0A=
        if(b.length=3D=3D0)return false=0A=
        var scrollTop =3D b.offset().top=0A=
        if(scrollTop > 0){=0A=
            =
$("html,body").animate({scrollTop:scrollTop},'slow',function(){$(this).st=
op(true,true);});=0A=
        }=0A=
    },=0A=
    Ahref: function(obj,id){=0A=
        $('body').on('click', obj, function(){=0A=
            if($(id) !=3D 'undefined'){=0A=
                var scrollTop =3D $(id).offset().top=0A=
                scrollTop>0?$(window).scrollTop(scrollTop):""=0A=
            }=0A=
        })=0A=
    },=0A=
    AddAnimate: function(obj){=0A=
        obj.append('<font =
class=3D"jia2">+1</font>').find('font').animate({top:'-16px',right:'4px',=
opacity:'0'},300,'swing',function(){$('.jia2').fadeOut(500)})=0A=
    },=0A=
    AddClass: function(obj,sClass){=0A=
        obj.addClass(sClass)=0A=
    },=0A=
    RemoveClass: function(obj,sClass){=0A=
        obj.removeClass(sClass)=0A=
    }=0A=
}=0A=
var Introduce =3D new IntroduceFn()=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/details_new.js?v=1.1.1

(function(){=0A=
	var checkdata, checkResult;=0A=
	var Appreciate =3D function(){=0A=
	  	this.init()=0A=
	}=0A=
	Appreciate.prototype.init =3D function(){=0A=
		this.pointerClick()=0A=
	}=0A=
    Appreciate.prototype.setHTML =3D function() {=0A=
    	var text =3D '<div class=3D"mask"><div class=3D"appreciate-nbox"><p =
class=3D"close"></p><div =
class=3D"appreciate-nbox-1"><h2>=E6=9C=89=E4=BD=A0=E8=B5=9E=E8=B5=8F=E6=94=
=AF=E6=8C=81=EF=BC=8C=E5=8D=9A=E5=AE=A2=E5=8E=9F=E5=88=9B=E4=BC=9A=E6=9B=B4=
=E7=BE=8E=E5=A5=BD</h2>'=0A=
			text +=3D '<ul =
class=3D"list"><li><span>1</span>=E5=85=83</li><li><span>2</span>=E5=85=83=
</li><li =
class=3D"on"><span>5</span>=E5=85=83</li><br><li><span>10</span>=E5=85=83=
</li><li><span>20</span>=E5=85=83</li><li><span>50</span>=E5=85=83</li><d=
iv class=3D"clear"></div></ul>'=0A=
			text +=3D '<input class=3D"place_number" type=3D"text" =
value=3D"=E6=89=8B=E5=8A=A8=E8=BE=93=E5=85=A5"><p =
class=3D"msg">=E6=82=A8=E9=9C=80=E6=94=AF=E4=BB=98<font =
class=3D"show-money">5</font>=E5=85=83=EF=BC=8C=E6=84=9F=E8=B0=A2=E6=82=A8=
=E7=9A=84=E8=B5=9E=E8=B5=8F</p><p =
class=3D"appreciate-ajax">=E5=8E=BB=E6=94=AF=E4=BB=98</p></div>'=0A=
			text +=3D '<div =
class=3D"appreciate-nbox-2"><h3>=E5=BE=AE=E4=BF=A1/=E6=94=AF=E4=BB=98=E5=AE=
=9D=E6=89=AB=E7=A0=81=E4=BB=98=E6=AC=BE</h3><img src=3D""><p =
class=3D"error-1 =
error-msg">=E8=B5=9E=E8=B5=8F=E9=87=91=E9=A2=9D<em>=EF=BF=A50</em></p><p =
class=3D"error-2 error-msg"></p><p class=3D"error-3 =
error-msg"><i></i>=E6=94=AF=E4=BB=98=E6=88=90=E5=8A=9F</p></div>'=0A=
			text +=3D '</div></div>'=0A=
		$('body').append(text)=0A=
    }=0A=
	Appreciate.prototype.checkMoney =3D function() {=0A=
		var value =3D $('.show-money').text()=0A=
		$('.appreciate-nbox-1 .error-msg').remove();=0A=
		var re =3D /^[0-9]+$/ ;=0A=
		if(value =3D=3D '' || value =3D=3D 0) {=0A=
			$('.appreciate-ajax').before('<p =
class=3D"error-msg">=E8=AF=B7=E9=80=89=E6=8B=A9=E8=B5=9E=E8=B5=8F=E9=87=91=
=E9=A2=9D=E6=88=96=E8=BE=93=E5=85=A5=E4=BB=BB=E6=84=8F=E9=87=91=E9=A2=9D<=
/p>');=0A=
			return false;=0A=
		} else if(!re.test(value)) {=0A=
			$('.appreciate-ajax').before('<p =
class=3D"error-msg">=E8=AF=B7=E9=80=89=E6=8B=A9=E8=B5=9E=E8=B5=8F=E9=87=91=
=E9=A2=9D=E6=88=96=E8=BE=93=E5=85=A5=E4=BB=BB=E6=84=8F=E9=87=91=E9=A2=9D<=
/p>')=0A=
			return false;=0A=
		} else if(value < 0 || value > 200) {=0A=
			$('.appreciate-ajax').before('<p =
class=3D"error-msg">=E6=9C=80=E5=A4=9A=E5=8F=AF=E8=B5=9E=E8=B5=8F200=E5=93=
=A6</p>')=0A=
			return false;=0A=
		} else {=0A=
			return true;=0A=
		}=0A=
	}=0A=
=0A=
	Appreciate.prototype.getQrcode =3D function() {=0A=
		var me =3D this=0A=
			money =3D parseInt($('.show-money').text());=0A=
		$('.appreciate-nbox-2 .error-1 em').html('=EF=BF=A5'+money);=0A=
		$('.appreciate-nbox-2 .error-msg').hide();=0A=
	    $('.appreciate-nbox-2 .error-1').show();=0A=
		$.ajax({=0A=
	        url: blog_url + 'qr/get-qr-url',=0A=
	        data: {'id':blog_id, 'type':2, 'm':money},=0A=
	        type: 'POST',=0A=
	        dataType: 'JSON',=0A=
	        success: function(e){=0A=
	            if(e.status =3D=3D 1){=0A=
	            	var qr_url =3D e.data.url;=0A=
	            	$('.appreciate-nbox-2 img').attr('src', qr_url);=0A=
	            	checkdata =3D e.data.checkdata=0A=
					checkResult =3D setInterval(me.checkPayResult, 5000)=0A=
	            } else {=0A=
	                new AutoBox({content:'<div style=3D"padding: 0 =
40px;">'+e.msg+'</div>',mask:"#000",autoClose:3})=0A=
	            }=0A=
	        }=0A=
	    })=0A=
	}=0A=
	Appreciate.prototype.stopCheckPay =3D function() {=0A=
		var me =3D this=0A=
		checkResult=3Dwindow.clearInterval(checkResult);=0A=
	}=0A=
	Appreciate.prototype.checkPayResult =3D function() {=0A=
		var me =3D this=0A=
		if(!checkdata) {return false;}=0A=
		$.ajax({=0A=
	        url: blog_url + 'pay/check-buy',=0A=
	        data:{checkdata: checkdata},=0A=
	        type: 'POST',=0A=
	        dataType: 'JSON',=0A=
	        success: function(e){=0A=
	            if(e.status =3D=3D 1){=0A=
	            	Appreciate.stopCheckPay()=0A=
	            	$('.appreciate-nbox-2 .error-msg').hide();=0A=
	            	$('.appreciate-nbox-2 .error-3').show();=0A=
	            } else if(e.status =3D=3D 2) {=0A=
	            } else if(e.status =3D=3D -1) {=0A=
	            	Appreciate.stopCheckPay();=0A=
	            	$('.appreciate-nbox-2 .error-msg').hide();=0A=
	            	$('.appreciate-nbox-2 =
.error-2').html('<i></i>=E4=BA=8C=E7=BB=B4=E7=A0=81=E5=A4=B1=E6=95=88<br>=
<span>=E4=BA=8C=E7=BB=B4=E7=A0=81=E5=A4=B1=E6=95=88=EF=BC=8C=E8=AF=B7=E7=82=
=B9=E5=87=BB=E4=BA=8C=E7=BB=B4=E7=A0=81=E5=88=B7=E6=96=B0</span>').show()=
;=0A=
	            } else if(e.status =3D=3D 0) {=0A=
	            	Appreciate.stopCheckPay();=0A=
	            	$('.appreciate-nbox-2 .error-msg').hide();=0A=
	            	$('.appreciate-nbox-2 =
.error-2').html('<i></i>'+e.msg).show();=0A=
	            } else {=0A=
	            	$('.appreciate-nbox-2 .error-msg').hide();=0A=
	            	$('.appreciate-nbox-2 .error-1').show();=0A=
	            }=0A=
	        }=0A=
	    })=0A=
	}=0A=
	Appreciate.prototype.isShow1 =3D function (obj,objpar,sClass){=0A=
		if($(obj).hasClass(sClass)){=0A=
			$(objpar).css('visibility','hidden')=0A=
			$(obj).removeClass(sClass)=0A=
		}else{=0A=
			$(objpar).css('visibility','visible')=0A=
			$(obj).addClass(sClass)=0A=
		}=0A=
	}=0A=
	Appreciate.prototype.isShow2 =3D function (obj,objpar,sClass){=0A=
		if($(obj).hasClass(sClass)){=0A=
			$(objpar).removeClass(sClass)=0A=
			$(obj).removeClass(sClass)=0A=
		}else{=0A=
			$(objpar).removeClass(sClass)=0A=
			$(obj).addClass(sClass)=0A=
		}=0A=
	}=0A=
	Appreciate.prototype.setPos =3D function (){=0A=
		var me =3D this=0A=
			me.setHTML()=0A=
			$('.mask').show()=0A=
		var width =3D $('.appreciate-nbox').width()=0A=
			height =3D $('.appreciate-nbox').height()=0A=
		=
$('.appreciate-nbox').css({'margin-left':-width/2+'px','margin-top':-heig=
ht/2+'px' })=0A=
	}=0A=
	Appreciate.prototype.placeNumberCheck =3D function() {=0A=
	    var place_number =3D $(".place_number").val();=0A=
	    var str =3D place_number.replace(/[^\d]/g, "");=0A=
	    var maxlen =3D 3;=0A=
	    if (str.length < maxlen) {=0A=
	        maxlen =3D str.length;=0A=
	    }=0A=
	    var temp =3D "";=0A=
	    for (var i =3D 0; i < maxlen; i++) {=0A=
	        temp =3D temp + str.substring(i, i + 1);=0A=
	        if (i !=3D 0 && (i + 1) % 4 =3D=3D 0 && i !=3D 11) {=0A=
	            temp =3D temp + " ";=0A=
	        }=0A=
	    }=0A=
	    $(".place_number").val(temp);=0A=
	}=0A=
	Appreciate.prototype.pointerClick =3D function(){=0A=
		var me =3D this=0A=
		$('.appreciate-end').click(function(){=0A=
			if(isLogin !=3D 1){Login()}else{=0A=
				new AutoBox({content:'<div style=3D"padding: 0 40px;margin-top: =
-20px;">=E8=87=AA=E5=B7=B1=E4=B8=8D=E8=83=BD=E8=B5=9E=E8=B5=8F=E8=87=AA=E5=
=B7=B1=E7=9A=84=E6=96=87=E7=AB=A0</div>',mask:"#000",autoClose:3})=0A=
			}=0A=
		})=0A=
		$('.appreciate-open').click(function() {=0A=
			if(isLogin !=3D 1){Login()}else{me.setPos()}=0A=
		})=0A=
		$('.Blog-Right .catalog').click(function(){me.isShow1('.catalog', =
'.directoryBox', 'on')})=0A=
		$('body').on('keyup', '.place_number', function() {=0A=
	        me.placeNumberCheck()=0A=
	    })=0A=
		$('body').on('focus','.place_number',function() {=0A=
			$('.appreciate-nbox-1 li').removeClass('on')=0A=
			$('.yuan').remove()=0A=
			if($(this).val() =3D=3D "=E6=89=8B=E5=8A=A8=E8=BE=93=E5=85=A5"){=0A=
				$(this).val('').after('<b class=3D"yuan">=E5=85=83</b>')=0A=
				$('.show-money').text('0')=0A=
			}else{=0A=
				$('.show-money').text($(this).val())=0A=
			}=0A=
		})=0A=
		$('body').on('blur','.place_number',function() {=0A=
			if($(this).val() =3D=3D "=E6=89=8B=E5=8A=A8=E8=BE=93=E5=85=A5" || =
$(this).val() =3D=3D "" ){=0A=
				$(this).val("=E6=89=8B=E5=8A=A8=E8=BE=93=E5=85=A5")=0A=
				$('.yuan').remove()=0A=
				$('.show-money').text('0')=0A=
			}else{=0A=
				$('.show-money').text($(this).val())=0A=
			}=0A=
			return me.checkMoney();=0A=
		})=0A=
		$('body').on('change','.place_number',function() {=0A=
			$('.appreciate-nbox-1 li').removeClass('on')=0A=
			return me.checkMoney();=0A=
		})=0A=
		$('body').on('click','.appreciate-nbox-2 =
img',function(){me.getQrcode();})=0A=
		$('body').on('click','.appreciate-nbox .close',function() {=0A=
			$('.mask').remove();=0A=
			me.stopCheckPay();//=E5=81=9C=E6=AD=A2=E8=AE=A1=E6=97=B6=E5=99=A8=0A=
		})=0A=
		$('body').on('click','.appreciate-nbox-1 li',function() {=0A=
			me.isShow2($(this), '.appreciate-nbox-1 li', 'on')=0A=
			var text =3D $('.appreciate-nbox-1 li.on span').text()=0A=
			if(text =3D=3D ""){=0A=
				$('.show-money').text(0);=0A=
				$('.appreciate-ajax').before('<p =
class=3D"error-msg">=E8=AF=B7=E9=80=89=E6=8B=A9=E8=B5=9E=E8=B5=8F=E9=87=91=
=E9=A2=9D=E6=88=96=E8=BE=93=E5=85=A5=E4=BB=BB=E6=84=8F=E9=87=91=E9=A2=9D<=
/p>');=0A=
			}else{=0A=
				$('.place_number').val('=E6=89=8B=E5=8A=A8=E8=BE=93=E5=85=A5')=0A=
				$('.show-money').text(text)	=0A=
				$('.appreciate-nbox-1 .error-msg').remove();=0A=
			}=0A=
		})=0A=
		$('body').on('click','.appreciate-ajax',function() {=0A=
			if(!me.checkMoney()) {return false;}=0A=
			me.stopCheckPay();=0A=
			me.getQrcode();=0A=
			$('.appreciate-nbox-1').hide();=0A=
			$('.appreciate-nbox-2').show();=0A=
		})=0A=
	}=0A=
	var Appreciate =3D new Appreciate();=0A=
	lowest();=0A=
	$(window).scroll(function(){lowest()})=0A=
    function lowest(){=0A=
    	if($(window).scrollTop()-30+$(window).height() > =
$('.more-list').offset().top){ =0A=
	    	$('.the-lowest-bg').hide()=0A=
	    }else{=0A=
	    	$('.the-lowest-bg').show()=0A=
	    }=0A=
    }=0A=
	//=E7=9B=AE=E5=BD=95=0A=
	function getLv(n){return parseInt(n.replace('H',''))}=0A=
	var h1_num =3D 1;=0A=
	var directory_con =3D $('<div class=3D"directoryBox"><span =
class=3D"top-icon"></span><div class=3D"list directory"><ul =
class=3D"directory-list"></ul></div><span =
class=3D"bot-icon"></span></div>');=0A=
	var list =3D directory_con.find('ul')=0A=
	var ts =3D []=0A=
	var jts =3D $(".artical-content").find('h1,h2,h3')=0A=
	  jts =3D jts?jts:''=0A=
	if(jts.length>0){=0A=
		$('.artical-Right').append(directory_con);=0A=
	}else{=0A=
		$('.catalog').hide()=0A=
		//return false;=0A=
	}=0A=
	jts.each(function(i,e){=0A=
		ts.push(e)=0A=
	})=0A=
	var sort =3D [0,1,1,1]=0A=
	$.each(ts,function(i,e){=0A=
		var Lv =3D 1=0A=
		var item =3D $('<li>'+$(e).text()+'</li>').click(function(){=0A=
		  $(window).scrollTop($(e).offset().top)=0A=
		  $(this).addClass('on').siblings().removeClass('on')=0A=
		})=0A=
		list.append(item)=0A=
		if(item.prev().hasClass('lv2')){Lv++;};=0A=
		if(ts[i-1]&&getLv($(ts[i-1])[0].tagName)<getLv(e.tagName)){Lv++;};=0A=
		if(e.tagName=3D=3D'H1'){Lv=3D1;}=0A=
		if(e.tagName=3D=3D'H3'){Lv=3D3;}=0A=
		if(ts[i-1]&&getLv($(ts[i-1])[0].tagName)>getLv(e.tagName)){Lv=3D1;};=0A=
		item.addClass('lv'+Lv)=0A=
		if(e.tagName=3D=3D'H1' =3D=3D 1) {=0A=
			item.html('=E7=AC=AC'+h1_num+'=E7=AB=A0&nbsp;&nbsp;'+$(e).text())=0A=
			h1_num++=0A=
		}=0A=
	})=0A=
	// =E6=BB=91=E5=9D=97=0A=
	var $sliderBlock =3D $('<div class=3D"arrow"></div>');=0A=
		list.append($sliderBlock)=0A=
    var timer =3D false;=0A=
    $(window).scroll(function(){=0A=
        jts.each(function(i,e){=0A=
            if($(window).scrollTop()-30 < $(e).offset().top){=0A=
                var ch =3D list.children().eq(i)=0A=
                ch.addClass('on').siblings().removeClass('on')=0A=
            	if(timer){clearTimeout(timer)}=0A=
            	timer =3D setTimeout(function(){=0A=
            		// =E6=BB=91=E5=9D=97=E4=BD=8D=E7=BD=AE=E8=AE=A1=E7=AE=97=0A=
            		var chTop =3D ch.position().top;=0A=
            		// =
=E7=AC=AC=E4=B8=80=E4=B8=AA=E6=B2=A1=E6=9C=89=E4=B8=8A=E8=BE=B9=E8=B7=9D=EF=
=BC=8C=E5=85=B6=E4=BB=96=E7=9A=84=E5=8A=A0=E4=B8=8A20=E4=B8=8A=E8=BE=B9=E8=
=B7=9D=0A=
            		if (chTop !=3D 0) {=0A=
            			chTop +=3D 18=0A=
            		}=0A=
            		$sliderBlock.animate({top:chTop}, 100)=0A=
            		// =E6=BB=91=E5=9D=97=E4=BD=8D=E7=BD=AE=E7=BB=93=E7=AE=97=0A=
            		$(".directory").animate({=0A=
            			scrollTop: (ch.position().top-directory_con.height()/2)=0A=
            		})=0A=
            	},40)=0A=
                return false;=0A=
            }=0A=
        })=0A=
        if($(window).scrollTop() < 1200){=0A=
    		$('.catalog, .scrollTop').hide()=0A=
    	}else{=0A=
    		if($('.directory-list').html() =3D=3D null){=0A=
    			$('.scrollTop').css('display','block')=0A=
    			$('.catalog').hide()=0A=
    		}else{=0A=
    			$('.catalog, .scrollTop').css('display','block')=0A=
    		}=0A=
    	}=0A=
    })=0A=
})();=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/copy.js?v=1.0.0.0

/*if(!$.browser.msie){=0A=
	document.oncopy =3D addLink;=0A=
}=0A=
window.onload =3D function(){=0A=
    this.focus();=0A=
}=0A=
function addLink() {=0A=
    var body_element =3D document.getElementsByTagName('body')[0];=0A=
    var selection;=0A=
    selection =3D window.getSelection();=0A=
    var pagelink =3D '<br/><br/>=E4=BD=9C=E8=80=85=EF=BC=9A<a =
href=3D"'+nicknameurl+'" class=3D"name =
fl">'+nickname+'</a><br/>=E9=93=BE=E6=8E=A5=EF=BC=9A<a =
href=3D"'+myself+'">'+myself+'</a><br/>=E6=9D=A5=E6=BA=90=EF=BC=9A51CTO=E5=
=8D=9A=E5=AE=A2<br/>=E8=91=97=E4=BD=9C=E6=9D=83=E5=BD=92=E4=BD=9C=E8=80=85=
=E6=89=80=E6=9C=89=E3=80=82=E5=95=86=E4=B8=9A=E8=BD=AC=E8=BD=BD=E8=AF=B7=E8=
=81=94=E7=B3=BB=E4=BD=9C=E8=80=85=E8=8E=B7=E5=BE=97=E6=8E=88=E6=9D=83=EF=BC=
=8C=E9=9D=9E=E5=95=86=E4=B8=9A=E8=BD=AC=E8=BD=BD=E8=AF=B7=E6=B3=A8=E6=98=8E=
=E5=87=BA=E5=A4=84=E3=80=82'=0A=
    var copytext =3D selection + pagelink;=0A=
    var newdiv =3D document.createElement('div');=0A=
    newdiv.style.position=3D'absolute';=0A=
    newdiv.style.left=3D'-99999px';=0A=
    body_element.appendChild(newdiv);=0A=
    newdiv.innerHTML =3D copytext;=0A=
    selection.selectAllChildren(newdiv);=0A=
    window.setTimeout(function() {=0A=
        body_element.removeChild(newdiv);=0A=
    },0);=0A=
 =0A=
}*/=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/pvlog.js

var url =3D window.location.href;=0A=
var referer =3D document.referrer;=0A=
$.get(BLOG_URL+'pv-log',{'url':url,'referer':referer},function(e){=0A=
},'json')
------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://logs.51cto.com/rizhi/count/count.js

var _ourplusCount =3D "https://logs.51cto.com/rizhi2";
var _debug;
var _ourplusType;
var _ourplusShow;
var _ourplusShowStr=3D'';
var _ourplusIframe;

var _ourplusCountPage =3D _ourplusCount + "/count/count.php";
if( _ourplusIframe =3D=3D true )
{
	var _ourplusPageurl =3D escape(location.href);
	var _ourplusReferer =3D escape(document.referrer);
}
else
{
	// var _ourplusPageurl =3D escape(top.location.href);
	// var _ourplusReferer =3D escape(top.document.referrer);
	var _ourplusPageurl =3D escape(location.href);
	var _ourplusReferer =3D escape(document.referrer);
}



var _ourplusLanguage =3D =
(navigator.systemLanguage?navigator.systemLanguage:navigator.language);
var _ourplusColor =3D screen.colorDepth;
var _ourplusScreenSize =3D screen.width + '*' + screen.height;
var _ourplusCharset =3D document.charset


var _ourplusFirstTime;
var _ourplusLastTime;
_ourplusFirstTime =3D _ourplusReadCookie( '_ourplusFirstTime' );
if( _ourplusFirstTime =3D=3D '' )
{
	_ourplusFirstTime =3D getTime();
	_ourplusLastTime =3D _ourplusFirstTime;
	_ourplusWriteCookie( '_ourplusFirstTime', _ourplusFirstTime, 10000 );
}
else
{
	_ourplusLastTime =3D getTime();
}

if( _ourplusType =3D=3D null )
{
	_ourplusType =3D 1;
}

_ourplusReturnCount =3D _ourplusReadCookie( '_ourplusReturnCount' );
_ourplusReturnCount =3D _ourplusReturnCount =3D=3D '' ? 0 : =
_ourplusReturnCount;

_ourplusReturnTime =3D _ourplusReadCookie( '_ourplusReturnTime' );
if( _ourplusReturnTime =3D=3D '' )
{
	_ourplusReturnTime =3D getTime();
	_ourplusWriteCookie( '_ourplusReturnTime', _ourplusReturnTime, 10000 );
}

temp =3D _ourplusReturnTime.split( '-' )
_ourplusReturnTimeDate =3D new Date(temp[0], temp[1]-1, temp[2], =
temp[3], temp[4], temp[5] );
_ourplusNowTimeDate =3D new Date();

if( _ourplusNowTimeDate - _ourplusReturnTimeDate >=3D 43200000 )
{
	_ourplusWriteCookie( '_ourplusReturnCount', ++_ourplusReturnCount, =
10000 );
	_ourplusWriteCookie( '_ourplusReturnTime', getTime(), 10000 );
}
else
{
	_ourplusReturnCount =3D null;
}


if( _ourplusShow !=3D null && _ourplusShow.length > 0 )
{
	var _ourplusShowStr =3D '';
	for( i =3D 0; i < _ourplusShow.length; i ++ )
	{
		_ourplusShowStr +=3D "&show[]=3D" + _ourplusShow[i];
	}
}
else
{
	var _ourplusShowStr =3D "";
}



var _ourplusCountUrl =3D _ourplusCountPage + '?'
+ '&counturl=3D' + _ourplusCount
+ '&pageurl=3D' + _ourplusPageurl
+ '&referer=3D' + _ourplusReferer
+ '&language=3D' + _ourplusLanguage
+ '&color=3D' + _ourplusColor
+ '&screensize=3D' + _ourplusScreenSize
+ '&debug=3D' + _debug
+ '&firsttime=3D' + _ourplusFirstTime
+ '&lasttime=3D' + _ourplusLastTime
+ '&type=3D' + _ourplusType
+ '&charset=3D' + _ourplusCharset
+ _ourplusShowStr
+ '&timezone=3D' + (new Date()).getTimezoneOffset()/60;

if( _ourplusReturnCount !=3D null )
{
	_ourplusCountUrl +=3D '&return1=3D' + _ourplusReturnCount;
}

var auth =3D document.cookie;
var authtmp =3D auth.split(";"); =20
for (i=3D0;i<authtmp.length ;i++ )   =20
{   =20
    var authtmp2 =3D authtmp[i].split("=3D");
    var authtmp3 =3D authtmp2[0].replace(/(^\s*)|(\s*$)/g, "");
    if(authtmp3 =3D=3D "pub_sauth1")
    {
    	var auth2 =3D authtmp2[1];
    	break;
    }=20
    authtmp2 =3D null;
}=20

if(auth2)
{
	var _ourplusCountUrl2 =3D _ourplusCount + "/count/countuser2.php"+ =
'?auth=3D' + auth2+ '&pageurl=3D' + _ourplusPageurl;
}

if( _debug )
{
	document.write(_ourplusCountUrl);
	document.write("<iframe src=3D'" + _ourplusCountUrl + "' width=3D2 =
height=3D2></iframe>");
	if(auth2)
	{
		document.write("<iframe src=3D'" + _ourplusCountUrl2 + "' width=3D2 =
height=3D2></iframe>");	=09
	}
}
else
{
	document.write("<script src=3D'" + _ourplusCountUrl + "'></script>");
	if(auth2)
	{
		document.write("<script src=3D'" + _ourplusCountUrl2 + "'></script>");	=
=09
	}
}



//Functions

function getTime()=20
{=20
	now =3D new Date();=20
	year=3Dnow.getYear();
	Month=3Dnow.getMonth()+1;
	Day=3Dnow.getDate();
	Hour=3Dnow.getHours();=20
	Minute=3Dnow.getMinutes();=20
	Second=3Dnow.getSeconds();=20
	return year+"-"+Month+"-"+Day+"-"+Hour+"-"+Minute+"-"+Second;
}=20


function _ourplusReadCookie(name)
{
  var cookieValue =3D "";
  var search =3D name + "=3D";
  if(document.cookie.length > 0)
  {=20
    offset =3D document.cookie.indexOf(search);
    if (offset !=3D -1)
    {=20
      offset +=3D search.length;
      end =3D document.cookie.indexOf(";", offset);
      if (end =3D=3D -1) end =3D document.cookie.length;
      cookieValue =3D unescape(document.cookie.substring(offset, end))
    }
  }
  return cookieValue;
}

function _ourplusWriteCookie(name, value, hours)
{
  var expire =3D "";
  if(hours !=3D null)
  {
    expire =3D new Date((new Date()).getTime() + hours * 3600000);
    expire =3D "; expires=3D" + expire.toGMTString();
  }
  document.cookie =3D name + "=3D" + escape(value) + expire + =
"domain=3D;" + "path=3D/;";
}

 //document.writeln("<script =
src=3D\"http://www.51cto.com/images/homepage/scroll.js\"></script>");

/*************************=CA=FD=BE=DD=B7=D6=CE=F6 =
begin**********************************/

/*
   MD5()
   output: MD5 hash (as Hex String)
*/

var faultylabs =3D {};

faultylabs.MD5 =3D function(data) {

    // for test/debug
    function fflog(msg) {
        try {
            console.log(msg);
        } catch(e) {}
    }

    // convert number to (unsigned) 32 bit hex, zero filled string
    function to_zerofilled_hex(n) {
        var t1 =3D (n >>> 24).toString(16);
        var t2 =3D (n & 0x00FFFFFF).toString(16);
        return "00".substr(0, 2 - t1.length) + t1 +
        "000000".substr(0, 6 - t2.length) + t2;
    }

    // convert array of chars to array of bytes (note: Unicode not =
supported)
    function chars_to_bytes(ac) {
        var retval =3D [];
        for (var i =3D 0; i < ac.length; i++) {
            retval =3D retval.concat(str_to_bytes(ac[i]));
        }
        return retval;
    }


    // convert a 64 bit unsigned number to array of bytes. Little endian
    function int64_to_bytes(num) {
        var retval =3D [];
        for (var i =3D 0; i < 8; i++) {
            retval.push(num & 0xFF);
            num =3D num >>> 8;
        }
        return retval;
    }

    //  32 bit left-rotation
    function rol(num, places) {
        return ((num << places) & 0xFFFFFFFF) | (num >>> (32 - places));
    }

    // The 4 MD5 functions
    function fF(b, c, d) {
        return (b & c) | (~b & d);
    }

    function fG(b, c, d) {
        return (d & b) | (~d & c);
    }

    function fH(b, c, d) {
        return b ^ c ^ d;
    }

    function fI(b, c, d) {
        return c ^ (b | ~d);
    }

    // pick 4 bytes at specified offset. Little-endian is assumed
    function bytes_to_int32(arr, off) {
        return (arr[off + 3] << 24) | (arr[off + 2] << 16) | (arr[off + =
1] << 8) | (arr[off]);
    }

	/*
	Conver string to array of bytes in UTF-8 encoding
	See:=20
	=
http://www.dangrossman.info/2007/05/25/handling-utf-8-in-javascript-php-a=
nd-non-utf8-databases/
	=
http://stackoverflow.com/questions/1240408/reading-bytes-from-a-javascrip=
t-string
	How about a String.getBytes(<ENCODING>) for Javascript!? Isn't it time =
to add it?
	*/
	function str_to_bytes(str) {
		// alert("got " + str.length + " chars")
	    var retval =3D [ ];
	    for (var i =3D 0; i < str.length; i++)
	        if (str.charCodeAt(i) <=3D 0x7F) {
	            retval.push(str.charCodeAt(i));
	        } else {
	            var tmp =3D =
encodeURIComponent(str.charAt(i)).substr(1).split('%');
	            for (var j =3D 0; j < tmp.length; j++) {
	                retval.push(parseInt(tmp[j], 0x10));
				}
	        }
	    return retval;
	};


=09

    // convert the 4 32-bit buffers to a 128 bit hex string. =
(Little-endian is assumed)
    function int128le_to_hex(a, b, c, d) {
        var ra =3D "";
        var t =3D 0;
        var ta =3D 0;
        for (var i =3D 3; i >=3D 0; i--) {
            ta =3D arguments[i];
            t =3D (ta & 0xFF);
            ta =3D ta >>> 8;
            t =3D t << 8;
            t =3D t | (ta & 0xFF);
            ta =3D ta >>> 8;
            t =3D t << 8;
            t =3D t | (ta & 0xFF);
            ta =3D ta >>> 8;
            t =3D t << 8;
            t =3D t | ta;
            ra =3D ra + to_zerofilled_hex(t);
        }
        return ra;
    }

    // check input data type and perform conversions if needed
    var databytes =3D null;
    // String
    if (typeof data =3D=3D 'string') {
        // convert string to array bytes
        databytes =3D str_to_bytes(data);
    } else if (data.constructor =3D=3D Array) {
        if (data.length =3D=3D=3D 0) {
            // if it's empty, just assume array of bytes
            databytes =3D data;
        } else if (typeof data[0] =3D=3D 'string') {
            databytes =3D chars_to_bytes(data);
        } else if (typeof data[0] =3D=3D 'number') {
            databytes =3D data;
        } else {
            fflog("input data type mismatch");
            return null;
        }
    } else {
        fflog("input data type mismatch");
        return null;
    }

    // save original length
    var org_len =3D databytes.length;

    // first append the "1" + 7x "0"
    databytes.push(0x80);

    // determine required amount of padding
    var tail =3D databytes.length % 64;
    // no room for msg length?
    if (tail > 56) {
        // pad to next 512 bit block
        for (var i =3D 0; i < (64 - tail); i++) {
            databytes.push(0x0);
        }
        tail =3D databytes.length % 64;
    }
    for (i =3D 0; i < (56 - tail); i++) {
        databytes.push(0x0);
    }
    // message length in bits mod 512 should now be 448
    // append 64 bit, little-endian original msg length (in *bits*!)
    databytes =3D databytes.concat(int64_to_bytes(org_len * 8));

    // initialize 4x32 bit state
    var h0 =3D 0x67452301;
    var h1 =3D 0xEFCDAB89;
    var h2 =3D 0x98BADCFE;
    var h3 =3D 0x10325476;

    // temp buffers
    var a =3D 0,
    b =3D 0,
    c =3D 0,
    d =3D 0;


	function _add(n1, n2) {
		return 0x0FFFFFFFF & (n1 + n2)
	}
=09
    // function update partial state for each run
    var updateRun =3D function(nf, sin32, dw32, b32) {
        var temp =3D d;
        d =3D c;
        c =3D b;
        //b =3D b + rol(a + (nf + (sin32 + dw32)), b32);
		b =3D _add(b,=20
			rol(=20
				_add(a,=20
					_add(nf, _add(sin32, dw32))
				), b32
			)
		);
        a =3D temp;
    };


    // Digest message
    for (i =3D 0; i < databytes.length / 64; i++) {
        // initialize run
        a =3D h0;
        b =3D h1;
        c =3D h2;
        d =3D h3;

        var ptr =3D i * 64;

        // do 64 runs
        updateRun(fF(b, c, d), 0xd76aa478, bytes_to_int32(databytes, =
ptr), 7);
        updateRun(fF(b, c, d), 0xe8c7b756, bytes_to_int32(databytes, ptr =
+ 4), 12);
        updateRun(fF(b, c, d), 0x242070db, bytes_to_int32(databytes, ptr =
+ 8), 17);
        updateRun(fF(b, c, d), 0xc1bdceee, bytes_to_int32(databytes, ptr =
+ 12), 22);
        updateRun(fF(b, c, d), 0xf57c0faf, bytes_to_int32(databytes, ptr =
+ 16), 7);
        updateRun(fF(b, c, d), 0x4787c62a, bytes_to_int32(databytes, ptr =
+ 20), 12);
        updateRun(fF(b, c, d), 0xa8304613, bytes_to_int32(databytes, ptr =
+ 24), 17);
        updateRun(fF(b, c, d), 0xfd469501, bytes_to_int32(databytes, ptr =
+ 28), 22);
        updateRun(fF(b, c, d), 0x698098d8, bytes_to_int32(databytes, ptr =
+ 32), 7);
        updateRun(fF(b, c, d), 0x8b44f7af, bytes_to_int32(databytes, ptr =
+ 36), 12);
        updateRun(fF(b, c, d), 0xffff5bb1, bytes_to_int32(databytes, ptr =
+ 40), 17);
        updateRun(fF(b, c, d), 0x895cd7be, bytes_to_int32(databytes, ptr =
+ 44), 22);
        updateRun(fF(b, c, d), 0x6b901122, bytes_to_int32(databytes, ptr =
+ 48), 7);
        updateRun(fF(b, c, d), 0xfd987193, bytes_to_int32(databytes, ptr =
+ 52), 12);
        updateRun(fF(b, c, d), 0xa679438e, bytes_to_int32(databytes, ptr =
+ 56), 17);
        updateRun(fF(b, c, d), 0x49b40821, bytes_to_int32(databytes, ptr =
+ 60), 22);
        updateRun(fG(b, c, d), 0xf61e2562, bytes_to_int32(databytes, ptr =
+ 4), 5);
        updateRun(fG(b, c, d), 0xc040b340, bytes_to_int32(databytes, ptr =
+ 24), 9);
        updateRun(fG(b, c, d), 0x265e5a51, bytes_to_int32(databytes, ptr =
+ 44), 14);
        updateRun(fG(b, c, d), 0xe9b6c7aa, bytes_to_int32(databytes, =
ptr), 20);
        updateRun(fG(b, c, d), 0xd62f105d, bytes_to_int32(databytes, ptr =
+ 20), 5);
        updateRun(fG(b, c, d), 0x2441453, bytes_to_int32(databytes, ptr =
+ 40), 9);
        updateRun(fG(b, c, d), 0xd8a1e681, bytes_to_int32(databytes, ptr =
+ 60), 14);
        updateRun(fG(b, c, d), 0xe7d3fbc8, bytes_to_int32(databytes, ptr =
+ 16), 20);
        updateRun(fG(b, c, d), 0x21e1cde6, bytes_to_int32(databytes, ptr =
+ 36), 5);
        updateRun(fG(b, c, d), 0xc33707d6, bytes_to_int32(databytes, ptr =
+ 56), 9);
        updateRun(fG(b, c, d), 0xf4d50d87, bytes_to_int32(databytes, ptr =
+ 12), 14);
        updateRun(fG(b, c, d), 0x455a14ed, bytes_to_int32(databytes, ptr =
+ 32), 20);
        updateRun(fG(b, c, d), 0xa9e3e905, bytes_to_int32(databytes, ptr =
+ 52), 5);
        updateRun(fG(b, c, d), 0xfcefa3f8, bytes_to_int32(databytes, ptr =
+ 8), 9);
        updateRun(fG(b, c, d), 0x676f02d9, bytes_to_int32(databytes, ptr =
+ 28), 14);
        updateRun(fG(b, c, d), 0x8d2a4c8a, bytes_to_int32(databytes, ptr =
+ 48), 20);
        updateRun(fH(b, c, d), 0xfffa3942, bytes_to_int32(databytes, ptr =
+ 20), 4);
        updateRun(fH(b, c, d), 0x8771f681, bytes_to_int32(databytes, ptr =
+ 32), 11);
        updateRun(fH(b, c, d), 0x6d9d6122, bytes_to_int32(databytes, ptr =
+ 44), 16);
        updateRun(fH(b, c, d), 0xfde5380c, bytes_to_int32(databytes, ptr =
+ 56), 23);
        updateRun(fH(b, c, d), 0xa4beea44, bytes_to_int32(databytes, ptr =
+ 4), 4);
        updateRun(fH(b, c, d), 0x4bdecfa9, bytes_to_int32(databytes, ptr =
+ 16), 11);
        updateRun(fH(b, c, d), 0xf6bb4b60, bytes_to_int32(databytes, ptr =
+ 28), 16);
        updateRun(fH(b, c, d), 0xbebfbc70, bytes_to_int32(databytes, ptr =
+ 40), 23);
        updateRun(fH(b, c, d), 0x289b7ec6, bytes_to_int32(databytes, ptr =
+ 52), 4);
        updateRun(fH(b, c, d), 0xeaa127fa, bytes_to_int32(databytes, =
ptr), 11);
        updateRun(fH(b, c, d), 0xd4ef3085, bytes_to_int32(databytes, ptr =
+ 12), 16);
        updateRun(fH(b, c, d), 0x4881d05, bytes_to_int32(databytes, ptr =
+ 24), 23);
        updateRun(fH(b, c, d), 0xd9d4d039, bytes_to_int32(databytes, ptr =
+ 36), 4);
        updateRun(fH(b, c, d), 0xe6db99e5, bytes_to_int32(databytes, ptr =
+ 48), 11);
        updateRun(fH(b, c, d), 0x1fa27cf8, bytes_to_int32(databytes, ptr =
+ 60), 16);
        updateRun(fH(b, c, d), 0xc4ac5665, bytes_to_int32(databytes, ptr =
+ 8), 23);
        updateRun(fI(b, c, d), 0xf4292244, bytes_to_int32(databytes, =
ptr), 6);
        updateRun(fI(b, c, d), 0x432aff97, bytes_to_int32(databytes, ptr =
+ 28), 10);
        updateRun(fI(b, c, d), 0xab9423a7, bytes_to_int32(databytes, ptr =
+ 56), 15);
        updateRun(fI(b, c, d), 0xfc93a039, bytes_to_int32(databytes, ptr =
+ 20), 21);
        updateRun(fI(b, c, d), 0x655b59c3, bytes_to_int32(databytes, ptr =
+ 48), 6);
        updateRun(fI(b, c, d), 0x8f0ccc92, bytes_to_int32(databytes, ptr =
+ 12), 10);
        updateRun(fI(b, c, d), 0xffeff47d, bytes_to_int32(databytes, ptr =
+ 40), 15);
        updateRun(fI(b, c, d), 0x85845dd1, bytes_to_int32(databytes, ptr =
+ 4), 21);
        updateRun(fI(b, c, d), 0x6fa87e4f, bytes_to_int32(databytes, ptr =
+ 32), 6);
        updateRun(fI(b, c, d), 0xfe2ce6e0, bytes_to_int32(databytes, ptr =
+ 60), 10);
        updateRun(fI(b, c, d), 0xa3014314, bytes_to_int32(databytes, ptr =
+ 24), 15);
        updateRun(fI(b, c, d), 0x4e0811a1, bytes_to_int32(databytes, ptr =
+ 52), 21);
        updateRun(fI(b, c, d), 0xf7537e82, bytes_to_int32(databytes, ptr =
+ 16), 6);
        updateRun(fI(b, c, d), 0xbd3af235, bytes_to_int32(databytes, ptr =
+ 44), 10);
        updateRun(fI(b, c, d), 0x2ad7d2bb, bytes_to_int32(databytes, ptr =
+ 8), 15);
        updateRun(fI(b, c, d), 0xeb86d391, bytes_to_int32(databytes, ptr =
+ 36), 21);

        // update buffers
        h0 =3D _add(h0, a);
        h1 =3D _add(h1, b);
        h2 =3D _add(h2, c);
        h3 =3D _add(h3, d);
    }
    // Done! Convert buffers to 128 bit (LE)
    return int128le_to_hex(h3, h2, h1, h0).toUpperCase();
};

/*******=C6=E4=CB=FC=D5=BE=B4=E6=B4=A2cookie  begin******/
var eduUrl =3D 'http://edu.51cto.com'; //edu=D3=F2=C3=FB
var eduCurUrl =3D window.location.href; //=B5=B1=C7=B0=D2=B3=C3=E6

setCookieOther =3D function(name, value, iDay){ //=C9=E8=D6=C3cookie
	var oDate =3D new Date();
	oDate.setTime(oDate.getTime() + iDay*24*60*60*1000);=20
	var dateStr =3D ( iDay =3D=3D 0 ) ? '' : =
';expires=3D'+oDate.toGMTString();
	document.cookie =3D =
name+'=3D'+value+dateStr+";domain=3D51cto.com"+';path=3D/';
}
=09
randomCharOther =3D function(n){  =
//=C8=A1=B3=F6=CB=E6=BB=FA=B2=BB=D6=D8=B8=B4=B5=C4cookie
	var  x=3D"qwertyuioplkjhgfdsazxcvbnmABCDEFGHIGKLMNOPQRSTUVWXYZ";
	var  tmp=3D"";
	var timestamp =3D new Date().getTime(); //=BA=C1=C3=EB=CA=FD
	var appname =3D navigator.appName; //=E4=AF=C0=C0=C6=F7=C0=E0=D0=CD
	var appVersion =3D navigator.appVersion; =
//=E4=AF=C0=C0=C6=F7=B0=E6=B1=BE
	var userAgent =3D navigator.userAgent.replace(/;/g,':');  =
//=D3=C3=BB=A7=B4=FA=C0=ED
	var random =3D Math.floor(Math.random()*1000000);

	for(var  i=3D0;i<n;i++)  {
		tmp  +=3D x.charAt(Math.floor(Math.random()*x.length));
	}
	return  faultylabs.MD5(timestamp+userAgent+random)+tmp;  =
//MD5=BC=D3=C3=DC
}

isCookieOther =3D function(name){
	var arr =3D document.cookie.match(new RegExp("(^| )" + name
				 + "=3D([^;]*)(;|$)"));				=20
	if(arr =3D=3D null){
		setCookieOther(name,randomCharOther(4),3650);
	}
}

//=D1=A7=D4=BA=CD=E2=C6=E4=CB=FB=D5=BE=B4=E6=B4=A2cookie
if(eduCurUrl.indexOf(eduUrl) =3D=3D '-1'){
	isCookieOther('www51cto') ;=20
}

/*******=C6=E4=CB=FC=D5=BE=B4=E6=B4=A2cookie  end******/


/*************************=CA=FD=BE=DD=B7=D6=CE=F6 =
begin**********************************/



/*************************=CA=B6=B1=F0=B9=E3=B8=E6=CE=BB=D6=C3 =
begin**********************************/

(function($) {=20
  $(function() {
    // =CA=B9=D3=C3 $ =D7=F7=CE=AA jQuery =B1=F0=C3=FB=B5=C4=B4=FA=C2=EB
  								=09
var urls =3D new Array('www.51cto.com/', =
'home.51cto.com/index.php?s=3D/Index/index/reback/http%253A%252F%252Flove=
lace.blog.51cto.com%252F1028430%252F1600594/','bbs.51cto.com/','bbs.51cto=
.com/thread-1133589-1.html','bbs.51cto.com/forumdisplay.php?fid=3D57','do=
wn.51cto.com/','down.51cto.com/zt','down.51cto.com/zt/7020','down.51cto.c=
om/data/1970237','down.51cto.com/search.php?q=3Dspark','down.51cto.com/cr=
edits','home.51cto.com/index.php?s=3D/space/8976740','home.51cto.com/inde=
x.php?s=3D/Home/index','home.51cto.com/index.php?s=3D/Notify/inbox','home=
.51cto.com/apps/download/index.php?s=3D/Index/index/','home.51cto.com/app=
s/book/index.php?s=3D/Index/good','lovelace.blog.51cto.com/1028430/160059=
4','blog.51cto.com/blogcommend','blog.51cto.com/','aresy.blog.51cto.com/5=
100031/1600956','shayi1983.blog.51cto.com/4681835/1598662','blog.51cto.co=
m/expert','down.51cto.com/upload','book.51cto.com/','developer.51cto.com/=
','www.cioage.com/','mobile.51cto.com/','mobile.51cto.com/ahot-463852.htm=
','developer.51cto.com/embed/','cloud.51cto.com/','virtual.51cto.com/','o=
s.51cto.com/','server.51cto.com/','database.51cto.com/','developer.51cto.=
com/web/','developer.51cto.com/java/','netsecurity.51cto.com/','network.5=
1cto.com/','zyedu.51cto.com/');
//=C3=AA=B5=E3=CA=FD=D7=E9
var hashs =3D new Array();
hashs[0] =3D new Array('#51ctotestforvalueadvertisement38', =
'#51ctotestforvalueadvertisement72','#51ctotestforvalueadvertisement73','=
#51ctotestforvalueadvertisement74','#51ctotestforvalueadvertisement163','=
#51ctotestforvalueadvertisement164','#51ctotestforvalueadvertisement154',=
'#51ctotestforvalueadvertisement155');
hashs[1] =3D new Array('#51ctotestforvalueadvertisement77');
hashs[2] =3D new =
Array('#51ctotestforvalueadvertisement49','#51ctotestforvalueadvertisemen=
t75','#51ctotestforvalueadvertisement78','#51ctotestforvalueadvertisement=
114','#51ctotestforvalueadvertisement147','#51ctotestforvalueadvertisemen=
t169','#51ctotestforvalueadvertisement156');
hashs[3] =3D new =
Array('#51ctotestforvalueadvertisement52','#51ctotestforvalueadvertisemen=
t102','#51ctotestforvalueadvertisement103','#51ctotestforvalueadvertiseme=
nt104');
hashs[4] =3D new =
Array('#51ctotestforvalueadvertisement53','#51ctotestforvalueadvertisemen=
t54');
hashs[5] =3D new =
Array('#51ctotestforvalueadvertisement55','#51ctotestforvalueadvertisemen=
t56','#51ctotestforvalueadvertisement62','#51ctotestforvalueadvertisement=
79','#51ctotestforvalueadvertisement81','#51ctotestforvalueadvertisement8=
2','#51ctotestforvalueadvertisement113','#51ctotestforvalueadvertisement1=
68','#51ctotestforvalueadvertisement157');
hashs[6] =3D new =
Array('#51ctotestforvalueadvertisement57','#51ctotestforvalueadvertisemen=
t58','#51ctotestforvalueadvertisement86');
hashs[7] =3D new =
Array('#51ctotestforvalueadvertisement61','#51ctotestforvalueadvertisemen=
t87');
hashs[8] =3D new Array('#51ctotestforvalueadvertisement84');
hashs[9] =3D new Array('#51ctotestforvalueadvertisement159');
hashs[10] =3D new Array('#51ctotestforvalueadvertisement88');
hashs[11] =3D new =
Array('#51ctotestforvalueadvertisement65','#51ctotestforvalueadvertisemen=
t96','#51ctotestforvalueadvertisement99');
hashs[12] =3D new =
Array('#51ctotestforvalueadvertisement98','#51ctotestforvalueadvertisemen=
t100','#51ctotestforvalueadvertisement101');
hashs[13] =3D new Array('#51ctotestforvalueadvertisement105');
hashs[14] =3D new Array('#51ctotestforvalueadvertisement106');
hashs[15] =3D new Array('#51ctotestforvalueadvertisement107');
//hashs[16] =3D new Array('#51ctotestforvalueadvertisement68');
hashs[17] =3D new Array('#51ctotestforvalueadvertisement95');
hashs[18] =3D new =
Array('#51ctotestforvalueadvertisement67','#51ctotestforvalueadvertisemen=
t90','#51ctotestforvalueadvertisement112','#51ctotestforvalueadvertisemen=
t170','#51ctotestforvalueadvertisement171');
hashs[19] =3D new Array('#51ctotestforvalueadvertisement91');
hashs[20] =3D new =
Array('#51ctotestforvalueadvertisement92','#51ctotestforvalueadvertisemen=
t93');
hashs[21] =3D new Array('#51ctotestforvalueadvertisement94');
hashs[22] =3D new Array('#51ctotestforvalueadvertisement158');
hashs[23] =3D new Array('#51ctotestforvalueadvertisement149');
hashs[24] =3D new =
Array('#51ctotestforvalueadvertisement89','#51ctotestforvalueadvertisemen=
t133','#51ctotestforvalueadvertisement135','#51ctotestforvalueadvertiseme=
nt136');
hashs[25] =3D new Array('#51ctotestforvalueadvertisement110');
hashs[26] =3D new =
Array('#51ctotestforvalueadvertisement116','#51ctotestforvalueadvertiseme=
nt152');
hashs[27] =3D new Array('#51ctotestforvalueadvertisement166');
hashs[28] =3D new Array('#51ctotestforvalueadvertisement118');
hashs[29] =3D new =
Array('#51ctotestforvalueadvertisement119','#51ctotestforvalueadvertiseme=
nt120','#51ctotestforvalueadvertisement121');
hashs[30] =3D new Array('#51ctotestforvalueadvertisement122');
hashs[31] =3D new =
Array('#51ctotestforvalueadvertisement124','#51ctotestforvalueadvertiseme=
nt125','#51ctotestforvalueadvertisement126','#51ctotestforvalueadvertisem=
ent127','#51ctotestforvalueadvertisement128');
hashs[32] =3D new =
Array('#51ctotestforvalueadvertisement129','#51ctotestforvalueadvertiseme=
nt130');
hashs[33] =3D new =
Array('#51ctotestforvalueadvertisement131','#51ctotestforvalueadvertiseme=
nt132');
hashs[34] =3D new =
Array('#51ctotestforvalueadvertisement137','#51ctotestforvalueadvertiseme=
nt148','#51ctotestforvalueadvertisement138');
hashs[35] =3D new =
Array('#51ctotestforvalueadvertisement139','#51ctotestforvalueadvertiseme=
nt140','#51ctotestforvalueadvertisement141','#51ctotestforvalueadvertisem=
ent142');
hashs[36] =3D new =
Array('#51ctotestforvalueadvertisement143','#51ctotestforvalueadvertiseme=
nt144');
hashs[37] =3D new =
Array('#51ctotestforvalueadvertisement145','#51ctotestforvalueadvertiseme=
nt150','#51ctotestforvalueadvertisement153');

hashs[38] =3D new Array('#51ctotestforvalueadvertisement10000'); =
//=B2=E2=CA=D4=D3=C3=B5=C4


//=B5=F7=D7=AA=B5=BD=B5=C4=CE=BB=D6=C3=CA=FD=D7=E9
var jumpToDoms =3D new Array();
jumpToDoms[0] =3D new Array($(".f2 =
ul").children(":last"),$('.txtScroll-left'),$('.r2-r'),$('.act-list'),$('=
.adbox') , $('#ad_7'),$('.tab'),$('.subnav dl') );
jumpToDoms[1] =3D new Array( $('.loginImg'));
jumpToDoms[2] =3D new Array( $('.focus_btm') , $('.searchtag') =
,$('.h294').next() ,$('.links') , $('.navbox') , $('#banner_top') , =
$('.title02 p') );=20
jumpToDoms[3] =3D new Array( $('.relate_subject').prev() , $('.vbox') =
,$('.online').next() ,$('.postinfo06a') ); =
//=C2=DB=CC=B3=CC=FB=D7=D3=D2=B3=B9=E3=B8=E6=CD=BC
jumpToDoms[4] =3D new Array( $('.flabox'),$('#ad_plate img'));
jumpToDoms[5] =3D new Array( $('.flash') , $('.service_list'), $('#ld') =
,$('.nav') , $('#midd .tit') , $('.down') , $('#link') , $('#ad_down_2') =
, $('.head_soso_tag') );
jumpToDoms[6] =3D new Array( $('.banner_head') , $('.ad225') , =
$('.border02'));
jumpToDoms[7] =3D new Array( $('.ad225') , $('.vbox') );
jumpToDoms[8] =3D new Array( $('#right') );
jumpToDoms[9] =3D new Array( =
$('.soso_leftbar').children(":last").find('img') );
jumpToDoms[10] =3D new Array( $('.yBar') );
jumpToDoms[11] =3D new Array( $('.ad_top') , $('#user_app_hide') , =
$('.Feed')  );
jumpToDoms[12] =3D new Array( $('#coursetab_0') , $('#gonggao') , =
$('.nav_sub') );
jumpToDoms[13] =3D new Array( $('.tab-menu').children().next()  );
jumpToDoms[14] =3D new Array( $('.tab-menu').children().next()  );
jumpToDoms[15] =3D new Array( =
$('.tab-menu').children().next().find('span')  );
//jumpToDoms[16] =3D new Array( $('#message_content')  );
jumpToDoms[17] =3D new Array( $('.addlink')  );
jumpToDoms[18] =3D new Array( $('.heiban') , $('.oneright #sddm').next() =
,$('.fri') , $('#ad_blog_1') , $("#ad_blog_6") );
jumpToDoms[19] =3D new Array( $('.edu-col-b')  );
jumpToDoms[20] =3D new Array( $('.friendLink') , $('.relatedArt') );
jumpToDoms[21] =3D new Array( $('.fl').next().next()  );
jumpToDoms[22] =3D new Array( $('.ad221')  );
jumpToDoms[23] =3D new Array( $('#search')  );
jumpToDoms[24] =3D new Array( =
$('.main-right').children().next().next().next() ,$('.channel_hot') , =
$('.hot-tags') , $('.my-links') );
jumpToDoms[25] =3D new Array( $('.cio_920_top3') );
jumpToDoms[26] =3D new Array( $('.border02') , $('#navmenu') );
jumpToDoms[27] =3D new Array( $('.focus').find('iframe') );
jumpToDoms[28] =3D new Array( $('.hot') );
jumpToDoms[29] =3D new Array( $('.nav') , =
$('#right').children().next().next().next() , $('#link') );
jumpToDoms[30] =3D new Array( $('.left1') );
jumpToDoms[31] =3D new Array( $('.inmenu_foot'), $('.channels') , =
$('#edu_p') , $('#link') , $('#S_tequan') );
jumpToDoms[32] =3D new Array( $('.nav_info'), $('.linkslist') );
jumpToDoms[33] =3D new Array( $('.so_l') , $('#link') );
jumpToDoms[34] =3D new Array( $('.navTag') , $('.hottag') , $('.seatag') =
);
jumpToDoms[35] =3D new Array( $('.inmenu_foot') , $('.tag') , $('.to') , =
$('#right .con') );
jumpToDoms[36] =3D new Array( $('.Interactive') , =
$('#link').next().next() );
jumpToDoms[37] =3D new Array( $('#S_tequan').next() , $('.bbs') =
,$('.zhuan_qu') );

jumpToDoms[38] =3D new Array( $('.Footer') ); //=B2=E2=CA=D4=D3=C3=B5=C4


for (var i =3D 0; i < urls.length; i++) {
  var hosts =3D location.host + location.pathname + location.search;

  if (hosts =3D=3D urls[i]) {
   =20
    for (var o =3D 0; o < hashs[i].length; o++) {
     =20
      if (hashs[i][o] =3D=3D location.hash) {
      =20
        $(window).scrollTop(jumpToDoms[i][o].offset().top);
        var xxx =3D $('<div></div>');
        xxx.css({
          'border': '2px solid blue',
          'position': 'absolute',
          'top': jumpToDoms[i][o].offset().top,
          'left': jumpToDoms[i][o].offset().left,
          'width': jumpToDoms[i][o].width(),
          'height': jumpToDoms[i][o].height(),
          'z-index': '100000'
        });
        $('body').append(xxx);
        var t =3D 800;
		$(xxx).fadeOut(t, function () {
          $(this).fadeIn(t, function () {
            $(this).fadeOut(t, function () {
              $(this).fadeIn(t, function () {
                $(this).fadeOut(t, function () {
                  $(this).fadeIn(t,function () {
					$(this).fadeOut(t,function () {
					  $(this).fadeIn(t, function () {
						$(this).fadeOut(t, function () {
						  $(this).fadeIn(t, function () {
							$(this).fadeOut(t, function () {
							  $(this).fadeIn(t,function () {
								$(this).fadeOut(t,function () {
								  $(this).fadeIn(t, function () {
									$(this).fadeOut(t, function () {
									  $(this).fadeIn(t,function () {
										$(this).fadeOut(t,function () {
											$(this).remove();
										})
									  })
									});
								  });
								})
							  })
							});
						  });
						});
					  });
					})
				  })
                });
              });
            });
          });
        }); =20
	=09
      }
	 =20
    }
  }
}

});
})(jQuery);=09

/*************************=CA=B6=B1=F0=B9=E3=B8=E6=CE=BB=D6=C3 =
end**********************************/

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu//blog/js/jquery.cookie.js

/*!=0A=
 * jQuery Cookie Plugin v1.4.1=0A=
 * https://github.com/carhartl/jquery-cookie=0A=
 *=0A=
 * Copyright 2013 Klaus Hartl=0A=
 * Released under the MIT license=0A=
 */=0A=
(function (factory) {=0A=
	if (typeof define =3D=3D=3D 'function' && define.amd) {=0A=
		// AMD=0A=
		define(['jquery'], factory);=0A=
	} else if (typeof exports =3D=3D=3D 'object') {=0A=
		// CommonJS=0A=
		factory(require('jquery'));=0A=
	} else {=0A=
		// Browser globals=0A=
		factory(jQuery);=0A=
	}=0A=
}(function ($) {=0A=
=0A=
	var pluses =3D /\+/g;=0A=
=0A=
	function encode(s) {=0A=
		return config.raw ? s : encodeURIComponent(s);=0A=
	}=0A=
=0A=
	function decode(s) {=0A=
		return config.raw ? s : decodeURIComponent(s);=0A=
	}=0A=
=0A=
	function stringifyCookieValue(value) {=0A=
		return encode(config.json ? JSON.stringify(value) : String(value));=0A=
	}=0A=
=0A=
	function parseCookieValue(s) {=0A=
		if (s.indexOf('"') =3D=3D=3D 0) {=0A=
			// This is a quoted cookie as according to RFC2068, unescape...=0A=
			s =3D s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');=0A=
		}=0A=
=0A=
		try {=0A=
			// Replace server-side written pluses with spaces.=0A=
			// If we can't decode the cookie, ignore it, it's unusable.=0A=
			// If we can't parse the cookie, ignore it, it's unusable.=0A=
			s =3D decodeURIComponent(s.replace(pluses, ' '));=0A=
			return config.json ? JSON.parse(s) : s;=0A=
		} catch(e) {}=0A=
	}=0A=
=0A=
	function read(s, converter) {=0A=
		var value =3D config.raw ? s : parseCookieValue(s);=0A=
		return $.isFunction(converter) ? converter(value) : value;=0A=
	}=0A=
=0A=
	var config =3D $.cookie =3D function (key, value, options) {=0A=
=0A=
		// Write=0A=
=0A=
		if (value !=3D=3D undefined && !$.isFunction(value)) {=0A=
			options =3D $.extend({}, config.defaults, options);=0A=
=0A=
			if (typeof options.expires =3D=3D=3D 'number') {=0A=
				var days =3D options.expires, t =3D options.expires =3D new Date();=0A=
				t.setTime(+t + days * 864e+5);=0A=
			}=0A=
=0A=
			return (document.cookie =3D [=0A=
				encode(key), '=3D', stringifyCookieValue(value),=0A=
				options.expires ? '; expires=3D' + options.expires.toUTCString() : =
'', // use expires attribute, max-age is not supported by IE=0A=
				options.path    ? '; path=3D' + options.path : '',=0A=
				options.domain  ? '; domain=3D' + options.domain : '',=0A=
				options.secure  ? '; secure' : ''=0A=
			].join(''));=0A=
		}=0A=
=0A=
		// Read=0A=
=0A=
		var result =3D key ? undefined : {};=0A=
=0A=
		// To prevent the for loop in the first place assign an empty array=0A=
		// in case there are no cookies at all. Also prevents odd result when=0A=
		// calling $.cookie().=0A=
		var cookies =3D document.cookie ? document.cookie.split('; ') : [];=0A=
=0A=
		for (var i =3D 0, l =3D cookies.length; i < l; i++) {=0A=
			var parts =3D cookies[i].split('=3D');=0A=
			var name =3D decode(parts.shift());=0A=
			var cookie =3D parts.join('=3D');=0A=
=0A=
			if (key && key =3D=3D=3D name) {=0A=
				// If second argument (value) is a function it's a converter...=0A=
				result =3D read(cookie, value);=0A=
				break;=0A=
			}=0A=
=0A=
			// Prevent storing a cookie that we couldn't decode.=0A=
			if (!key && (cookie =3D read(cookie)) !=3D=3D undefined) {=0A=
				result[name] =3D cookie;=0A=
			}=0A=
		}=0A=
=0A=
		return result;=0A=
	};=0A=
=0A=
	config.defaults =3D {};=0A=
=0A=
	$.removeCookie =3D function (key, options) {=0A=
		if ($.cookie(key) =3D=3D=3D undefined) {=0A=
			return false;=0A=
		}=0A=
=0A=
		// Must not alter options, thus extending a fresh object...=0A=
		$.cookie(key, '', $.extend({}, options, { expires: -1 }));=0A=
		return !$.cookie(key);=0A=
	};=0A=
=0A=
}));=0A=

------=_NextPart_000_0000_01D44693.D2A320F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static1.51cto.com/edu/blog/js/time-on-page.js?v=1.0.2

var WEB_USER_TIME =3D 'WEB_USER_TIME';=0A=
var timerFlag =3D true;=0A=
var operaFlag =3D true;=0A=
window.onload =3D function() {=0A=
  initInfo();=0A=
};=0A=
=0A=
function initInfo() {=0A=
  // =E7=99=BB=E5=BD=95=E5=88=A4=E6=96=AD=0A=
  if (!uid) {=0A=
    //console.log('=E6=9C=AA=E7=99=BB=E5=BD=95');=0A=
    return;=0A=
  }=0A=
  // =
=E5=88=B7=E6=96=B0=E6=88=96=E9=87=8D=E6=96=B0=E6=89=93=E5=BC=80=E7=9A=84=E5=
=AE=89=E5=85=A8=E6=97=B6=E9=97=B4=0A=
  var keepTimeStep =3D 30 * 1000;=0A=
=0A=
  var temp =3D $.cookie(WEB_USER_TIME);=0A=
  if (!temp) {=0A=
    temp =3D {=0A=
      num: 1,=0A=
      uid: uid,=0A=
      startTime: new Date()=0A=
    };=0A=
  } else if (temp.num <=3D 0 && new Date().getTime() - new =
Date(temp.endTime) < keepTimeStep) {=0A=
    // =
=E4=B8=8A=E6=AC=A1=E5=85=B3=E9=97=AD30=E7=A7=92=E5=86=85=EF=BC=8C=E4=BD=BF=
=E7=94=A8=E5=8E=9F=E6=9C=89=E7=9A=84startTime=0A=
    temp =3D {=0A=
      num: 1,=0A=
      uid: uid,=0A=
      startTime: temp.startTime=0A=
    };=0A=
  } else {=0A=
    // =
=E5=BC=80=E5=90=AF=E6=96=B0=E9=A1=B5=E9=9D=A2=EF=BC=8C=E7=BB=9F=E8=AE=A1=E4=
=B8=8Bpage=0A=
    temp =3D {=0A=
      num: temp.num + 1,=0A=
      uid: uid,=0A=
      startTime: temp.startTime=0A=
    };=0A=
  }=0A=
=0A=
  $.cookie(WEB_USER_TIME, JSON.stringify(temp), {=0A=
    expires: 7,=0A=
    path: '/'=0A=
  });=0A=
=0A=
  timeUserFun(5);=0A=
}=0A=
// ajax=0A=
function updateAction(isAsync, during) {=0A=
  var _that =3D this;=0A=
  _that.count =3D 0;=0A=
  timerFlag =3D false;=0A=
  =
//console.log('=E6=89=A7=E8=A1=8C=E9=98=85=E8=AF=BB=E6=97=B6=E9=97=B4=E8=AE=
=A1=E6=97=B6');=0A=
=0A=
  if (_that.timer) {=0A=
    _that.count =3D 0;=0A=
    =
//console.log('=E6=B8=85=E9=99=A4=E5=AE=9A=E6=97=B6=E5=99=A8'+_that.count=
);=0A=
    clearInterval(_that.timer);=0A=
  }=0A=
=0A=
  _that.timer =3D setInterval(function() {=0A=
    timerFlag =3D false;=0A=
    if (!operaFlag) {=0A=
      return;=0A=
    }=0A=
    $.ajax({=0A=
      url: BLOG_URL + 'pv-log/at',=0A=
      type: 'get',=0A=
      dataType: 'json',=0A=
      async: isAsync,=0A=
      success: function(e) {=0A=
        _that.count++;=0A=
        =
//console.log('=E6=A8=A1=E6=8B=9F=E5=BC=82=E6=AD=A5=E8=AF=B7=E6=B1=82'+ =
_that.count);=0A=
        timerFlag =3D true;=0A=
      }=0A=
    });=0A=
  }, during);=0A=
}=0A=
=0A=
function closeHandler(e) {=0A=
  var temp =3D JSON.parse($.cookie(WEB_USER_TIME));=0A=
  if (!temp || temp.num < 0) {=0A=
    return false;=0A=
  } else {=0A=
    temp =3D {=0A=
      num: temp.num - 1 <=3D 0 ? 0 : temp.num - 1,=0A=
      startTime: temp.startTime=0A=
    };=0A=
  }=0A=
=0A=
  if (temp.num =3D=3D=3D 0 && operaFlag && uid) {=0A=
    $.ajax({=0A=
      url: BLOG_URL + 'pv-log/at',=0A=
      type: 'get',=0A=
      dataType: 'json',=0A=
      async: false,=0A=
      success: function(e) {=0A=
        =
//console.log('=E9=A1=B5=E9=9D=A2=E5=85=B3=E9=97=AD=E6=8E=A5=E5=8F=A3=E5=9B=
=9E=E8=B0=83=E4=BF=A1=E6=81=AF=EF=BC=9A' + e.msg);=0A=
      }=0A=
    });=0A=
    temp.endTime =3D new Date();=0A=
    $.cookie(WEB_USER_TIME, JSON.stringify(temp), {=0A=
      expires: 7,=0A=
      path: '/'=0A=
    });=0A=
  }=0A=
}=0A=
=0A=
window.onunload =3D closeHandler;=0A=
=0A=
function timeUserFun (time) {=0A=
  var time =3D time || 2;=0A=
  var userTime =3D time * 60;=0A=
  var objTime =3D {=0A=
    init: 0,=0A=
    time: function() {=0A=
      objTime.init +=3D 1;=0A=
      if (objTime.init =3D=3D userTime) {=0A=
        //console.log('=E6=9C=AA=E6=93=8D=E4=BD=9Clog') // =
=E7=94=A8=E6=88=B7=E5=88=B0=E8=BE=BE=E6=9C=AA=E6=93=8D=E4=BD=9C=E4=BA=8B=E4=
=BB=B6 =E5=81=9A=E4=B8=80=E4=BA=9B=E5=A4=84=E7=90=86=0A=
        operaFlag =3D false;=0A=
      }=0A=
    },=0A=
    eventFun: function() {=0A=
      operaFlag =3D true;=0A=
      clearInterval(testUser);=0A=
=0A=
      var tempTime =3D objTime.init >=3D time ? 0 : objTime.init;=0A=
      objTime.init =3D 0;=0A=
      testUser =3D setInterval(objTime.time, 1000);=0A=
=0A=
      if (timerFlag) {=0A=
        debounce(updateAction(true, 1000*60*5 - 1000*60*tempTime), 1000 =
* 10);=0A=
      }=0A=
    }=0A=
  };=0A=
  var testUser =3D setInterval(objTime.time, 1000);=0A=
=0A=
  var body =3D document.querySelector('html');=0A=
  body.addEventListener("click", objTime.eventFun);=0A=
  body.addEventListener("keydown", objTime.eventFun);=0A=
  body.addEventListener("mousemove", objTime.eventFun);=0A=
  body.addEventListener("mousewheel", objTime.eventFun);=0A=
}=0A=
// =E5=87=BD=E6=95=B0=E5=8E=BB=E6=8A=96=0A=
function debounce(func, delay) {=0A=
  var timer =3D null;=0A=
  var context =3D this;=0A=
=0A=
  return function() {=0A=
    var args =3D arguments;=0A=
    if (timer) {=0A=
      clearTimeout(timer);=0A=
    }=0A=
    timer =3D setTimeout(function() {=0A=
      func.apply(context, args);=0A=
    }, delay);=0A=
  };=0A=
}=0A=

------=_NextPart_000_0000_01D44693.D2A320F0--
